<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ServerName" elementType="Argument">
            <stringProp name="Argument.name">ServerName</stringProp>
            <stringProp name="Argument.value">appsrv0ha</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CT" elementType="Argument">
            <stringProp name="Argument.name">CT</stringProp>
            <stringProp name="Argument.value">${__Random(2000,3000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="KoerberOne_UserDeffinedVarible" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="01_ASN_Receive" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login_TD_Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/Ajith/TestData/VNP_TD/ASN_LoginScreen_TD.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">TN,TN_Encode,UserName,Pwd,ForkLift</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Launch_URL" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessStartRequest?inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessStartRequest?inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1993470653">Advantage Application Server Name</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T02_DeviceDetails" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_DeviceDetails_1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessConnectionForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="NC_value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">NC_value</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_DeviceDetails_2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessRequest?server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessRequest?server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN_Encode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T03_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Enter_UserId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessRequest?server_name=${ServerName}&amp;port_number=4800&amp;terminal_name=${TN_Encode}&amp;screen_size=8x20&amp;inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Enter Password" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${Pwd}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${UserName}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Enter_EquipName" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${ForkLift}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=A&amp;inputdata=123</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="EquipName_Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1987072417">CHOICE</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T04_MainScreen" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Mainscreen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=PTFL02</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1987072417">CHOICE</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T05_ASN_Page" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_ASNreceiptPage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2136014">Door</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="ASN_LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">25</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="ASN_Mianscreen_TD" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Ajith/TestData/VNP_TD/ASN_Mainscreen_TD.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">Door,Trailer, SealNum,MLP,Staging</stringProp>
          </CSVDataSet>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T06_DoorNumber" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Enter_DoorNumber" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${Door}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-349232877">TRAILER</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T07_TrailerNum" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_TrailerNum" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${Trailer}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=AMBDKD001</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2541053">SEAL</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T08_SealNum" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Enter_SealNum" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${SealNum}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=Z23455</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="76433">MLP</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T09_Scan_LP" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Scan_LP_MLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${MLP}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=ZZ654325</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1611296843">LOCATION</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T10_Staging" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Staging_Location" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">${Staging}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=L55667792</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="67081517">Empty</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T11_TrailerEmptyCheck" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_TrailerEmpt_Confirmation" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=C01005B</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="65203672">Close</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T12_CloseReceipt" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Enter_DoorNumber" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">${Door}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=Y</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1679196512">Confirm</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T13_TransactionComplete" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_TransComplete_confirmation" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1611296843">LOCATION</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T14_PreviousPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Goback1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Goback2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_BK02&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Back_1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ig_Back_2" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Ig_Back2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ig_Back_3" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Ig_Back3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${CT}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ig_Back_4" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Ig_Back4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Back_5" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ig_Back5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${CT}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_ASN_T15_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_GoBack" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="01_Confirm_Logout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="570819984">USER ID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${__Random(3000,6000)}</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="02_ItemMove_Putaway" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PutAway_Login_TD" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/Ajith/TestData/VNP_TD/PutAway_TD.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">TN,TN_Encode	,UserName,Password,ForkLift</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Launch_Url" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessStartRequest?inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessStartRequest?inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T02_DeviceDetails" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_DeviceDetails_1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessConnectionForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="NC_value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">NC_value</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_DeviceDetails_2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessRequest?server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessRequest?server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN_Encode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T03_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_UserId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessRequest?server_name=${ServerName}&amp;port_number=4800&amp;terminal_name=${TN_Encode}&amp;screen_size=8x20&amp;inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1999612571">PASSWORD</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Password" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${UserName}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Forklift" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${ForkLift}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=A&amp;inputdata=${Password}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T04_MainScreen" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_MainScreen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${UserName}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1987072417">CHOICE</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T05_ItemMoveSelect" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_ItemMove_Option" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=2</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2570909">Scan</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">27</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Putaway_Mainscreen_TD" enabled="true">
            <stringProp name="filename">C:/Ajith/TestData/VNP_TD/PutAway_Mainscreen_TD.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">LP,ItemId</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T06_LP" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Enter_LP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${LP}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2257683">ITEM</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T08_ItemId" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Enter_ItemId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">${ItemId}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${LP}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2204">EA</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${CT}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T09_Qty" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Enter_Qty" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">10</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${ItemId}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1611296843">LOCATION</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${CT}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">RegEx_Dest_Location</stringProp>
                <stringProp name="RegexExtractor.regex">Go to location (.*?) &lt;br /&gt;and scan</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">NF</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T10_DestinationLocation" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_goTolocation" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">${RegEx_Dest_Location}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=10</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${CT}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T11_CheckDigit" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check Digit" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">99</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_05&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=CACJ</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${CT}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T12_TransactionComplete" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_TransactionComplete" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=CAAJ</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="1392067191">Scan the source LP</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${CT}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T13_Back1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T14_Back2" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Back2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T15_Back3" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_back3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ig_Back1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Ig_back4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ig_Back2" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Ig_back5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Ig_Back3" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_Ig_back6" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S02_PutAway_T16_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="02_ConfirmY" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="03_LP Move" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="LP_Move_TD" enabled="true">
          <stringProp name="filename">C:/Ajith/TestData/VNP_TD/LP_Move_TD.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">TN,TN_Encode,UserName,Password,ForkLift </stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Launch_Url" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessStartRequest?inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessStartRequest?inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T02_DeviceDetails" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_DeviceDetails_1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessConnectionForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="NC_value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">NC_value</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_DeviceDetails_2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessRequest?server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessRequest?server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN_Encode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T03_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_UserId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessRequest?server_name=${ServerName}&amp;port_number=4800&amp;terminal_name=${TN_Encode}&amp;screen_size=8x20&amp;inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1999612571">PASSWORD</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Password" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${UserName}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Forklift" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${ForkLift}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=A&amp;inputdata=${Password}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T04_MainScreen" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Mainscreen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${ForkLift}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T05_LpMove" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Lpmove option" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=2</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="LP move Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2436">LP</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">30</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="LPMove_TestData" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Ajith/TestData/VNP_TD/LP_Move_Mainscreen_TD.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">LP_Num,Location_PND</stringProp>
          </CSVDataSet>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T06_LpNumber" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_LP_Number" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${LP_Num}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=2</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="LPNUM_Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1611296843">LOCATION</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T07_DestinationLocation" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Destination_Loc" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">${Location_PND}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${LP_Num}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-534801063">Complete</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${CT}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T08_TransactionComplete" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_TransComplete" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">${ServerName}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Location_PND}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="2436">LP</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${CT}</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Back_1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Back_2" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Back_3" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Back_4" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Back_5" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_Back5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Eqip}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S03_LpMove_T09_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="03_confirmY" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2614219">USER</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${__Random(3000,6000)}</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="04_Hold_Release" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Hold_Release_TD" enabled="true">
          <stringProp name="filename">C:/Ajith/TestData/VNP_TD/Hold_Release_TD.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">TN,TN_Encode,UserName,Password,ForkLift</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Launch_URL" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessStartRequest?inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessStartRequest?inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1993470653">Advantage Application Server Name</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T02_DeviceDetails" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_DeviceDetails_1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessConnectionForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="NC_value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">NC_value</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_DeviceDetails_2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessRequest?server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessRequest?server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN_Encode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T03_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_User Id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessRequest?server_name=${ServerName}&amp;port_number=4800&amp;terminal_name=${TN_Encode}&amp;screen_size=8x20&amp;inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1999612571">PASSWORD</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Password" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${TN}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Eqip" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${ForkLift}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=A&amp;inputdata=${Password}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1987072417">CHOICE</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T04_Mainscreen" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_MainScreen_1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=PTFL01</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_MainScreen_2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1987072417">CHOICE</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T05_Hold_Release" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Select_Hold_Release" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2255071">Hold</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T06_Hold&amp;Release" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Select_Hold_Release" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=2</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2436">LP</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="04_Hold_Release_Mainscreen_TD" enabled="true">
            <stringProp name="filename">C:/Ajith/TestData/VNP_TD/Hold_Release_Mainscreen_TD.csv</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="variableNames">LP_Num</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T07_Scan_LP" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Hold_LP Scan" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${LP_Num}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1881635260">REASON</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_T08_ReasonCode" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Hold_Show list" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">F8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=L55667800</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Hold_Select List" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1679196512">Confirm</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_T09_Hold_Confirmation" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Hold_Confirmation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=2</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1679196512">Confirm</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-534801063">Complete</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_T10_Trans_Complete" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Hold Transaction_Complete" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Release_T11_ScanLP_Release" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Scan Release" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${LP_Num}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1539719193">Release</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Release_T12_Release_ReasonCode" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Release Showlist" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">F8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=L55667800</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Release select list" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-551298755">released</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1679196512">Confirm</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Release_T13_Release_Confirmation" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Release_Confirmation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1679196512">Confirm</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Release_T14_Release_TransComplete_Confirmation" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Release Transaction complete" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T15_Back1" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T16_Back2" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Back2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T17_Back3" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Back3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Back4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-2013493333">LogOff</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S04_Hold_Release_T18_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="04_Confirm Y" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2614219">USER</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="05_LP_Sort" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="LPSort_TD" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/Ajith/TestData/VNP_TD/LP_Sort_TD.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">TN,TN_Encode,UserName,Password,ForkLift</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Launch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessStartRequest?inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessStartRequest?inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">appsrv0lfcsyst.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1993470653">Advantage Application Server Name</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T02_DeviceDetails" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_DeviceDetails1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessConnectionForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="NC_value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">NC_value</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_DeviceDetails2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessRequest?server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessRequest?server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN_Encode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="570819984">USER ID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T03_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_UserName" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessRequest?server_name=${ServerName}&amp;port_number=4800&amp;terminal_name=${TN_Encode}&amp;screen_size=8x20&amp;inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="570819984">USER ID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Password" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${UserName}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1999612571">PASSWORD</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Eqipment" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${ForkLift}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=A&amp;inputdata=${Password}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="316372689">Eqipment</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T04_Mainscreen" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Mainscreen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${UserName}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1987072417">CHOICE</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T05_LPSort" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_LpSort" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=2</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="2570909">Scan</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">30</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="LPSort_Mainscreen_TD" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Ajith/TestData/VNP_TD/LP_Sort_Mainscreen_TD.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">Source_LP,Destination_LP</stringProp>
          </CSVDataSet>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T06_LpScan" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Scan_Lp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${Source_LP}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1460809400">ITEM ID</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T07_ItemId" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Moveall" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">F4</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Source_LP}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2436">LP</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T08_DestinationLP" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Dest_Lp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${Destination_LP}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F4</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-534801063">Complete</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T09_TransactionComplete" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Trans_Compl" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">${ServerName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=${Destination_LP}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2570909">Scan</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T10_Back" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Back2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Back3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Back4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Back5" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S05_LpSort_T11_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="05_Confirm Y" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=${ServerName}&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="570819984">USER ID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="07_Inventory_Adjustment" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Inv_Adjustment_TD" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/Ajith/TestData/VNP_TD/InventoryAdjustment_TD.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">UserName,TN,TN_Encode,Eqip,Password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Launch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessStartRequest?inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessStartRequest?inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">appsrv0lfcsyst.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1993470653">Advantage Application Server Name</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T02_DeviceDetails" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_DeviceDetails1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessConnectionForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="NC_value" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">NC_value</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_DeviceDetails2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="ProcessRequest?server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ProcessRequest?server_name</stringProp>
                  <stringProp name="Argument.value">${ServerName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="port_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">port_number</stringProp>
                  <stringProp name="Argument.value">4800</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN_Encode}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="screen_size" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">screen_size</stringProp>
                  <stringProp name="Argument.value">8x20</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">empty</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://${URL}/webtrmgw/webtrmgw.dll?ProcessStartRequest?inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="570819984">USER ID</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T03_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_UID" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?ProcessRequest?server_name=APPSRV0HA&amp;port_number=4800&amp;terminal_name=${TN_Encode}&amp;screen_size=8x20&amp;inputdata=empty</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Password" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=${TN}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Eqip" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">${Eqip}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=A&amp;inputdata=12345</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T04_Mainscreen" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Mainscreen_F8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=${TN}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Inv_control" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=F8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T05_Inv_Adjust" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_page_down" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=WT_06&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_select_Inv_Adjust" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=7</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">39</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Inv_Adjustment_Mainscreen_TD" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Ajith/TestData/VNP_TD/InventoryAdjustment_Mainscreen_TD.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="variableNames">Location,ItemNumber </stringProp>
          </CSVDataSet>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T06_Inv_AdjustLocation" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Location" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">APPSRV0HA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${Location}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=3</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T07_Inv_AdjustItemId" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ItemId" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">APPSRV0HA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">${ItemNumber}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=${Location}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">cNewItem</stringProp>
                <stringProp name="RegexExtractor.regex">Item\? \(Y (.*?)\)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Not found</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">&quot;${cNewItem}&quot;==&quot;or N&quot;</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_NewItem?" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NewItem" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                      <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="terminal_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">terminal_name</stringProp>
                      <stringProp name="Argument.value">${TN}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="server_name" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">server_name</stringProp>
                      <stringProp name="Argument.value">APPSRV0HA</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="echo_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">echo_type</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="inputdata" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">inputdata</stringProp>
                      <stringProp name="Argument.value">Y</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=${ItemNumber}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                      <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T08_Inv_AdjustQty" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quantity" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">APPSRV0HA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=Y</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2074093">CODE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T09_Inv_AdjustReasonCode" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_ReasonCode_F8" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">APPSRV0HA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">F8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=10</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Select_ReasonCode" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">APPSRV0HA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=F8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1881635260">REASON</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T10_Inv_AdjustReasonText" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_ReasonText" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">APPSRV0HA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value">Count</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1679196512">Confirm</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T11_TransactionComplete" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Transaction Complete" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                    <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="terminal_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">terminal_name</stringProp>
                    <stringProp name="Argument.value">${TN}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="server_name" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">server_name</stringProp>
                    <stringProp name="Argument.value">APPSRV0HA</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="echo_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">echo_type</stringProp>
                    <stringProp name="Argument.value">Y</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="inputdata" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">inputdata</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=Count</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="81434961">VALUE</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${CT}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T11_Back" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Back1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Back2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Back3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">F1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${CT}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Inv_Adjustment_T12_Logoff" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="07_Logoff" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="MfcISAPICommand" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">MfcISAPICommand</stringProp>
                  <stringProp name="Argument.value">ProcessTerminalForm</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="terminal_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">terminal_name</stringProp>
                  <stringProp name="Argument.value">${TN}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="server_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">server_name</stringProp>
                  <stringProp name="Argument.value">APPSRV0HA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="echo_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">echo_type</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="inputdata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">inputdata</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">applbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/webtrmgw/webtrmgw.dll</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://applbha.kscnp-nprd.iaas.js-alz.com/webtrmgw/webtrmgw.dll?MfcISAPICommand=ProcessTerminalForm&amp;terminal_name=${TN}&amp;server_name=APPSRV0HA&amp;echo_type=Y&amp;inputdata=F1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.67 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${__Random(2000,3000)}</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="KO3_UI_InventorySearch_Item" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Default.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-33" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/hubs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-34" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657352333399</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-36" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetLogOnConfiguration?key=%27iislbha.kscnp-nprd.iaas.js-alz.com%27&amp;isWorkspace=false&amp;languageId=%27%27&amp;logOnParameters=%27%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T02_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-53" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657352372266</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-54" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;applicationId&quot;:&quot;HighJump One Platform&quot;,&quot;tenant&quot;:&quot;&quot;,&quot;userLogOnName&quot;:&quot;TCSTAJAR&quot;,&quot;userPassword&quot;:&quot;new12345&quot;,&quot;connectionType&quot;:&quot;platform&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LogOn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AuthToken1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_AuthToken1</stringProp>
              <stringProp name="RegexExtractor.regex">SerializedAuthenticationTicket&quot;:&quot;(.*?)&quot;,&quot;SSOProviderId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login_Data_Config" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="filename">C:/Deepika/Test Data/LoginData.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">UserName,password</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-55" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AuthToken2" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_AuthToken2</stringProp>
              <stringProp name="RegexExtractor.regex">SerializedAuthenticationTicket&quot;:&quot;(.*?)&quot;,&quot;SSOProviderId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_VerificationToken1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_VerificationToken1</stringProp>
              <stringProp name="RegexExtractor.regex">RequestVerificationToken&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-57" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657352330921</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-56" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetTenantConfiguration</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-60" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;About\&quot;,\&quot;UniqueId\&quot;:\&quot;b4c6849c-e502-1359-34fb-96cac692f02e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;7c2f4d1c-fe7c-5a89-0fb0-951b548bc14a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Middle Tier Version Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Middle Tier Version\&quot;,\&quot;UniqueId\&quot;:\&quot;4b560220-5821-a48f-7506-48cc9807cf6a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Version Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Version\&quot;,\&quot;UniqueId\&quot;:\&quot;a42e9a92-db3a-37ce-a0ba-7bbf8b760de1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;License Version Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;License Version\&quot;,\&quot;UniqueId\&quot;:\&quot;e0c15196-0ccc-e8ce-c221-365cf3ed527a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;ac4efb3b-ffcf-5b40-a6c7-19eaf4b7c15b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Change Password Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change Password\&quot;,\&quot;UniqueId\&quot;:\&quot;901bdb84-8b27-fddf-7793-52d96f118727\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving Security Question Answers Successed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Security answers have been updated successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;8353ef37-4b0f-474e-cb85-da07e58fe6ca\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Confirm Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Confirm Password\&quot;,\&quot;UniqueId\&quot;:\&quot;58c7c6ed-5ec0-f5c7-b617-4760c2936a54\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save User Interface Settings Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;47b83066-c0bd-788b-d167-b4ac19785211\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Last Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;beb1cced-43b4-e1c8-954a-40d07ccdad54\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Auto-Hide Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto-Hide Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;a8830e82-d29f-ee0d-ea7c-3d203b111607\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Force Security Questions Number Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get force security questions number.\&quot;,\&quot;UniqueId\&quot;:\&quot;6ca27f7b-e3a2-4768-d856-e4ae4547befd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Change Password Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change\&quot;,\&quot;UniqueId\&quot;:\&quot;acea4a63-3c46-cfab-38fc-6150c2cbe98c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View On Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On\&quot;,\&quot;UniqueId\&quot;:\&quot;8a835ce1-46d7-cc1d-ad7b-4ac227b7f398\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Changing Password Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to change the password.\&quot;,\&quot;UniqueId\&quot;:\&quot;493a7387-1ea3-24e0-d799-6f00266519bd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving General Information Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User information has been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;82ec3a39-b65d-8425-02f6-aa6c780d5d99\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;New Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Password\&quot;,\&quot;UniqueId\&quot;:\&quot;ecb6632c-b825-0c59-c1ea-312a66b3a23e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Logout Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;2deecb15-6308-5e50-c241-2b19b6203c2e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Check Force Security Questions Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to check user security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;11ac60cb-d535-9ee5-fd82-6672bfbe772e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Allow Email Html Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Use HTML Email\&quot;,\&quot;UniqueId\&quot;:\&quot;40178404-c274-a87b-1c31-f73ca603e8f0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Phone Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone #\&quot;,\&quot;UniqueId\&quot;:\&quot;b26c8210-149d-9601-e073-988de8941e38\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Auto Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto\&quot;,\&quot;UniqueId\&quot;:\&quot;9ab58b24-01c9-b4e7-c6d5-8abbfbe4b479\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Configure User Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configure User\&quot;,\&quot;UniqueId\&quot;:\&quot;7feebe85-70f1-91e9-656b-e2d4715a6cc9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Settings Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Settings\&quot;,\&quot;UniqueId\&quot;:\&quot;6e0a90f4-f004-83de-cbb7-6cab12b27852\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable to Logout Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to logout.\&quot;,\&quot;UniqueId\&quot;:\&quot;b48852db-43a2-7dcb-b75a-108003de13ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Off Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Off\&quot;,\&quot;UniqueId\&quot;:\&quot;e20dd0ad-d826-2073-533b-8cd2c290e493\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving General Information Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save information into user profile.\&quot;,\&quot;UniqueId\&quot;:\&quot;48adb9b2-eebb-f0c9-026f-0748faa46e2c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Email Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;01db25f2-3429-559e-af7e-f53507470538\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Force Security Questions Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Answer {number} or more security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;2bc93707-a3c3-a51e-6219-bdd4a5d12ac8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Security Questions Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;aff79cd0-35ef-f27f-1562-1f1eef890b9e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save Security Question Answers Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;7765f11b-1873-5d01-07cc-66d193f7e0fb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Confirm Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot; Confirm password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;1ce7429a-7238-6bfa-f398-493a1bdbf934\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Condensed View\&quot;,\&quot;UniqueId\&quot;:\&quot;5a8a7d65-2817-b2d2-e2cf-d3208fc8248a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save General Settings Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;0dc042c1-6238-9fc0-e00a-3b1fa90c3456\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Security Question Answers Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get security question answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;cce5d50b-14fc-20e2-ec6c-a8684e8e1d6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Old Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;8956e657-a3f3-12c8-54e7-72fce3be8629\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Old Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old Password\&quot;,\&quot;UniqueId\&quot;:\&quot;05b9e165-ca11-2858-5977-4f2de29faee3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Initializing Security Questions And Answers Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to initialize security questions and answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;e0fd28b6-f011-e1e4-91ba-0902527c3267\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unmatched Passwords Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The passwords you entered do not match.\&quot;,\&quot;UniqueId\&quot;:\&quot;cfd5da18-18d9-d10a-5a94-491b7bd22673\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;General Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;General\&quot;,\&quot;UniqueId\&quot;:\&quot;79a5b8b1-8a4b-8910-1050-f5c75a31b380\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;First Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;168ef2b9-66a1-f254-29f1-bab34c141e06\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty New Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;b91db3b9-a9d1-70b9-17d7-340e7e8f8981\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;User Interface Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Interface\&quot;,\&quot;UniqueId\&quot;:\&quot;4e59da4e-1af4-dc54-b1df-61ca71ecd7b5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Email Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;d059e020-85fc-4c48-173c-b4859ea3d418\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving User Interface Settings Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User interface settings have been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;9c24d42b-fb9e-dbf2-efa1-43104561eea2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Update Question Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to update question:\&quot;,\&quot;UniqueId\&quot;:\&quot;f3f676b2-9d43-6657-67f7-8612964d68d9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Security Questions Panel and Popup Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Security Questions\&quot;,\&quot;UniqueId\&quot;:\&quot;3ad8e396-40ba-83d8-b84f-3d849a2899a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving Security Question Answers Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to update security question answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;b84d465f-4451-2ecc-d969-304a66fa3bf7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Alerts Subscriptions Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;1797c550-cc4a-017a-ee78-026b1630f268\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Quick Links Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;7cb31109-3b50-c6a3-7376-74699f21b9ae\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving User Interface Settings Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save user interface settings.\&quot;,\&quot;UniqueId\&quot;:\&quot;5e955165-fb52-6675-ef4b-5e95f08df9c9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Changing Password Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password has been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;896c472d-94dd-e3da-5ddb-5a80e3b15455\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Cancel Security Question Answers Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;902ab45c-c8d5-db76-2446-c6f909fd87ca\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Applications Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Applications\&quot;,\&quot;UniqueId\&quot;:\&quot;e5d57590-54f9-3971-e362-74a400430d6f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application User Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application user menu.\&quot;,\&quot;UniqueId\&quot;:\&quot;ab80c491-811a-1e55-745a-68bd4a49317e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Application User Menu Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;4e51cce0-acbe-9151-5b4b-217366a1bf22\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;User Menu Not Found Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Menu [{0}] was not found. Full Path: {1}\&quot;,\&quot;UniqueId\&quot;:\&quot;890da169-58b5-676e-f3a6-5e44c6b07edb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Add Favorite Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add Page Favorite\&quot;,\&quot;UniqueId\&quot;:\&quot;15c8de41-cb0c-6c30-09ae-59ae5f538d3b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Add Page Quick Link Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add Page Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;4420ec25-4939-56a4-7aa4-f8ef727e7083\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Copy Page URL Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy Page URL\&quot;,\&quot;UniqueId\&quot;:\&quot;568986bc-9d53-8d73-6e51-7d4b914ab4c4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;75eb8715-e414-5a01-c769-40adaa7c6512\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Open Page In New Window Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Open Page In New Window\&quot;,\&quot;UniqueId\&quot;:\&quot;f3aca33d-63a5-1e74-3a49-07549b862584\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;fe3210bf-2c4a-0093-c21e-1a20148b2013\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Display Unread Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unread\&quot;,\&quot;UniqueId\&quot;:\&quot;e2b64f9d-b33e-848a-8f45-83bd9b0f134e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Sort By Date Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;By Date\&quot;,\&quot;UniqueId\&quot;:\&quot;559eae83-7da3-d566-ccc1-d7c9869e1c6f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;e564795e-e954-f715-65d7-38d3a7e0da56\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete this Alert?\&quot;,\&quot;UniqueId\&quot;:\&quot;e3ce5643-717a-ec6a-de59-62995e5f73e2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Alerts Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;5aef5fb5-f503-27e3-331d-ab3910d961ad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alert\&quot;,\&quot;UniqueId\&quot;:\&quot;aea4211a-3dc5-4707-1e32-0d1a32a29822\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Display All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;All\&quot;,\&quot;UniqueId\&quot;:\&quot;3185ee3a-8a9d-8513-bccd-780fc6b373e1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;9644fbd8-4185-7e22-ceff-d032b79d1471\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;No Alerts Available Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No Alerts Available.\&quot;,\&quot;UniqueId\&quot;:\&quot;5f0c6e4c-c99c-7042-e066-eeed7b84c8a4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;b1f52254-0e4c-9988-8f6b-286193385824\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;View All Alerts Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;View All Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;28b30269-b85e-d207-afb8-e67e7813a0df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get External Reference Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get external reference\&quot;,\&quot;UniqueId\&quot;:\&quot;ae4f62f3-228f-9fe9-35ab-ed72a6cf2563\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sign In\&quot;,\&quot;UniqueId\&quot;:\&quot;6d984dfd-5266-9f32-e788-09b0cda608f0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Login Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Login\&quot;,\&quot;UniqueId\&quot;:\&quot;00d74c55-f88a-506b-189d-8bc1b3ee2aa7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Windows Authentication Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Windows Authentication\&quot;,\&quot;UniqueId\&quot;:\&quot;61616794-2dda-41fe-b8b1-31e84ff42bb5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Workspace Authentication Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Authentication\&quot;,\&quot;UniqueId\&quot;:\&quot;40fcbf6f-4412-1896-0d94-d412d5afa807\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Re-enter Password Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please re-enter your password\&quot;,\&quot;UniqueId\&quot;:\&quot;be3ae26f-fac2-0922-28df-5ed835dfcbcf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Login Using External Reference Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to login using external reference\&quot;,\&quot;UniqueId\&quot;:\&quot;41ece6b9-5cb8-dc51-4b1f-ccac31a15e4c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Login With Different Account Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sign in with a different account\&quot;,\&quot;UniqueId\&quot;:\&quot;f7e7951a-5d6b-f736-39a3-f326b7978da6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;User Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;af741a42-b289-6f54-0c66-302354fc39d4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password\&quot;,\&quot;UniqueId\&quot;:\&quot;edf17b6a-e708-16bc-60c1-98d4291aa35d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Tenant Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Tenant\&quot;,\&quot;UniqueId\&quot;:\&quot;4fa24e0c-8691-efc0-4db3-450984af449f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Email Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;e8d50843-a2d6-8b9d-6398-1653d3602224\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;857e486b-c572-eb26-1fb9-cebff2d3a850\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Last Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;30dfd1bb-3e10-bbf8-2a99-52482a7a6a7d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Phone Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone #\&quot;,\&quot;UniqueId\&quot;:\&quot;39575073-c843-9db6-25a3-dfa9c6303257\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Desired Log On Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Desired Log On Name\&quot;,\&quot;UniqueId\&quot;:\&quot;26cd378a-916c-d4e3-76b1-cf823e8763b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Confirm Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Confirm Password\&quot;,\&quot;UniqueId\&quot;:\&quot;f0c81171-1180-73bf-b59f-b8a977f0efa7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Reset Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;82bb7e81-b214-928e-6b49-cab764f0a97b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Or Sign In Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Or Sign In With:\&quot;,\&quot;UniqueId\&quot;:\&quot;254f1055-68a2-6c52-6c49-6c438237730d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;320f55b8-487f-31f0-c1c5-9577171acb3d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookie Policy Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cookie Policy\&quot;,\&quot;UniqueId\&quot;:\&quot;5a854318-25b4-a4d0-38f1-268fc8670b14\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Policy Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Privacy Policy\&quot;,\&quot;UniqueId\&quot;:\&quot;d66aac2c-d7aa-3f93-a43e-9f4bb83c9f97\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Forgot Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;aea16b65-1e62-9411-2eed-7f3c9b837756\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request Account Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request Account\&quot;,\&quot;UniqueId\&quot;:\&quot;c0c15eeb-3ef2-accb-1aeb-b1c9ad0caf12\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request New Account Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request new account\&quot;,\&quot;UniqueId\&quot;:\&quot;dab3ccda-7b08-c019-45a5-d5c8068f0470\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request New Account Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request new account\&quot;,\&quot;UniqueId\&quot;:\&quot;11125ca4-bea9-3d52-9fa1-5260eae9bb97\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Reset Password Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;6d1fde30-0fa9-c510-151e-a2efa7553d7b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Back Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;9b625852-252e-fc32-c619-2ef0ed2fce1c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Default Language Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;9c65676e-4c71-7e7a-db93-20175910e59d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Account Request Submitted Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Account request has been submitted.\&quot;,\&quot;UniqueId\&quot;:\&quot;8e8dce18-6426-5967-f22e-76319c663c14\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Reset Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password has been successfully reset. Please check your email.\&quot;,\&quot;UniqueId\&quot;:\&quot;de2dff60-54df-5e2d-4abb-798095ce0517\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Find Secret Question Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot find secret question.\&quot;,\&quot;UniqueId\&quot;:\&quot;1002619e-5a97-afbe-2fa8-faca0a7990fe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Platform URL placeholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Platform URL\&quot;,\&quot;UniqueId\&quot;:\&quot;cbded3dc-6d68-dd59-e30a-a28b46225b90\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Platform Location view title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One URL\&quot;,\&quot;UniqueId\&quot;:\&quot;15245b60-5c36-6c1e-bc26-53eae2b3f405\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Empty Field Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Field cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;16b0aa90-de42-0c54-6bc2-6b4660bbc3aa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Invalid Email Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email is not valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;5f67d0a8-fb50-0b89-511d-f3eac9d5bac7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Invalid Phone Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone is not valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;5715419f-8a2f-8429-5c1a-ad02106502db\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Short Password Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password is too short.\&quot;,\&quot;UniqueId\&quot;:\&quot;303c91c1-2ada-f415-d91a-038774b4c30e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Mismatch Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The passwords do not match.\&quot;,\&quot;UniqueId\&quot;:\&quot;e25b389f-72de-43c8-f95c-64d3441bf39f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber Supply Chain US, Inc. (“Körber,” “we,” “us”) has created this Privacy Statement (this “Statement”) to explain the types of personal information Körber collects as you navigate our sites and related services (collectively, the “Services”), how such information will be used, and the choices we offer you regarding our collection and use of such information.\&quot;,\&quot;UniqueId\&quot;:\&quot;e73cceb4-27b5-0309-7444-d96925eed2ec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;For the purposes of the General Data Protection Regulation, the data controller is Körber Supply Chain US, Inc., located at 5600 West 83rd Street, Suite 600 – 8200 Tower, Bloomington, MN 55437.\&quot;,\&quot;UniqueId\&quot;:\&quot;12557a87-4ca0-c8f6-151b-a09748229823\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Principles Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;I. Privacy Principles\&quot;,\&quot;UniqueId\&quot;:\&quot;0554aab0-cc1a-eb02-f851-b262f202c38c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Principles Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We follow the following principles in order to protect your privacy:\&quot;,\&quot;UniqueId\&quot;:\&quot;e47985dc-8645-9920-cdf5-cb5fd519593d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We do not collect any more personal information about you than is necessary or otherwise authorized by you;\&quot;,\&quot;UniqueId\&quot;:\&quot;b8247541-3328-22bc-fc7a-18ee49fb1d0d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We only use your personal information for the purposes we specify in this Statement, unless you agree otherwise;\&quot;,\&quot;UniqueId\&quot;:\&quot;f802fa9b-92b1-5046-fc3b-d72de1b9691e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We do not keep your personal information if it is no longer needed; and\&quot;,\&quot;UniqueId\&quot;:\&quot;604d3efb-8e86-a61e-af5e-ec839ecfe37e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Other than as we specify in this Statement, we do not share your personal information with third parties.\&quot;,\&quot;UniqueId\&quot;:\&quot;cac395f6-37b4-bac7-2f12-c3a4fbcf97c6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Personal Information Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;II. Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;906f3089-612e-f615-151d-c3c825c81ea3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Collected Information Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. Personal Information Collected\&quot;,\&quot;UniqueId\&quot;:\&quot;022de865-b3a8-6928-27ee-dd2cc176e6aa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Collected Information Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Although most areas of the Services can be accessed without submitting any information that personally identifies you, some areas (such as registering for training with Körber University) require certain personal information from you. The types of personal information that we may collect from you may include, without limitation:\&quot;,\&quot;UniqueId\&quot;:\&quot;ad2f3697-3a33-e8ac-d216-f68a4d75d94a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Collected Information\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contact information, such as name, postal address, email address, and phone number; or\&quot;,\&quot;UniqueId\&quot;:\&quot;4c6553a6-b9a7-fd71-43ae-696ce412ac3c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Collected Information\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Demographic information, such as age, date of birth, gender, job information, and postal code.\&quot;,\&quot;UniqueId\&quot;:\&quot;eb3cd699-77b5-a0f1-4858-5da90583be74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Legal Basis\&quot;,\&quot;UniqueId\&quot;:\&quot;a5cd87d0-4a59-6dd4-0858-c1cff40646dc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Our legal basis for collecting and using the personal information described above will depend on the personal information concerned and the specific context in which we collect it.\&quot;,\&quot;UniqueId\&quot;:\&quot;e2509da6-8982-e93f-e7a0-6318a925698e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;However, we will normally collect personal information from you only where we have your consent to do so, where we need the personal information to perform a contract with you (for example, when providing the Services), or where the processing is in our legitimate interests and not overridden by your data protection interests or fundamental rights and freedoms. In some cases, we may also have a legal obligation to process personal information about you or may need to process personal information in order to exercise, establish, or defend legal claims.\&quot;,\&quot;UniqueId\&quot;:\&quot;8a0b4989-48b8-c4d7-b150-a0e75e6d8f4f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. How We Use Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;9ea3fae3-b884-64f0-d8af-59fd4a40c854\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may use information we obtain about you to:\&quot;,\&quot;UniqueId\&quot;:\&quot;32616341-8074-87f0-d478-20cced290772\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Firs tUse Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Process orders you place and complete other transactions you have requested using the Services, and provide you with products and services you request;\&quot;,\&quot;UniqueId\&quot;:\&quot;e54fc7b8-6f25-7ace-46a6-8399dc0c99eb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send you information or materials you request;\&quot;,\&quot;UniqueId\&quot;:\&quot;4f7e4fab-b3a0-c041-97c5-84d65a78ecfc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maintain a record of your purchases and other transactions using the Services;\&quot;,\&quot;UniqueId\&quot;:\&quot;b042a4fb-d52e-f47e-5cd3-de7318959922\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;fourth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Respond to your questions and comments and provide customer support;\&quot;,\&quot;UniqueId\&quot;:\&quot;22f540cd-8ffc-cb6b-b026-ae3addb537c4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;With your consent, communicate with you about our products, services, offers, and promotions;\&quot;,\&quot;UniqueId\&quot;:\&quot;a15bf799-ae2d-95a5-89a6-cf0d0e810252\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Operate, evaluate, and improve our business and the products and services we offer;\&quot;,\&quot;UniqueId\&quot;:\&quot;e1cb7ccd-7a55-1f2a-abfa-a4608f4ef6bd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Seventh Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Analyze and enhance our marketing communications and strategies;\&quot;,\&quot;UniqueId\&quot;:\&quot;2c455811-3539-612c-4b79-7ca42f7c34a2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Eighth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Analyze trends and statistics regarding use of the Services and transactions conducted using the Services;\&quot;,\&quot;UniqueId\&quot;:\&quot;52bce06d-2185-74b8-c174-97649f09c0ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Ninth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Protect against and prevent fraud, unauthorized transactions, claims, and other liabilities, and manage risk exposure, including by identifying potential hackers and other unauthorized users;\&quot;,\&quot;UniqueId\&quot;:\&quot;f5440956-bc16-33ac-b179-39f05fc8b2a5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Tenth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enforce our {0} and other agreements; and\&quot;,\&quot;UniqueId\&quot;:\&quot;7c3a7525-2bbf-3610-5659-580370c6161a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Eleventh Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Comply with applicable legal requirements and industry standards.\&quot;,\&quot;UniqueId\&quot;:\&quot;a6283b01-a6bc-b0e0-fca2-6df8ed76e76e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Details Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may combine the information we collect with publicly available information and information we receive from our parent, affiliate, or subsidiary companies, business partners, and other third parties.\&quot;,\&quot;UniqueId\&quot;:\&quot;2ec47e7e-bd3f-acfd-c087-92a641e01f40\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Conclution\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We also may use the information we obtain about you in other ways for which we provide specific notice at the time of collection.\&quot;,\&quot;UniqueId\&quot;:\&quot;b0ccaa6c-3638-938e-fbb0-56fa9d5db8a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;D. How We Disclose Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;9acd9ff8-a476-2347-0655-90715d8a6dff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may disclose aggregated information about our user, and information that does not identify any individual user, without restriction. We may disclose personal information about you:\&quot;,\&quot;UniqueId\&quot;:\&quot;4e4efc2b-b47c-ed4f-9270-7cd0e5b18787\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To contractors, service providers, and other third parties we use to support our business and who are bound by contractual obligations to keep personal information confidential and use it only for the purposes for which we disclose it to them;\&quot;,\&quot;UniqueId\&quot;:\&quot;5b98c658-f710-7292-fe2e-eaa53b05c064\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To comply with any court order, law, or legal process, including to respond to any government or regulatory request;\&quot;,\&quot;UniqueId\&quot;:\&quot;d7677224-2002-9d98-2ec5-e5b3b146bb7f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To enforce or apply our {0} and other agreements;\&quot;,\&quot;UniqueId\&quot;:\&quot;4f5b7ba1-8cc4-0ee5-bd95-a4fc4b8b20f5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If we believe disclosure is necessary or appropriate to protect the rights, property, or safety of Körber, users of the Services, or others; and\&quot;,\&quot;UniqueId\&quot;:\&quot;eb7abc3a-2ffb-e91e-4b5e-f71ff94a873b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;With your consent.\&quot;,\&quot;UniqueId\&quot;:\&quot;c87cd6f4-64a5-1eab-05b1-5f5223f95085\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We also reserve the right to transfer your personal information to a buyer or other transferee in the event of a merger, divestiture, restructuring, reorganization, dissolution, sale, or other transfer of some or all of our assets. Should such a sale, merger, or transfer occur, we will use reasonable efforts to direct the transferee to use your personal information in a manner that is consistent with our Statement.\&quot;,\&quot;UniqueId\&quot;:\&quot;6b49e89a-8c4d-6389-0e91-33d391464e27\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;E. Data Security and Retention\&quot;,\&quot;UniqueId\&quot;:\&quot;2241217b-0512-ab6c-c25a-2dca3e5d85f2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We have implemented measures intended to protect your personal information from accidental loss and from unauthorized access, use, alteration and disclosure. Please note that the electronic transmission of information is not completely secure. We cannot guarantee that the security measures we have in place to safeguard personal information will never be defeated or fail, or that such measures will always be sufficient or effective. Any transmission of personal information is at your own risk.\&quot;,\&quot;UniqueId\&quot;:\&quot;6b08bf2e-f31c-554c-7886-95c1f8b6b6e6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We will retain your information for as long as your account is active or as needed to for our internal purposes. You may request to delete your account information by contacting us at {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;5438b5a8-7d6a-e1a3-d291-51f727d5cf10\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Storage Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;F. Where We Store your Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;4a7b377e-eb5a-f90d-26f3-130f4c3f6303\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Storage Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The data we collect from you may be transferred to and stored at a destination outside of the European Economic Area (“EEA”). It may also be processed by staff operating outside of the EEA who works for us, one of our group companies or our suppliers for the purposes set out in this Statement. In order to ensure that any third party processes your personal data in a way which is consistent with the EU&apos;s laws on data protection, to the extent that we share data outside of the EEA, we will seek to put in place agreements with those third parties, including with our group companies, which contain provisions approved by the EU for protecting personal data.\&quot;,\&quot;UniqueId\&quot;:\&quot;d780d57a-9f71-fa09-395b-2ee3a1c0fa0f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Rights And Choices Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;G. Your Rights and Choices\&quot;,\&quot;UniqueId\&quot;:\&quot;43e17db6-2179-af86-adbe-779e3c728961\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Rights And Choices Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have the following rights and choices about the personal information we collect from you via the Services and how we communicate with you:\&quot;,\&quot;UniqueId\&quot;:\&quot;2d77e179-5f5c-389c-c557-d16ec53ab0e7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Access. \&quot;,\&quot;UniqueId\&quot;:\&quot;3ad1daaa-c044-ea7f-37c3-e99af243940b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have the right to request a copy of any information that we hold about you. If you would like a copy of this information, please contact us by writing to us at the address or email address listed below. We may request proof of your identity before sharing such information with you.\&quot;,\&quot;UniqueId\&quot;:\&quot;8e0ffe97-131e-80de-9023-a41afef1cefb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Rectify. \&quot;,\&quot;UniqueId\&quot;:\&quot;1a37f6e9-235c-698f-6265-70b67bd7e875\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you discover that the personal information we hold about you is incorrect or out of date, you may ask us to correct that information.\&quot;,\&quot;UniqueId\&quot;:\&quot;41a5cab0-49d1-32e7-2a22-16442af72492\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to be Forgotten/Cease Processing. \&quot;,\&quot;UniqueId\&quot;:\&quot;3e06e07d-c28a-d7ac-50da-31588110fa26\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You may ask us to delete or cease processing the personal information we hold about you in certain circumstances. It may not be possible for us to delete or cease processing all the personal information we hold about you where we have an ongoing relationship, however please contact us and we will do our best to assist with your request.\&quot;,\&quot;UniqueId\&quot;:\&quot;41e97f20-74c7-d968-c4af-57e3df12c8de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Withdraw Consent. \&quot;,\&quot;UniqueId\&quot;:\&quot;dba7cb80-f2dc-f3ec-1ccc-e26bb711e4b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Where we process your data on the basis that you have consented to such processing, you have the right to withdraw your consent at any time by unsubscribing or contacting us, as applicable.\&quot;,\&quot;UniqueId\&quot;:\&quot;73db25b0-1f54-edb7-4470-ca511a90b083\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Portability. \&quot;,\&quot;UniqueId\&quot;:\&quot;7fcd2442-9b75-d5fc-fee4-8a349bf689fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You may ask us to transfer your personal information to a third party in certain circumstances. If you would like any other information regarding this right, please contact us.\&quot;,\&quot;UniqueId\&quot;:\&quot;22cdd48f-5f13-43cc-1253-48df45470a10\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Promotional Communications. \&quot;,\&quot;UniqueId\&quot;:\&quot;b3e19bc9-4931-e57f-7804-b10512491846\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you do not want us to use your email address/contact information to promote our products or services, you can opt out by sending us an email stating your request to {0}. If you have received a promotional email from us, you can also opt out of receiving future promotional emails from us by following the unsubscribe instructions contained in such email.\&quot;,\&quot;UniqueId\&quot;:\&quot;c7ef415b-1512-2d81-455a-6b2fbfb0f5df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;III. Cookies and Automatic Tracking\&quot;,\&quot;UniqueId\&quot;:\&quot;d34d2253-27c9-ae96-dbbf-6e5e0eb2f5e5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Terms Of Use Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. How We Use Cookies\&quot;,\&quot;UniqueId\&quot;:\&quot;390f73d8-bfee-0110-a9a1-8a5e79d2c6df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Terms Of Use Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot; When you use the Services, we may also collect certain information with cookies. The information collected automatically using a cookie is not personal information. A “cookie” is a text file that websites send to a visitor’s computer or other Internet-connected device to uniquely identify the visitor’s browser or to store information or settings in the browser. Cookies may be used for, but are not limited to use for, the following: (i) enable website functionality and remember browser settings; (ii) collection of aggregate information to compile statistics about Körber’s website usage, including the use of third-party analytics tools (such as Google Analytics); and (iii) to serve ads through third-parties when you visit other websites after you visit our website (“Behavioral Advertising Networks”). For more information about the specific types of cookies, how we use them, and how to control them, please see our {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;8ff768bf-b31b-a68a-79f4-408ad7c1723a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Third-Party Tracking\&quot;,\&quot;UniqueId\&quot;:\&quot;7cee0da5-26fb-f71b-c779-333aaffd10e0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Although we do not control third parties’ collection or use of your information to serve interest-based advertising or other targeted content, a number of these third parties may provide you with ways to choose not to have your information collected or used in this way. For example, you can opt out of receiving targeted advertisements from members of the Network Advertising Initiative by visiting {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;fc1fb17d-2e04-b0fb-0db1-5bbfbc157d3f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Some of your browsing sessions may be translated into information that helps website designers make websites easier to use and simpler to navigate. If you would like to disable this tracking, please click here: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;b7997a0c-352d-987d-386d-477502b0261f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;No Tracking Signals Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. How We Respond to Do Not Track Signals\&quot;,\&quot;UniqueId\&quot;:\&quot;247fa23d-ed13-d197-c4e2-fc1b195b1a61\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;No Tracking Signals Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your web browser may let you choose your preference as to whether you want to allow the collection of information about your online activities over time and across different websites or online services. We cannot verify third-party web browser opt-out programs or third-party tracking opt-outs. Therefore, we strongly suggest using our built-in opt-out mechanisms located in the footer of all web pages labeled “Manage Privacy Settings” to prevent tracking.\&quot;,\&quot;UniqueId\&quot;:\&quot;3cdccbc2-e425-a183-8544-d2bb8e7905de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;General Notices Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;IV. General Notices\&quot;,\&quot;UniqueId\&quot;:\&quot;590196a4-de59-bc12-3c96-15775ddae17e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;External Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. External Links and Third-Party Sites\&quot;,\&quot;UniqueId\&quot;:\&quot;aa2e7396-7e3e-6713-32bc-2fcd295c10cb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;External Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber&apos;s website contains links to other websites. Körber is not responsible for the content of these websites or their privacy policies or practices.\&quot;,\&quot;UniqueId\&quot;:\&quot;7fe2e0c8-a803-fbfd-a244-06eb9c84292d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Edge Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Children Under the Age of 13\&quot;,\&quot;UniqueId\&quot;:\&quot;484932ed-09fb-e9ba-a2f1-3fc6bf5e4c28\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Edge Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The Services are not directed to, and Körber does not knowingly collect or solicit personal information from, children under the age of 13. If we learn we have collected or received personal information from a child under the age of 13, we will delete that information. If you believe we might have any information from or about a child under the age of 13, please contact us at {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;45453ab1-09f7-85e7-d13e-633b0e3111ad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Statements Changes Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. Changes to this Statement\&quot;,\&quot;UniqueId\&quot;:\&quot;9a2bda8a-6852-25f8-b03b-b484acc904e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Statements Changes Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber may amend this Statement from time-to-time. For material changes to this Statement, Körber will place a prominent notice on this website and send an email notification of the change. The date this Statement was last revised is at the top of this page.\&quot;,\&quot;UniqueId\&quot;:\&quot;163c1a15-77d2-bd9a-be8d-83be51072930\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;D. Contact Us\&quot;,\&quot;UniqueId\&quot;:\&quot;9fd608e0-f16e-867f-a161-439f22348ce4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you have any questions about this Statement or our information practices, please call us at 800.328.3271, email us at {0}, or write to us at\&quot;,\&quot;UniqueId\&quot;:\&quot;b589326d-8935-903d-47d0-1cf602754799\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Info\&quot;,\&quot;LocalizedValue\&quot;:\&quot; Körber Supply Chain US, Inc.{0} 5600 West 83rd Street.{0} Suite 600 – 8200 Tower.{0} Bloomington, MN 55437\&quot;,\&quot;UniqueId\&quot;:\&quot;2c2c32d3-2b03-180a-3f46-aa70dc3dc190\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Conclutions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If we are unable to resolve your complaint you may contact the Information Commissioner&apos;s Office at the Exchange Tower, Wycliffe House, Water Lane, Wilmslow, Cheshire, SK9 5AF; telephone number: 0303 123 1113. You also have the right to lodge a complaint directly with your local data protection authority.\&quot;,\&quot;UniqueId\&quot;:\&quot;e2cf0203-e862-29ad-228c-b6504fd2a10a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Components\&quot;,\&quot;Key\&quot;:\&quot;No Data Found Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No Data Found\&quot;,\&quot;UniqueId\&quot;:\&quot;d84d4f6a-1c12-1f17-aac0-f0dd724de5a4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Dialog Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;2bc66adf-cf4c-292d-d46a-706199d5ab05\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;83f0919c-42ec-1cb1-2610-05ce0cfaead0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Overwrite Existing Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Overwrite existing\&quot;,\&quot;UniqueId\&quot;:\&quot;6bddd482-39d7-2ebd-77b1-764bc2ef6119\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} successfully imported.\&quot;,\&quot;UniqueId\&quot;:\&quot;2263a92e-6a73-6915-2746-76de42ec621f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to import {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;08cea2da-8725-5b9a-af0b-ca41daf54fe5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} successfully exported.\&quot;,\&quot;UniqueId\&quot;:\&quot;e4287323-d27c-0fd9-b2fa-3f09692adc13\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to export {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;4f0b2b29-0532-3646-8053-1594fb426cfc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Unable To Request Url Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to request url [{0}].\&quot;,\&quot;UniqueId\&quot;:\&quot;2bf11ea1-03b1-eda6-6132-be92101dc0e5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Enable Popup Blocker Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Make sure your browser&apos;s pop-up blocker is turned off.\&quot;,\&quot;UniqueId\&quot;:\&quot;1c333cda-6388-0edf-1746-b2d11bab00de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Discover {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;0f123207-df61-1f97-943a-6088fb95f161\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: User Credentials Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Credentials\&quot;,\&quot;UniqueId\&quot;:\&quot;0edb56c2-754c-2d00-40a5-c676ff141d95\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Assets Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Assets\&quot;,\&quot;UniqueId\&quot;:\&quot;c500aaf5-b24c-2b10-cf06-4b70423d9a7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Retrieve All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Retrieve All\&quot;,\&quot;UniqueId\&quot;:\&quot;47453194-02ea-bc0f-1a32-58bfff2177cf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;dc3b6a72-226e-c802-565c-a350254168a2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Use Credentials From Tenant Configuration Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;971ec5c8-e5fe-7aaf-b975-bb978f0a3fa7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Use Custom Credentials Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom\&quot;,\&quot;UniqueId\&quot;:\&quot;784c7e9c-32b3-258b-ed2f-bd4f74d52262\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: User Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;1c27b562-c929-4743-b3ca-dccd8e3069e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password\&quot;,\&quot;UniqueId\&quot;:\&quot;b142d319-ea3d-91aa-1617-dc9a0e2587e4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Import Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import\&quot;,\&quot;UniqueId\&quot;:\&quot;edbbf9eb-c9e2-9454-0452-70403f656be5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Overwrite Existing Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Overwrite existing\&quot;,\&quot;UniqueId\&quot;:\&quot;c5fa81fd-f48b-f01c-5d78-2ed86644e59f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Discover Assets Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to discover assets.\&quot;,\&quot;UniqueId\&quot;:\&quot;16b4525b-2c04-80b9-17e9-785a49b336e4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Import Asset From Cloud Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to import asset from cloud.\&quot;,\&quot;UniqueId\&quot;:\&quot;d5010316-1dba-cd02-f9d2-f4621d03a7f2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: No Credentials Specified Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No credentials specified or obtained from tenant configuration defaults.\&quot;,\&quot;UniqueId\&quot;:\&quot;c4fd5840-ef5b-f26d-0bc5-28401fe3e3f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Dropdown List Component\&quot;,\&quot;Key\&quot;:\&quot;Informations: defaultPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please select an option\&quot;,\&quot;UniqueId\&quot;:\&quot;a76e8966-1d59-9b4b-1734-155a75d7b6ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;From Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;From\&quot;,\&quot;UniqueId\&quot;:\&quot;8b35f1d3-5ebb-0740-ed5d-3071601525a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;To Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To\&quot;,\&quot;UniqueId\&quot;:\&quot;99c38a29-894b-e0e1-f0a7-dfc07f8d0c0c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Cc Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cc\&quot;,\&quot;UniqueId\&quot;:\&quot;eeb316c3-176e-670c-73d5-7f142888d498\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Subject Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Subject\&quot;,\&quot;UniqueId\&quot;:\&quot;6ce31a6f-f7d5-db67-50f7-379794f54867\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Body Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Body\&quot;,\&quot;UniqueId\&quot;:\&quot;3e128df4-6301-9d93-872a-2db45b76dd7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Is Html Body Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Html\&quot;,\&quot;UniqueId\&quot;:\&quot;2e3775e4-2b6c-84bc-8952-6118e2805a81\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email has been sent successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;815b6bd5-6796-4008-6969-5d1f30e0a87c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to send email.\&quot;,\&quot;UniqueId\&quot;:\&quot;a63051ff-963e-3201-3659-820c4cb0d533\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send Email\&quot;,\&quot;UniqueId\&quot;:\&quot;6c3c1a40-945e-9369-e24f-dc349e3231d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Send Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send\&quot;,\&quot;UniqueId\&quot;:\&quot;6aae862d-51dd-e74a-eea9-cdab00198f7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;ce30ac41-f1d8-b47f-840f-0577ed812930\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: File Input Component\&quot;,\&quot;Key\&quot;:\&quot;Select Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose File\&quot;,\&quot;UniqueId\&quot;:\&quot;ff66732d-1b44-c013-3f05-abb6fa0517bc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Date Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid date format.\&quot;,\&quot;UniqueId\&quot;:\&quot;351495e0-ee16-e442-e15c-cc7498144d2e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Remote Service Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred accessing the remote service.\&quot;,\&quot;UniqueId\&quot;:\&quot;3872f082-bb65-3836-dbdb-b2b1f99c5932\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Time Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid time format.\&quot;,\&quot;UniqueId\&quot;:\&quot;08fece55-fa56-d416-9447-3ccd83cc61db\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Apply Changes Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred applying the changes.\&quot;,\&quot;UniqueId\&quot;:\&quot;f0d3c7ce-8a9c-21f3-52a5-fe512269fdf4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Expected Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Expected format: {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;af83ddbe-945f-9033-ab86-23203ac7980a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Date/Time Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid date/time format.\&quot;,\&quot;UniqueId\&quot;:\&quot;9742e60c-39a2-6d28-387a-972dbc9b5f7a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: display\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} - {1} of {2} items\&quot;,\&quot;UniqueId\&quot;:\&quot;08120d19-8de9-6272-6212-01cfca10844b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: empty\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No items to display\&quot;,\&quot;UniqueId\&quot;:\&quot;fe9210ad-f476-fb81-f6cd-9df827b9944a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: of\&quot;,\&quot;LocalizedValue\&quot;:\&quot;of {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;400b5322-8d58-37d5-9afa-aaaf86f5cb22\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: page\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;bb8e894f-af7a-c924-5bab-6e9ed71eb047\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: itemsPerPage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;items per page\&quot;,\&quot;UniqueId\&quot;:\&quot;85042a13-c0c8-f725-aa93-6fded50f6b7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: columns\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Columns\&quot;,\&quot;UniqueId\&quot;:\&quot;52b3165a-9c5c-0c37-d9b5-ac2ee55decec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filter\&quot;,\&quot;UniqueId\&quot;:\&quot;e2794506-e38e-89c9-8e45-cb1f9a50adef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: sortAscending\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sort (Asc)\&quot;,\&quot;UniqueId\&quot;:\&quot;5ce79091-4741-c503-c36e-d3b13c6d7b70\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: sortDescending\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sort (Desc)\&quot;,\&quot;UniqueId\&quot;:\&quot;11394fdc-3f0f-7c24-42f4-f6d91b0be2cd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;d0ddbb12-fa49-9e63-be3d-a329830b8d8e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: undo\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Undo\&quot;,\&quot;UniqueId\&quot;:\&quot;9be7074d-995e-a703-0027-2e05a2c5a077\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: edit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;3d668b3f-58c3-e18e-6b2b-681d9f6e9759\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: reset\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset\&quot;,\&quot;UniqueId\&quot;:\&quot;a671f0a4-96c4-e15f-8ab6-1b74c5df33b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: save\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;395a2cec-d62c-c455-bbce-0ca9af794185\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: create\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New Record\&quot;,\&quot;UniqueId\&quot;:\&quot;3981945a-7b3e-2bdb-bb24-cdf35e197b3c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: excel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export\&quot;,\&quot;UniqueId\&quot;:\&quot;bd0354b0-9d3b-12fc-cd26-75da4df7e83b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: apply\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Apply\&quot;,\&quot;UniqueId\&quot;:\&quot;c787828e-f76d-48fa-0ced-0c783f94f188\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: destroy\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;2acdbc33-ae4e-6776-8ac1-661c9cb3a370\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: resetConfiguration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;e8fca9fd-4386-566f-8d32-2e4c893cee8f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: saveConfiguration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save Configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;9901933a-5f2a-849e-736a-2d6a7477e0b0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: clearAllFilters\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clear All Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;5008a6ae-265d-3a04-5c9e-2455b61a0399\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: info\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Show items with value that: \&quot;,\&quot;UniqueId\&quot;:\&quot;42bdd950-d5a4-1242-00d3-512f41dd9781\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: isFalse\&quot;,\&quot;LocalizedValue\&quot;:\&quot;is false\&quot;,\&quot;UniqueId\&quot;:\&quot;84bd2b78-eb27-d65c-e996-110cbca59b7c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: isTrue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;is true\&quot;,\&quot;UniqueId\&quot;:\&quot;100ba48a-1a2f-ed6d-9ca1-8d2d49355f9f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: and\&quot;,\&quot;LocalizedValue\&quot;:\&quot;And\&quot;,\&quot;UniqueId\&quot;:\&quot;e41fb463-1f2d-6f64-6f21-f3289ef489dd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: or\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Or\&quot;,\&quot;UniqueId\&quot;:\&quot;73d4a504-6ac2-510f-369c-385fe5d91773\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: clear\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clear\&quot;,\&quot;UniqueId\&quot;:\&quot;6477996e-f08a-46e2-3159-f94b3e5317ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;2196e05d-c251-f7bb-6c0f-931f2f1a9f02\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filter\&quot;,\&quot;UniqueId\&quot;:\&quot;284480d6-f86d-51fe-6c50-73787e5381d4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;080ec434-b494-c385-3bc2-370e72c36dfb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;95a0f9b9-cb59-d458-8fef-67a2e372cb4f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is after\&quot;,\&quot;UniqueId\&quot;:\&quot;03181adf-7952-5132-a929-39a697dc788f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is after or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;e910fbaf-831c-e1fb-b497-97bdff9cd190\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is before\&quot;,\&quot;UniqueId\&quot;:\&quot;08a3d887-f0d0-2c0f-1b56-0bc63bf34da0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is before or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;cad5add4-d982-fc51-6396-1ee1f598769f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: startswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Starts with\&quot;,\&quot;UniqueId\&quot;:\&quot;225ab368-a8c4-a6fe-8d30-e00f39bfba38\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: contains\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contains\&quot;,\&quot;UniqueId\&quot;:\&quot;9a99b65c-116f-4764-2269-8153e3b5afa1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;7f02f77d-1720-e717-842e-6fd81015a5ad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;45c5854f-481d-d03b-e888-93ca5e873bfc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: endswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ends with\&quot;,\&quot;UniqueId\&quot;:\&quot;5f86b5d3-4600-588e-cb46-59a58a0d4c0e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: doesnotcontain\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Does not contain\&quot;,\&quot;UniqueId\&quot;:\&quot;59326430-eee7-ba7b-f21e-fe8bc235f9bd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;4dc1ecfb-87d4-4410-d053-10347404a247\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is greater than\&quot;,\&quot;UniqueId\&quot;:\&quot;3dce2533-6628-985f-007e-5cb7c6b53b41\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;21310bcf-8525-70c5-73db-f3af65fded26\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is less than or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;a8a6477d-a51f-b4d0-935f-ff3db2f0a709\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is greater than or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;02c4d246-2825-4f30-2ec3-da08a53d0d47\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is less than\&quot;,\&quot;UniqueId\&quot;:\&quot;ac67dc4f-3cf7-186b-dc47-7499d528206b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Batch Changes: applyChangesErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred applying changes.\&quot;,\&quot;UniqueId\&quot;:\&quot;3e66cc6e-31ca-8bb5-9e27-9f2385ec2c54\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Batch Changes: applyChangesSuccessMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;All changes applied.\&quot;,\&quot;UniqueId\&quot;:\&quot;e9c0e7e4-7d7a-f022-b927-b65b8468ea80\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToUpdateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred updating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;95bced51-6da3-74f8-ae2e-f0ac50fb3b26\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToDeleteErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred deleting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;7c9e6504-3312-883e-4fc4-b6008ef97be4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Save And Continue Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save and Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;4e38531e-68cb-e550-95b7-0166c354187c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;c32dc12b-12a0-4625-dce3-781ab022f4fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;2ed17484-f823-00cd-797e-7d5fc54d6823\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Don&apos;t Save And Continue Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Don&apos;t Save and Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;a54a97f2-7f40-c03e-f1e7-6e5791afde3e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unsaved Changes\&quot;,\&quot;UniqueId\&quot;:\&quot;57c6026f-c3f9-560b-0660-4d24bb8572fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have unsaved changes. Do you want to save them?\&quot;,\&quot;UniqueId\&quot;:\&quot;b218d61f-58d6-c6a2-379b-1fbac224bd5a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select\&quot;,\&quot;UniqueId\&quot;:\&quot;0baca5fc-af10-5ecd-d5f8-ace252256651\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Select Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select\&quot;,\&quot;UniqueId\&quot;:\&quot;21259b4d-983e-a9d6-99a6-0841054cf409\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: List View Component\&quot;,\&quot;Key\&quot;:\&quot;Select All Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select All\&quot;,\&quot;UniqueId\&quot;:\&quot;dbf8108e-a63b-44f1-5d12-4241d84c9846\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: List View Component\&quot;,\&quot;Key\&quot;:\&quot;Unselect All Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unselect All\&quot;,\&quot;UniqueId\&quot;:\&quot;4960a798-26a4-e96f-7190-023c235e10e8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;79e53c56-2664-0ef9-a803-8def7a9f69e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Application Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;92014881-95fe-94fa-a2ee-e14aaf18c930\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;725784ff-18b7-838b-56c1-c878434c381a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;13c5be0c-7c89-dc58-b438-23b671ea3d72\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Value Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;7064276b-9658-d32f-d253-10684601c004\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Group Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;0c328130-8830-0584-05f4-9903afdeae44\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Group Id Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;8b7b8242-ec83-c790-442c-5247bffdf22e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;3b7e1f81-5ae9-25bc-6507-de09d0aad7de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Key Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;41e123e8-34b6-3b4b-f214-930eca5e06c0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Key Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;985ebb14-fb39-2952-df8b-5179371e9e27\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Close Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close\&quot;,\&quot;UniqueId\&quot;:\&quot;dd6c286b-17af-b1fb-c17d-16177f9a5b52\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;ad47ee27-d1ae-0606-14ee-68d048d7b91b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_ApplicationId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;7ed4b245-5f40-2ed2-39bf-a8303483bea4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_DefaultValue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;b2e6497f-f134-5eee-aeed-9fda737c2259\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_GroupId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;29bbe7e8-526a-1a11-4d9b-846c0e3f3223\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_Id\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;994cf1b5-7ce5-11d7-7715-25250a113e03\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_Key\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;c78cd375-e32d-8a5d-a149-dd0be0170944\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: ApplicationId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application\&quot;,\&quot;UniqueId\&quot;:\&quot;11c34aa1-10a3-91c2-5cb4-08bb114cdeba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: Default\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;a5d167d0-981c-7a59-38e0-900add94eafa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: GroupId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;044c09c2-a2b7-6af6-4447-21c5c157fe4f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: Key\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;65e8f9c1-a278-9a0d-760a-b3634169fb2a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: LanguageId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not translated values for selected language\&quot;,\&quot;UniqueId\&quot;:\&quot;f8761d9e-d2c4-4ed7-0678-fc59142cfd81\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Group: Localizations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;d0613584-76b6-1165-8af5-d658820ad6fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;66f0aedc-5f75-4b77-7f92-648c2a4f4a15\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to delete localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;5ff21a14-4da8-b070-9910-67162d0d0bf0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Localizations Error\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get available localizations.\&quot;,\&quot;UniqueId\&quot;:\&quot;265c5d56-d180-31b5-d4b6-b046ea5547de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Translation Services Error\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get translation services.\&quot;,\&quot;UniqueId\&quot;:\&quot;baf19708-9d1a-5b9b-75b1-18a45494ed78\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Main Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;cd9bb3d9-5561-ad98-e822-04e1f36b269c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Sub Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translation\&quot;,\&quot;UniqueId\&quot;:\&quot;ee8b35eb-aa27-9f6f-b80d-1df9431594a2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Options Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select translation options.\&quot;,\&quot;UniqueId\&quot;:\&quot;2584fdbd-79e7-043e-cc17-0b203e4a8317\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: From Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;From local Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;b1ee2e87-3aae-3d6a-4883-c9875453464c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: To Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To local Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;56221095-356a-b26e-e815-65163735b9d4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translation Service\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translation Service\&quot;,\&quot;UniqueId\&quot;:\&quot;2c0c25e6-7f10-6ac8-b58f-e9cd96fc76b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;d9c5e5f5-621b-4a5a-f813-988722380170\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully translated.\&quot;,\&quot;UniqueId\&quot;:\&quot;cdc53a2f-6012-1f1f-6e4d-9d8773b7a0fb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to translate localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;f7096bd5-8676-ca05-323a-88861b24315e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Update Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save translated localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;b3594734-2d25-d70a-83b3-f83b7ea903a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Main Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;07957bf5-74b3-9c1b-9c12-93dee2235015\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Options Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select delete Localizations method.\&quot;,\&quot;UniqueId\&quot;:\&quot;65518a36-237b-d548-4e6e-2410ac9e2783\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;f2153e21-f8c6-0b4c-4740-8e9b6ff3c9a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Selected\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete selected\&quot;,\&quot;UniqueId\&quot;:\&quot;bf69592f-727c-f145-d84d-ac2a17a7981e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;f5129554-44d9-574c-a16d-3e21e6229407\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Current Application\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete for current application\&quot;,\&quot;UniqueId\&quot;:\&quot;7465de66-04b4-f72d-07e6-64eec0220586\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Delete Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;82fa4e8a-6625-2849-96a8-92e45e76675d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Delete Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to delete localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;85214e9b-ec04-446e-2567-be98a20b3ad6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog: Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Language\&quot;,\&quot;UniqueId\&quot;:\&quot;fae5b0fb-3995-dac2-9eb5-98bbd9973efd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog: Export Language Default\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export language as default\&quot;,\&quot;UniqueId\&quot;:\&quot;63816649-b99c-4c07-7bf4-ff430dcce79f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;7f278212-d239-0141-796b-f3a8051bf55c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;ca46416c-4ed7-db03-2dff-9f5244477a4e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;79cb0220-b35d-b71d-e47a-325d87aca1a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete this record?\&quot;,\&quot;UniqueId\&quot;:\&quot;0a0396d3-14e2-d132-ea44-a3e9a5817eb6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Multiple Records Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete selected records?\&quot;,\&quot;UniqueId\&quot;:\&quot;411e681d-5855-3579-d482-c19bb416c471\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;0064e8c1-9420-2240-f066-2cc85c21a470\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Restore Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore\&quot;,\&quot;UniqueId\&quot;:\&quot;7465fdb0-1784-b67f-146b-baeff7c3d9e8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Maximize Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maximize\&quot;,\&quot;UniqueId\&quot;:\&quot;f32c8621-c3bf-ed8e-bd59-1f1b2b8100aa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Error\&quot;,\&quot;UniqueId\&quot;:\&quot;d2c12088-f8aa-6c03-5376-70f2a067dc17\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Raw View Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Raw View\&quot;,\&quot;UniqueId\&quot;:\&quot;106143c6-7536-198a-a009-1d8ab083ad01\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;a7d96a54-37a8-f241-c79b-e2af7a336914\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Error Message Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Error Message\&quot;,\&quot;UniqueId\&quot;:\&quot;1ca61742-1d8a-8af6-724e-40e6437a1459\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Stack Trace Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Stack Trace\&quot;,\&quot;UniqueId\&quot;:\&quot;fc4db79a-152a-c154-8e10-82ceedeceaed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Maximize Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maximize\&quot;,\&quot;UniqueId\&quot;:\&quot;c3075941-d051-d1fd-3e44-c65aa2482298\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;e91990ea-a80d-65c6-5428-522a86e74cf5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Restore Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore\&quot;,\&quot;UniqueId\&quot;:\&quot;b2bf7ac0-1af8-c65d-1453-f978cbd0a18a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Information Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;6e09eb63-0fd8-6754-694d-a4115c8fa674\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Information Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;29264639-5127-7e49-150b-c8dabba6a5ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Warning\&quot;,\&quot;UniqueId\&quot;:\&quot;91c6847e-3c1c-8e2c-5a81-e5eecee18150\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Refresh Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh\&quot;,\&quot;UniqueId\&quot;:\&quot;29a5517b-5e4a-8f72-d175-1d4d28ad474f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;459cdd78-858d-b1d1-e672-bc4c2c8d909e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The record you are working on may have been modified or deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;c0378e15-0c5b-4bc1-e83a-164878c69b39\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Panel Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Options Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Options\&quot;,\&quot;UniqueId\&quot;:\&quot;14155309-afd7-a186-4f23-83e9a377d087\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Accessibility Tab\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Accessibility\&quot;,\&quot;UniqueId\&quot;:\&quot;c5a96a53-8386-4bca-d723-2d22dfa52716\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add column on the left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add column on the left\&quot;,\&quot;UniqueId\&quot;:\&quot;4dbb7e8a-9087-0405-0c6d-9da21b71cd0f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add column on the right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add column on the right\&quot;,\&quot;UniqueId\&quot;:\&quot;5d4e7894-502f-842c-48be-3c8ba8515f9f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add row above\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add row above\&quot;,\&quot;UniqueId\&quot;:\&quot;7f5ae894-a5c5-34e5-4a4b-172185d3fcd4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add row below\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add row below\&quot;,\&quot;UniqueId\&quot;:\&quot;735b7b79-5b11-f15b-7536-5ebadbdac5eb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center\&quot;,\&quot;UniqueId\&quot;:\&quot;1d512d67-0cc2-8194-a307-1165d42f54f7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;10967ecf-8537-8c83-b2ae-224e23d8e428\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;e7ff6ced-10a5-4fa9-6666-4d2276a37c00\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Top\&quot;,\&quot;UniqueId\&quot;:\&quot;d1fcd182-03ae-cf49-5845-8f146b86fa60\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left\&quot;,\&quot;UniqueId\&quot;:\&quot;b2143f03-172c-8b9d-39e8-c7393ae8b228\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;ee0b0dda-8368-4aaf-90e9-a7fba922f575\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;94be475a-df8d-cdc4-1d58-72ac0d5c2d9f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Top\&quot;,\&quot;UniqueId\&quot;:\&quot;048af029-6d8d-04c8-7b80-0425f162afce\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right\&quot;,\&quot;UniqueId\&quot;:\&quot;c905f287-a76f-153e-e975-130effccd563\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;f0f5a3cc-115b-dc3c-2acd-7f9649a8d6e4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;3a8d6eb3-7300-c000-9baf-bfa45769bd7f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Top\&quot;,\&quot;UniqueId\&quot;:\&quot;5a123b2d-7a07-90ee-ef66-339e1867c91a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Alignment\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alignment\&quot;,\&quot;UniqueId\&quot;:\&quot;f596d005-addd-f280-6ba3-de6752aec929\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Associate cells with headers\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Associate cells with headers\&quot;,\&quot;UniqueId\&quot;:\&quot;cdbe33e9-0d59-5324-3d65-9bfb091df6ac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Background\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Background\&quot;,\&quot;UniqueId\&quot;:\&quot;f32d81d4-0ff6-75eb-96f4-ccd4626873f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Background color\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Background color\&quot;,\&quot;UniqueId\&quot;:\&quot;8bae56fe-bf19-bcad-6663-30a5e9c7c061\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Bold\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Bold\&quot;,\&quot;UniqueId\&quot;:\&quot;a71fe451-d07b-513d-c631-df62c18c6faf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Border\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Border\&quot;,\&quot;UniqueId\&quot;:\&quot;a9020d5d-4c9f-6448-0f2c-c9d571ce2464\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Caption\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Caption\&quot;,\&quot;UniqueId\&quot;:\&quot;d9bf9b4e-cd46-f0ca-a53c-5f635f641a6e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Margin\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Margin\&quot;,\&quot;UniqueId\&quot;:\&quot;347c899c-90bf-1bf7-c2cc-e4ccf5c49f4f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Padding\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Padding\&quot;,\&quot;UniqueId\&quot;:\&quot;570250c0-2f3f-131b-f033-1310923ac09a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Spacing\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Spacing\&quot;,\&quot;UniqueId\&quot;:\&quot;85fd53cf-a169-896d-8caa-e9500466e453\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Tab\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell\&quot;,\&quot;UniqueId\&quot;:\&quot;60b6bfd0-18fd-a6f8-2dbd-6aaba04ac52a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Clean formatting\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clean formatting\&quot;,\&quot;UniqueId\&quot;:\&quot;0ca9f902-963b-4075-d0b2-6094fcf9d574\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Collapse borders\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Collapse borders\&quot;,\&quot;UniqueId\&quot;:\&quot;fac1a5ad-97a2-e923-fb72-bd2c5a87fe6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Columns\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Columns\&quot;,\&quot;UniqueId\&quot;:\&quot;847fdc4b-1e07-fb81-ff60-d0ca9969bcf0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Create table\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create table\&quot;,\&quot;UniqueId\&quot;:\&quot;b82bb3bc-5916-d2f0-63b1-9b05f23d0f91\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Create Table Hint\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create a {0} x {1} table\&quot;,\&quot;UniqueId\&quot;:\&quot;711e37c1-ec91-f8df-e313-acfd550bbcb5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;CSS Class\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CSS Class\&quot;,\&quot;UniqueId\&quot;:\&quot;c4e8aae5-1666-610f-87e1-9aaaa8a1d672\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Delete column\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete column\&quot;,\&quot;UniqueId\&quot;:\&quot;2861e80e-fa9d-10f4-9d5b-409f4c956fb3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Delete row\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete row\&quot;,\&quot;UniqueId\&quot;:\&quot;dcbfd5a3-9de3-ae1b-196a-94b04c5c0391\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;f59fa341-cff5-2eec-f451-d39c49c76ce4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Insert\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert\&quot;,\&quot;UniqueId\&quot;:\&quot;33326b1d-1494-92dc-8d38-1f55c06ac0b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Ok\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ok\&quot;,\&quot;UniqueId\&quot;:\&quot;45a0ca11-9bfe-763c-2ee8-19e166e795a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Update\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Update\&quot;,\&quot;UniqueId\&quot;:\&quot;3dfb66eb-d4e5-ef1f-c4ba-6c5b5133f082\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Edit Area Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Write your comments here. Press F10 for toolbar.\&quot;,\&quot;UniqueId\&quot;:\&quot;d9340099-f461-12f8-9f0e-2b64fed9032b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;File Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Title\&quot;,\&quot;UniqueId\&quot;:\&quot;387c7eb3-5d62-c937-0da5-ead1e32bef67\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;File Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;c1f0765e-ddf1-3ffe-4037-36b8d4d14a92\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Name\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select font family\&quot;,\&quot;UniqueId\&quot;:\&quot;8250782d-63a8-626a-108d-7be2797f2214\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Name Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;(inherited font)\&quot;,\&quot;UniqueId\&quot;:\&quot;43141e55-4fa9-8aeb-d34c-07bf453ff9b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Size\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select font size\&quot;,\&quot;UniqueId\&quot;:\&quot;f1db2ccf-1ec0-c554-58b8-516f7b3dbc7a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Size Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;(inherited size)\&quot;,\&quot;UniqueId\&quot;:\&quot;b5abbd2c-52d0-1738-8df1-c4d54a72ff2a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Fore Color\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Color\&quot;,\&quot;UniqueId\&quot;:\&quot;bd2ad2f5-b260-d28a-0c11-ae06fcbb1685\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Format Block\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Format\&quot;,\&quot;UniqueId\&quot;:\&quot;a090c4a0-a095-53f9-2eb9-8a5d2c6e3344\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Formatting\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Format\&quot;,\&quot;UniqueId\&quot;:\&quot;44a7d08c-8e7d-87cd-12c3-f9b02d46dd63\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Height\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height\&quot;,\&quot;UniqueId\&quot;:\&quot;586c00cf-4f7a-3a74-1027-d80ead0441a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;ID\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ID\&quot;,\&quot;UniqueId\&quot;:\&quot;0266877d-eecf-fe83-e2df-261ce516d7d2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Alternate text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alternate text\&quot;,\&quot;UniqueId\&quot;:\&quot;60968cce-e813-cedb-1145-cd3350068b52\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Height\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height (px)\&quot;,\&quot;UniqueId\&quot;:\&quot;a98dfdd1-019e-01f0-ef7a-728ea42cd695\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;cd87b50d-4231-d857-bd38-ce65011b3dfc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Width\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width (px)\&quot;,\&quot;UniqueId\&quot;:\&quot;fa6a988c-603d-d736-ff45-a0ca839f7e39\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Indent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Indent\&quot;,\&quot;UniqueId\&quot;:\&quot;0d7ec4e3-3d77-ed67-9c1e-1b58d496f4eb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert file\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert file\&quot;,\&quot;UniqueId\&quot;:\&quot;fd395d6b-3ddf-8828-dcf7-a838620d6106\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert HTML\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert HTML\&quot;,\&quot;UniqueId\&quot;:\&quot;ae434021-cd6a-4202-b7e7-c9a91cd180cc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert hyperlink\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert hyperlink\&quot;,\&quot;UniqueId\&quot;:\&quot;e817de86-515f-6f4b-ca9c-56e75bb01180\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert image\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert image\&quot;,\&quot;UniqueId\&quot;:\&quot;bcb5aa5b-9bd9-20f9-6e7f-7c929886ecda\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert ordered list\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert ordered list\&quot;,\&quot;UniqueId\&quot;:\&quot;08eb1dfc-dd4a-629a-b9b1-94d8753de823\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert unordered list\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert unordered list\&quot;,\&quot;UniqueId\&quot;:\&quot;b6d2a2f4-fb33-6871-1cf9-a8a202324dcb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Italic\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Italic\&quot;,\&quot;UniqueId\&quot;:\&quot;5abc5a88-13f2-7a96-83f0-d5954f60e5be\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify Center text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Center text\&quot;,\&quot;UniqueId\&quot;:\&quot;7c208561-01ca-6065-a407-61b3bd3b5a31\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify Full\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Justify\&quot;,\&quot;UniqueId\&quot;:\&quot;facba3c7-967a-3fa3-1fd6-5ae6dc6a5aab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify text left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align text left\&quot;,\&quot;UniqueId\&quot;:\&quot;d67cc82b-d4c6-f3bd-4185-56860a1b946b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify text right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align text right\&quot;,\&quot;UniqueId\&quot;:\&quot;2383fcee-5b19-56e5-992b-33c34c58ab1c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Text\&quot;,\&quot;UniqueId\&quot;:\&quot;be44b0d6-3ae2-a391-9c34-803166fc0b80\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link ToolTip\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ToolTip\&quot;,\&quot;UniqueId\&quot;:\&quot;91feaed6-bdd2-d495-37dc-7a37f0bc92f5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;1aee65bb-6578-811e-ff94-bb00f4b7d6dc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Open link in new window\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Open link in new window\&quot;,\&quot;UniqueId\&quot;:\&quot;a5970f5d-73f0-9845-988c-ac9d679bbd19\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Outdent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Outdent\&quot;,\&quot;UniqueId\&quot;:\&quot;956b30d4-f8c9-9414-e656-551716177e11\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Print\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print\&quot;,\&quot;UniqueId\&quot;:\&quot;545e0348-57c6-662b-740b-2cef8b240351\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Remove Alignment\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Remove Alignment\&quot;,\&quot;UniqueId\&quot;:\&quot;a09c02bf-337a-9831-cd37-42bddd9a3647\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Remove hyperlink\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Remove hyperlink\&quot;,\&quot;UniqueId\&quot;:\&quot;4ad59eb4-e4d0-b0e7-dbaa-c4eb54db3cd7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Rows\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Rows\&quot;,\&quot;UniqueId\&quot;:\&quot;dd97d6a5-d733-12bc-f863-29e55b5eaee8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Select All Cells\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select All Cells\&quot;,\&quot;UniqueId\&quot;:\&quot;e495088f-8e9e-ea62-b6e2-75b9420f0ef4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Strikethrough\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Strikethrough\&quot;,\&quot;UniqueId\&quot;:\&quot;4fd80576-08e7-9a0a-3c19-24f6013aec6b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Styles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Styles\&quot;,\&quot;UniqueId\&quot;:\&quot;09805869-5f48-6aaf-c29f-ed2857984d94\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Subscript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Subscript\&quot;,\&quot;UniqueId\&quot;:\&quot;3781d945-5beb-1c77-eadf-5f0db7d8520d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Summary\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Summary\&quot;,\&quot;UniqueId\&quot;:\&quot;95c76791-2375-e802-4e32-91f16facc405\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Superscript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Superscript\&quot;,\&quot;UniqueId\&quot;:\&quot;c8ee5bd2-6f61-c390-11dc-856cc33b83c1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Table\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Table\&quot;,\&quot;UniqueId\&quot;:\&quot;0833869a-1515-ffbc-5dd5-488111e408b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Table Wizard\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Table Wizard\&quot;,\&quot;UniqueId\&quot;:\&quot;58898829-5052-6e32-8024-5311d4062a08\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Underline\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Underline\&quot;,\&quot;UniqueId\&quot;:\&quot;ed6d1772-9d54-4548-7d85-821b97dcc2ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;View HTML\&quot;,\&quot;LocalizedValue\&quot;:\&quot;View HTML\&quot;,\&quot;UniqueId\&quot;:\&quot;530e0f72-4576-5903-8cf6-4d359f8feaac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Width\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width\&quot;,\&quot;UniqueId\&quot;:\&quot;f63d99ca-ab80-f984-2a90-b6ee21462540\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Wrap text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Wrap text\&quot;,\&quot;UniqueId\&quot;:\&quot;baebd362-d539-589d-abc7-3988abee8faa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Additional Information Search Panel Group Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Additional Information\&quot;,\&quot;UniqueId\&quot;:\&quot;5114f4a2-09a0-d3e6-e020-8171ccb5f24a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Filter Set Missing Name Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You must supply a name to save your Filter Set.\&quot;,\&quot;UniqueId\&quot;:\&quot;d6c295f4-4ca4-b0ad-db14-4a8297fa3000\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;adde8dc2-8841-5f64-dbd7-d7fc351b6acd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to delete filter set. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;35d72db6-7eec-0afc-892d-5b8414b33bc6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Filter Set Missing Name Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name Not Supplied!\&quot;,\&quot;UniqueId\&quot;:\&quot;63f163fc-f3ad-f309-dcd6-029930322a3e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;3a60bbad-cbbb-0783-ea5c-ee3732330227\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Load Filter Sets Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to load Filter Sets from user configuration. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;5cedfb09-1764-e4f3-bc01-b9eff19b76b5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;7cd89062-72d4-6fff-71ec-e2ff81fe6505\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Duplicate Filter Set Name!\&quot;,\&quot;UniqueId\&quot;:\&quot;dea0b45d-78ed-ba4f-45b4-afc7c53d25f0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Load Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Load Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;b89f6270-6116-4c39-5ee6-330e2f1084c5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;d75f5e9e-b13f-4692-5fc9-a27372006d39\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;96b84f76-e1e3-fc0a-821c-37ea751ca02d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Filter Set Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A filter set with the selected name already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;1f088bd0-600a-ce14-a5b1-c3b562252b4f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Saved Search Sets Hint Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Saved Search Sets\&quot;,\&quot;UniqueId\&quot;:\&quot;0cac5996-b23f-3fb9-ed62-e4a7d021ad1e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete - {title}?\&quot;,\&quot;UniqueId\&quot;:\&quot;d1f26dd9-218b-2840-50a4-6141ac3ee9ba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Ok Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ok\&quot;,\&quot;UniqueId\&quot;:\&quot;fe778805-483c-7634-8fde-aa73f592fe64\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select a Name\&quot;,\&quot;UniqueId\&quot;:\&quot;cb3c7b62-06e9-de70-ce58-1007aafef8c4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;6c0bea11-0ba1-839a-b42f-bfa7b7c2b610\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Sets Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to save Filter Sets. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;d656f5ab-1103-94e1-5941-133cf0a68d71\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Missing Localization Tag Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Missing Localization Data\&quot;,\&quot;UniqueId\&quot;:\&quot;dbc144e4-00da-5057-8673-feba58a6ffbc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete the selected Filter Set?\&quot;,\&quot;UniqueId\&quot;:\&quot;8250fab9-fb5d-a643-1406-5edae823780e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;No Filters Provided\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No filters were provided.\&quot;,\&quot;UniqueId\&quot;:\&quot;5920414a-68d9-73b3-0d9b-487877a08a25\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Missing Localization Tag Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to determine application id or localization tag. Cannot save/retrieve Filter Sets!\&quot;,\&quot;UniqueId\&quot;:\&quot;41a25877-5cba-76d5-1d30-7800f2ba8366\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;True Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;c93b4e4d-56d9-60da-29b4-236c1b6b08c8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;False Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;0a4a5671-3f4d-865c-5d04-66d03d17cebe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;01b188c3-a59d-ad32-8608-d44417b96ba1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;a1772a14-5c72-85d5-e116-2238e02148ba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Greater Than\&quot;,\&quot;UniqueId\&quot;:\&quot;e0b7c9c3-5ac1-68b4-7e3c-0d88c57e39c3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Greater Than Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;13f32751-4587-2526-1429-84842af698f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Less Than\&quot;,\&quot;UniqueId\&quot;:\&quot;f3b1a99a-595c-6f00-d617-38f9f5a6b4f5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Less Than Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;66cafe8a-7fe2-2fd9-b266-e156824fbc9f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: startswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Starts With\&quot;,\&quot;UniqueId\&quot;:\&quot;98382550-41bd-d0b7-8ebc-0aae1522c5b4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: contains\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contains\&quot;,\&quot;UniqueId\&quot;:\&quot;659e05fc-522b-0445-1e75-9c536cacb841\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: endswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ends With\&quot;,\&quot;UniqueId\&quot;:\&quot;d1a4d346-9107-8a58-d5bc-e32a7118f46b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: doesnotcontain\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Does Not Contain\&quot;,\&quot;UniqueId\&quot;:\&quot;1e45fd75-9738-6bf0-6270-75d6ed5a3e30\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;f4c2a4f7-969a-fd1e-00e8-ccc5e198d4ef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;b27852a6-1239-d483-5d43-edfaf2b2577b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is After\&quot;,\&quot;UniqueId\&quot;:\&quot;eaa8c48a-58b2-d681-0b70-b572918caf84\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is After Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;cfc372aa-7d9a-9247-0953-5976c0d34f68\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Before\&quot;,\&quot;UniqueId\&quot;:\&quot;c6183e1f-f6e7-8fe0-29cc-8632030637b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Before Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;ee1be789-0bb6-e9cd-322d-c9afa1be5730\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: TabStrip\&quot;,\&quot;Key\&quot;:\&quot;Tab Header Localization Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to localize TabStrip title text.\&quot;,\&quot;UniqueId\&quot;:\&quot;d0551c87-faf4-ed16-b70a-533b2dd252d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Virtual Keyboard Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;3950b50d-fbbf-3dde-bd6b-4eff8f899792\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Virtual Keyboard Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;fbdddd92-0bd5-54ff-d711-784e16a6b994\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tree Component\&quot;,\&quot;Key\&quot;:\&quot;Excessive Selected Items Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The hj-list-tree component was specified with more than one selected item. The hj-list-tree does not support selecting multiple items.\&quot;,\&quot;UniqueId\&quot;:\&quot;60ac8542-26ff-baa1-6668-8240b8c747f0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tree Component\&quot;,\&quot;Key\&quot;:\&quot;Data Read Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to read data.\&quot;,\&quot;UniqueId\&quot;:\&quot;030271bb-5dde-cbcc-24e7-b4f4947adfda\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Back\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;87ff446e-3e00-845b-bd79-9c09fdff4cfd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Forward\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next\&quot;,\&quot;UniqueId\&quot;:\&quot;33986ee6-95ec-8ab7-95e8-646784a54309\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Finish\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Finish\&quot;,\&quot;UniqueId\&quot;:\&quot;8619c32e-054d-2e0f-a72d-28489d388e7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;db4a71c2-894b-ed9e-0625-2ca8665febd2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Pause\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Pause\&quot;,\&quot;UniqueId\&quot;:\&quot;e8872911-e4a1-36d4-f469-a9f039b8fe52\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Invalid Page Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Specified page and/or Home Page were not defined or were invalid.\&quot;,\&quot;UniqueId\&quot;:\&quot;83a9669c-981a-2e44-b904-f5454efce6df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Home Page Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;8a4934fb-c008-b009-8f15-938aaca58fc7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Invalid Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid Page Id\&quot;,\&quot;UniqueId\&quot;:\&quot;1ea6aa7a-37ee-6b0b-4321-9ed417628ac7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Load configuration failed\&quot;,\&quot;UniqueId\&quot;:\&quot;2bc16cff-7b69-5a8f-bfe0-4bde28c7c3d8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration No Layout Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;WorkcenterUserLayoutService.loadConfiguration failed: Last layout not requested and no layout name supplied.\&quot;,\&quot;UniqueId\&quot;:\&quot;1df8f915-037f-206c-1d89-c6062624c471\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration No Page Tag Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;WorkcenterUserLayoutService.loadConfiguration failed: Requested last saved layout, but no page tag provided.\&quot;,\&quot;UniqueId\&quot;:\&quot;12a7d052-9fcf-4f56-349e-9b732436711e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;2fc6d27e-7b85-d8e0-bcf5-3dd14f7551d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Manage Screen Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Manage Screen\&quot;,\&quot;UniqueId\&quot;:\&quot;7cdf3b41-ae5d-0d3b-1f28-219b6b36f7b4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Remove Panel Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot remove a panel that lacks a serializationTag value.\&quot;,\&quot;UniqueId\&quot;:\&quot;ce2d4174-2d96-7d11-8c56-1adf32da3926\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Grid Configuration Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load grid configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;ba5f8e09-fecb-2eec-71d2-ec6abc9aae67\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Default Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;7a59156e-2c59-3dd5-76af-5c4192512191\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Application Id Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id:\&quot;,\&quot;UniqueId\&quot;:\&quot;012d7bcb-d906-5c94-a1c9-64f344148279\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Accept Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Accept\&quot;,\&quot;UniqueId\&quot;:\&quot;a013308b-ee2e-b214-f936-cb6ecf7285b0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Configuration Type Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configuration Type:\&quot;,\&quot;UniqueId\&quot;:\&quot;ba4faf18-440c-ee62-36df-b5915b52c453\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Configuration Id Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configuration Id:\&quot;,\&quot;UniqueId\&quot;:\&quot;67f0b614-5d50-eec3-f698-0f983c269d2f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Min Length Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter at least {0} characters.\&quot;,\&quot;UniqueId\&quot;:\&quot;c2a8be10-180c-79cd-145a-ab9d12a9fa3d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Regex Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value that match with &apos;{0}&apos; pattern.\&quot;,\&quot;UniqueId\&quot;:\&quot;c079f58d-6f16-2b7b-872a-3050b4b8d8b9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Min Value Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value greater than or equal to {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;d78da7c8-0afb-2cd3-e8b4-dc6baaa5a891\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Range Length Error Message \&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value between {0} and {1} characters long.\&quot;,\&quot;UniqueId\&quot;:\&quot;53b48623-30ac-f393-6657-640a1ed22e90\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Validation Errors On Page Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;There are validation errors on the page.\&quot;,\&quot;UniqueId\&quot;:\&quot;2d9c36aa-5e24-b0da-593e-b6552bfd2e59\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Range Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value between {0} and {1}.\&quot;,\&quot;UniqueId\&quot;:\&quot;88adbff4-4ba6-8bd1-5b94-7d31e76ca9ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Max Value Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value less than or equal to {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;edd2c6a2-fd23-a3ef-068b-9e2cab290ca1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Max Length Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter no more than {0} characters.\&quot;,\&quot;UniqueId\&quot;:\&quot;5fe8c7e4-d796-aa46-9270-0e34de7d3be8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Required Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;This field is required.\&quot;,\&quot;UniqueId\&quot;:\&quot;bec9015c-7fa5-303e-5f5a-273ca15e5503\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Email Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid Email.\&quot;,\&quot;UniqueId\&quot;:\&quot;c41e2674-bf13-c5b4-ba56-5382f54ef9e0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Url Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid URL.\&quot;,\&quot;UniqueId\&quot;:\&quot;16fa06b3-56c8-cb6a-e018-cf4016807f40\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;In Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter one of the following values: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;d7f9d442-b73b-acec-bcd6-3db82207a253\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Equal Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter the following value: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;4e82c5a0-522c-827d-4517-78b317d52c01\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Request Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid value. Server rejected the value as valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;825601a1-8f12-d635-d1ef-c3b9385bd0cd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Request Fail Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to validate with configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;61328d11-7bd6-7c45-1fba-1a0ab8ee23b9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Favorites\&quot;,\&quot;Key\&quot;:\&quot;Favorite Removed Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorite Removed\&quot;,\&quot;UniqueId\&quot;:\&quot;8b4af258-fb49-7d91-7879-4810d3c5d6a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Favorites\&quot;,\&quot;Key\&quot;:\&quot;Favorite Added Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorite Added\&quot;,\&quot;UniqueId\&quot;:\&quot;bd56fa2d-8d8f-adc6-16c8-944ca9bb4065\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: FieldTable Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToRequestErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred requesting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;fafe228b-21e9-8ee5-2bc2-67e1caa8c581\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Informations: deleteSuccessMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete was successful\&quot;,\&quot;UniqueId\&quot;:\&quot;ec46bc1a-d05d-cfed-15d7-ac533d088ff1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: create\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New Record\&quot;,\&quot;UniqueId\&quot;:\&quot;f702d9bf-5f03-d52a-f393-cab7f90e7eab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: delete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;7db680ee-224b-ab4d-1157-429da5c81f2d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: edit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;b335580f-ebb5-8bfa-e3df-757692a47935\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;6bee8435-29bc-0da1-44fb-f80dfc9c6723\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: save\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;5c9d33c9-359e-492b-9349-61f45d9d487e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToUpdateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred updating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;fad2f76a-68d2-319f-30a7-8d45b4d105d9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToDeleteErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred deleting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;19a2df3b-9b8c-406d-8cc9-d61d928d9f0b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToCreateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred creating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;bd797b46-9834-856f-d7fd-dde595d395b4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Responsive State Information\&quot;,\&quot;UniqueId\&quot;:\&quot;1ba198b3-9a16-6c28-416d-7781c9153c24\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Height Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height\&quot;,\&quot;UniqueId\&quot;:\&quot;196f4b22-1ce3-f799-18b9-b23a9b18773e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Device Size Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Device Size\&quot;,\&quot;UniqueId\&quot;:\&quot;af1f0a59-c956-abfa-2450-e8844ed06347\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Orientation Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Orientation\&quot;,\&quot;UniqueId\&quot;:\&quot;59403a67-263b-3863-0caf-d8e712ceb270\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Width Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width\&quot;,\&quot;UniqueId\&quot;:\&quot;fe5979c0-ec6c-b801-3e30-be583d9515df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Device Pixel Ratio Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Device Pixel Ratio\&quot;,\&quot;UniqueId\&quot;:\&quot;39959274-0fc4-9c17-8f12-f5723ece057c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Loading State Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loading\&quot;,\&quot;UniqueId\&quot;:\&quot;4e479fff-cd4a-3f7b-9187-80250a305aad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application\&quot;,\&quot;UniqueId\&quot;:\&quot;fe4262cb-e967-a83a-f770-7dc053d3309b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Unable To Initialize Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to initialize application\&quot;,\&quot;UniqueId\&quot;:\&quot;8e7fa855-b1f8-90d8-08bb-7c6e261ea73e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loading Applications\&quot;,\&quot;UniqueId\&quot;:\&quot;3f755623-ce11-73ae-c2cd-e467db8cffae\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Loaded State Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loaded\&quot;,\&quot;UniqueId\&quot;:\&quot;1629081e-a5c8-d8d0-39e1-c114797419ca\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Get Tenant Admin Configuration Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get tenant admin configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;d1dddf22-d24a-e2f5-d94a-bdb59b458120\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Import Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import\&quot;,\&quot;UniqueId\&quot;:\&quot;22659ac0-e4ca-b6bb-cea4-6a100f59093b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Export Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export\&quot;,\&quot;UniqueId\&quot;:\&quot;823a7c38-4d10-9180-b589-f2f5b8877e80\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Discover Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Discover\&quot;,\&quot;UniqueId\&quot;:\&quot;a76ccb54-bf43-4141-ca95-5fa54387226c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One\&quot;,\&quot;UniqueId\&quot;:\&quot;ee7796ce-2686-2116-543c-1139cee55378\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;a6b97a78-0b63-1cc6-357f-f331a58bb137\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close Space\&quot;,\&quot;UniqueId\&quot;:\&quot;58db6b90-697d-af28-a700-1f2dc4af9815\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;633b7e01-8bf8-ac58-db48-6467e242a365\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;95bc2159-af11-7db1-c905-b5e74b9ee65b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to close space {0}?\&quot;,\&quot;UniqueId\&quot;:\&quot;504c5fa5-a796-ef78-a6bd-46a27f998efd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Session\&quot;,\&quot;UniqueId\&quot;:\&quot;0c0e0baa-0ad6-12f2-7586-14e69706f3d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Culture Script Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load script for culture\&quot;,\&quot;UniqueId\&quot;:\&quot;d5bad86e-3ed8-a0f8-790c-b72438c9b8fe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Home Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;f0276363-8148-e693-c37c-2d64e1cbd147\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Try Again Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Try again\&quot;,\&quot;UniqueId\&quot;:\&quot;51c8ece6-2250-2f24-cfdb-35785429a573\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Expired Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session has been expired or kicked out by system administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;984e1607-38a9-4de9-6aff-55946bde4e73\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Expired Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application session has been expired or kicked by system administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;67c128cd-895b-e30a-836a-9adb1a66b020\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Alerts Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts Page\&quot;,\&quot;UniqueId\&quot;:\&quot;875d443c-c97b-54a8-552f-3c36f3434cde\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recovering Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Creating new application session ...\&quot;,\&quot;UniqueId\&quot;:\&quot;3b04933a-7091-0171-120c-bab3a8902911\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Main Close Confirmation\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to close Körber One. All unsaved changes will be lost.\&quot;,\&quot;UniqueId\&quot;:\&quot;ef137ed2-df5a-5d31-8987-0d731d358697\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Copyright Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;© 2019-2021 Körber Supply Chain U.S., Inc. (a successor in interest to HighJump Software Inc.) All Rights Reserved.\&quot;,\&quot;UniqueId\&quot;:\&quot;e19a94ea-9594-92d2-d783-c3478bd8a393\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Quick Links Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;40ddc039-3d65-edec-68a3-ca2aefae0974\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to obtain a session for application, most likely because no licenses were free for this application. If you need to use this application still, please contact your administrator to clear a session for you and click {0}, otherwise click {1}.\&quot;,\&quot;UniqueId\&quot;:\&quot;abfe6459-1351-e8ae-66d5-c7bc8f11aff5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Close Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close\&quot;,\&quot;UniqueId\&quot;:\&quot;c2152657-dac1-0f2f-9926-1703f410576f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Version Update Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your browser is using an incorrect version of Körber One software. Refresh the browser and log on again.\&quot;,\&quot;UniqueId\&quot;:\&quot;60f6d21b-ff81-d8d6-1b0c-5f08df3a1477\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Version Information Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get version information.\&quot;,\&quot;UniqueId\&quot;:\&quot;96d084a5-44f7-681a-db40-f6126e17d9e3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Network Outage Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Network connection\&quot;,\&quot;UniqueId\&quot;:\&quot;692ae5b8-212a-cc4c-549a-48398d302ff1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Network Outage Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Network connection was lost, please wait...\&quot;,\&quot;UniqueId\&quot;:\&quot;306455d3-e2be-00bf-91a7-c886465a7c6a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh session\&quot;,\&quot;UniqueId\&quot;:\&quot;5277690b-bccb-5151-0afe-d7c841a871ef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to refresh session.\&quot;,\&quot;UniqueId\&quot;:\&quot;4fed9e09-90de-5f3d-63cb-ad791cedffdf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Retry\&quot;,\&quot;UniqueId\&quot;:\&quot;a6d669b3-c149-a0f6-f77d-8f21ba1ba718\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;d44ab532-6907-d60e-4f72-efe46433e684\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;10058876-544a-4640-b1ae-63eb6fc65b14\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;4b996b2b-80ee-ff49-3316-71f088ba5676\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Privacy Policy Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;KÖRBER SUPPLY CHAIN US, INC. PRIVACY STATEMENT\&quot;,\&quot;UniqueId\&quot;:\&quot;345e2d1f-03a0-f37e-9135-bd4d0757e5e8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refer to the company privacy policy for terms of use.\&quot;,\&quot;UniqueId\&quot;:\&quot;a6a652f8-503f-d1e3-613c-d92f8c2b897a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Timeout Warning Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session Timeout Warning\&quot;,\&quot;UniqueId\&quot;:\&quot;95e310f1-7361-0ad5-1450-7fe5e655ab02\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Acutomatic: Flashing Browser Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session timeout\&quot;,\&quot;UniqueId\&quot;:\&quot;b04d5484-f2ff-8349-6ab6-c25058bdff81\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retrieve Tenant Configuration Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to retrieve Tenant Configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;cfe26dfb-b1d3-964d-5907-d04e85a8ccda\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Remove Session Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to remove the current Sesssion.\&quot;,\&quot;UniqueId\&quot;:\&quot;1c03f981-05cf-9138-166c-a21f42737ca3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your session is about to timeout due to inactivity. Do you wish to continue or logout of your session?\&quot;,\&quot;UniqueId\&quot;:\&quot;b7c8f3c7-190f-0fd9-106a-697de17293d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog Yes Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;0fc965fd-6c59-6705-2219-d4837d380466\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog No Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;56449212-c0fa-dbd7-99bc-061e4347fe34\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Yes Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;9fec308a-685a-3f69-782e-c11f30955041\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;No Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;bdc7cfea-3aff-f76f-cd82-94959dbc96d5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;80b187a1-7413-38d2-6243-272d66d886e1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;ae08e555-e167-f253-ab23-5fc8e2e15d51\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;f27ae777-d979-ef93-6ee8-a88b3049930f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;13f8aa9a-40ce-5ec6-d021-2b06a68bb86c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to close all pages and logout from Körber One.\&quot;,\&quot;UniqueId\&quot;:\&quot;a636a9a1-3508-2e6b-6403-a3eee89c8573\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.FirstName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;59c507aa-0ee3-e57f-2ec0-7cf33bcb0882\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.LastName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;0f485a15-a9d1-bd3a-69a4-739e2baaf3d7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.LogOnName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logon Name\&quot;,\&quot;UniqueId\&quot;:\&quot;10ac34a5-e542-e9bc-2805-69bb46849d17\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.Email\&quot;,\&quot;LocalizedValue\&quot;:\&quot;E-mail Address\&quot;,\&quot;UniqueId\&quot;:\&quot;09de5ace-5a21-d42a-823f-f3a393f8fc97\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.Phone\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone Number\&quot;,\&quot;UniqueId\&quot;:\&quot;88e20732-cdf4-83ad-283d-0ada068c65c6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Group Description: User\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Core Platform User Personal Data\&quot;,\&quot;UniqueId\&quot;:\&quot;b95d572f-3655-3d13-85ac-d815ef8574b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User does not exist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} does not exist.\&quot;,\&quot;UniqueId\&quot;:\&quot;52dfaa71-f64f-d296-0601-d54570c81501\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Invalid tenant for user\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid tenant for user {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;b553a387-39cb-0bf8-0d39-4703648068a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User is either an administrator\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} is either an administrator or a system user.\&quot;,\&quot;UniqueId\&quot;:\&quot;1e3ad8ef-0f90-aeea-dce2-7f9adaacea13\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot process PDP operations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot process PDP operations with current connected user {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;208b7e4d-1c03-6dcc-77c5-3c969c525fef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot export selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot export selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;f5f9323c-424c-ee57-489d-21fe8ee70b08\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User not found\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} not found.\&quot;,\&quot;UniqueId\&quot;:\&quot;5482f525-c888-b225-351f-4f525b92a14c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error trying to export\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to export selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;546c3a75-51bb-aebc-829d-bf0eb811d4d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot delete selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot delete selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;c0c565f4-4355-8077-ee6a-5cdbb66ef636\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to delete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to delete selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;54a7ec19-318f-d7a6-6891-ec1bf4ff395b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot restrict selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot restrict selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;532ae59e-58c2-4dfe-45de-389c26a71477\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to restrict\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to restrict selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;06ead2cb-2eda-4a1d-dd8e-e7ebcaaef622\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot unrestrict selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot unrestrict selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;5d9f1266-6769-bbe0-322f-0c118cda07b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Invalid user identifier\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid user identifier.\&quot;,\&quot;UniqueId\&quot;:\&quot;d6dc88d0-2f08-60ea-a835-70a3bf2ba470\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User with same info exist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} with same LogOnName or Email already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;7a7e24da-4585-ad01-5633-5ad3d509118d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to unrestrict\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to unrestrict selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;8f65b618-cf8d-cf2b-3c8e-04f83f16bd98\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Platform User Interface Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One User Interface\&quot;,\&quot;UniqueId\&quot;:\&quot;c09ed586-63eb-9538-124c-0b6269d79c30\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Localize Application Menu Items\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable To Localize Application Menu Items\&quot;,\&quot;UniqueId\&quot;:\&quot;3dbf188c-3761-24c6-e559-6fdfe1b35c67\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Menu Not Found Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu [{0}] was not found. Full Path: {1}\&quot;,\&quot;UniqueId\&quot;:\&quot;c3cccf8e-74b1-22ad-c12b-ececb0dd7c0a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;About Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;About\&quot;,\&quot;UniqueId\&quot;:\&quot;ece0f93a-3209-c8dc-b015-32dd8264da00\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Spaces Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Spaces\&quot;,\&quot;UniqueId\&quot;:\&quot;6da716bf-b71e-8eb1-2c2b-a9ed7472c5de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Search Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;8680ebbd-f402-400d-d3f9-d542a9ee0d1c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Static Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load static menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;f49df71d-2c3a-12e2-ce07-362dd81af274\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Help\&quot;,\&quot;UniqueId\&quot;:\&quot;b2141148-5cac-286d-bd8b-70a673629b24\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Favorites Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorites\&quot;,\&quot;UniqueId\&quot;:\&quot;9a10e8a9-3d7e-09a8-206b-f70e67020cf4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Video Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Video Help\&quot;,\&quot;UniqueId\&quot;:\&quot;f108356c-5768-cd82-e6ea-128135cefd08\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load MetaPage Instance Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load MetaPage instance menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;03c31fa1-52a7-d2c9-3a61-9ed6dca6c768\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Online Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Online Help\&quot;,\&quot;UniqueId\&quot;:\&quot;aaa18c98-44c2-ee65-3e57-87a058c8d843\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;5660952b-bf9d-1362-0d89-01c80a2ea970\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Dynamic Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load dynamic menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;dd8835b4-1d80-0594-d749-342ed7cb1e3a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Help Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load help menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;b1123f63-4841-0c5d-e96d-04205c4719fa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load MetaPage Instance Help Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load MetaPage instance help menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;d2dff8cf-c1e1-349e-c7a1-31a98939cf1e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Video Help Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load video help.\&quot;,\&quot;UniqueId\&quot;:\&quot;d9a8ab2e-e91a-b173-1bed-d4562ab05bb0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Localize Application Help Menu Items\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable To Localize Application Help Menu Items\&quot;,\&quot;UniqueId\&quot;:\&quot;a1c2dd21-0889-d507-a318-5a1455553dfd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Copy Page URL Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy Page URL\&quot;,\&quot;UniqueId\&quot;:\&quot;d7fbec43-6953-8dd7-9c2b-d445c3316c6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Save Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save quick links. \&quot;,\&quot;UniqueId\&quot;:\&quot;2cd67ae7-82ea-10da-2be6-630b4f1bd3cc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;1213b8ed-42de-943f-254d-94ebc7030541\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;772fc92a-ff44-2a9e-88c1-9a0126c8e4a2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Link\&quot;,\&quot;UniqueId\&quot;:\&quot;df0a0ce2-f6e1-7a1e-f96f-cba1d1fbd9bc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Quick Link Home Page Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load quick link home page.\&quot;,\&quot;UniqueId\&quot;:\&quot;c6ae63dc-886d-493e-83c4-519ac512679d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;System Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System Link\&quot;,\&quot;UniqueId\&quot;:\&quot;4c252815-493c-e980-973a-c3242d231fe6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to restore to default quick links?\&quot;,\&quot;UniqueId\&quot;:\&quot;33da4913-a69e-2370-d849-ec9a48de166c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore Defaults\&quot;,\&quot;UniqueId\&quot;:\&quot;0991f132-7fd9-627d-f601-bf0058c1f7a2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;User Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Link\&quot;,\&quot;UniqueId\&quot;:\&quot;10686d7d-7f84-cc6e-a449-f197abb79435\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page Id\&quot;,\&quot;UniqueId\&quot;:\&quot;0a7b129a-3203-5527-cdc1-29ebb8ec508e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;deb79f57-18c6-30fd-42b2-7f09d072a514\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Type\&quot;,\&quot;UniqueId\&quot;:\&quot;772a21cb-67f0-fd81-2335-dc6787f57986\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;c20002cd-23fd-b6cc-176c-d5ed7d5f0693\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;4ef0f649-f579-5f8d-bd45-b60d81dba393\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Name\&quot;,\&quot;UniqueId\&quot;:\&quot;d0f4efd8-cffd-493d-90d3-9d1fa135b5fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Link with this name already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;78fef292-ec57-9c6b-628c-c7ec80e42c1c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;13c6f5e3-5fa2-4b99-5f71-32262e791e5d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Type\&quot;,\&quot;UniqueId\&quot;:\&quot;813a47e0-144d-bd76-6f2d-adf455747c5c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;c75c2bfa-1c29-cd1c-a5ca-d0fd03a4dd74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Icon Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon\&quot;,\&quot;UniqueId\&quot;:\&quot;1d0d2d76-9d70-2107-7af6-fff5836114c9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;9a158ac7-c7cc-a3bd-4ac4-562e8a54580e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Choose Icon Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose icon\&quot;,\&quot;UniqueId\&quot;:\&quot;60514d41-a773-d49a-24de-cfc7dac922b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;3258e998-f5af-fa3a-9225-68ab98e00dfe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Not Found Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu path [{0}] was not found.\&quot;,\&quot;UniqueId\&quot;:\&quot;c2581191-2937-2ee7-2b28-b3800e79f418\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Remove Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to remove quick link.\&quot;,\&quot;UniqueId\&quot;:\&quot;0b13f65c-e213-49ce-9b30-42e4a579b2fe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;14dd9d4a-3e41-8b1f-2f7d-c40b1e00e41e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Change Icon Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change\&quot;,\&quot;UniqueId\&quot;:\&quot;f22feb86-aa0f-d88c-4f15-da2ed3b7e06d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application Icons Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application icons.\&quot;,\&quot;UniqueId\&quot;:\&quot;f22b94dd-460d-f6cf-fe62-3094e3f012b7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Parameters Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Parameters\&quot;,\&quot;UniqueId\&quot;:\&quot;2411da73-61ca-614c-81db-5b88a7cd128f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Grid Filters Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Grid Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;a05b6b0c-231c-6649-cd37-169c34a71fb5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;73d42f14-f6ec-d563-3df7-cb7158169326\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Custom Action Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom Action\&quot;,\&quot;UniqueId\&quot;:\&quot;a1794f89-ca2b-c866-ed71-9b0ce8940d9f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load quick links.\&quot;,\&quot;UniqueId\&quot;:\&quot;9abbe73e-c64d-b568-502c-d819fedc6ad1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Icon Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon\&quot;,\&quot;UniqueId\&quot;:\&quot;65da6396-2d54-f56c-4efb-760c51bdc064\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Add New Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New\&quot;,\&quot;UniqueId\&quot;:\&quot;3469c056-01fb-34c8-79f2-2298530ef656\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Edit Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;79dbe6a6-9b7f-e363-414b-e5474c6feb2c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Reorder Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reorder\&quot;,\&quot;UniqueId\&quot;:\&quot;7e1cdee6-37ac-1a0b-8a0d-cd87a6cb3436\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;84e0a750-c3ba-77c3-fe2a-03721098fe5a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Home Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;b3996cba-2f73-4f18-45e5-59b206f48cd8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Restore Default Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to restore default quick links.\&quot;,\&quot;UniqueId\&quot;:\&quot;2fd706d9-ee67-058e-4162-c7013671b532\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;5c1f1656-5dcf-9a6f-ecbe-ddda6ac3de50\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Source Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Source Application\&quot;,\&quot;UniqueId\&quot;:\&quot;065aa113-f894-9f28-ab71-eeab01b04aa4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;c465dedd-9fd1-58b4-5497-e41e4a20c302\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore Defaults\&quot;,\&quot;UniqueId\&quot;:\&quot;7cb0f0c4-0afa-d078-ed0f-47360cd70bd6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;New Quick Link Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;5dfe2d78-3978-bed0-0232-eecded7281ac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Visible Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Visible\&quot;,\&quot;UniqueId\&quot;:\&quot;5fd43561-dca0-e8dc-7980-e5f594f75663\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu path cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;1ce01de3-802f-3e10-801d-ce39f6329fec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Type Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page Type\&quot;,\&quot;UniqueId\&quot;:\&quot;3c5fca94-a5b6-56df-1fe3-390c0faf656b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete quick link {0}?\&quot;,\&quot;UniqueId\&quot;:\&quot;240b1668-f7b5-27b8-59c3-b31445adbfd7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;8f149b26-b1d6-14f6-c07b-79fdb7927d8c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Visible Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Visible\&quot;,\&quot;UniqueId\&quot;:\&quot;f54ddb05-0d94-c69e-1e62-21cd077b0029\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;d40b399a-adf6-82fd-c594-fd78ca7bdd44\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Icon Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;1f34ce21-e7f0-ae65-ca2d-3065349a2232\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;2e9b6fa0-b128-a356-ec10-76e7606fe67a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Choose Icon Dialog OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose\&quot;,\&quot;UniqueId\&quot;:\&quot;b1f52c7b-a279-18e7-0db8-823cb077163f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;81723e79-e5c9-e1a9-d6aa-5964f7599d88\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: System Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System\&quot;,\&quot;UniqueId\&quot;:\&quot;e8d5e592-cea8-3fa2-149c-b8654dca980d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Home Page Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;ed9153f5-250f-df0a-5452-a1398438fdea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Name Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;f48f6849-5e2f-565d-8553-b25fc29efa33\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Administrator Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Administrator Link\&quot;,\&quot;UniqueId\&quot;:\&quot;2e9f70d2-b053-c0b8-9512-e8175bc006fd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Status Bar\&quot;,\&quot;Key\&quot;:\&quot;Header Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;STATUS\&quot;,\&quot;UniqueId\&quot;:\&quot;3ade07e8-1628-66ee-6515-fc934814fe76\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-62" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$select</stringProp>
                  <stringProp name="Argument.value">ProductId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/ProductModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-63" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;AccellosOne Pulse\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;92f359a6-8d0b-70e3-2fc2-2a6030fd4524\&quot;},{\&quot;ApplicationId\&quot;:\&quot;Advantage Commander\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;cd8f7fa5-b6d2-b897-70e6-6217f313b06a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;ce7c1f03-c5d5-8afa-eeb7-3dca574bdaf8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;Supply Chain Advantage\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;0cfba36a-1852-d287-319f-104a4799d0dc\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-64" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Alerts/AlertItem.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-65" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetInstalledHost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-66" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$inlinecount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$inlinecount</stringProp>
                  <stringProp name="Argument.value">allpages</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$select</stringProp>
                  <stringProp name="Argument.value">Id,ApplicationId,IsPersistable,IsRead,IsFavorite,Status,SourceId,SourceUserId,PayloadPreview,SourceType,TargetUserId,PayloadType,PayloadHeader,DateCreated</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$orderby" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$orderby</stringProp>
                  <stringProp name="Argument.value">IsFavorite desc,DateCreated desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-68" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$filter</stringProp>
                  <stringProp name="Argument.value">Status eq &apos;new&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$inlinecount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$inlinecount</stringProp>
                  <stringProp name="Argument.value">allpages</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$top" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$top</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-67" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetProductsWithInheritance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-69" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetAuthorizedMobileApplications</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-85" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Add Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add\&quot;,\&quot;UniqueId\&quot;:\&quot;390003e9-305b-054f-e063-ffd2f56a8a4a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Edit Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;940c4302-0c6e-62da-95e1-3c1b4fed77ac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;8b9094a3-bb9a-40ff-1c06-6a5889a8885c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;cfe752b4-b731-67e2-b786-459e51effaa2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Finish Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Finish\&quot;,\&quot;UniqueId\&quot;:\&quot;c0d2a04d-e6b8-62ef-775c-eaa2e1c63ee0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Back Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;a6c79060-6e40-c452-e8f5-b4408b5cd41b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Next Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next\&quot;,\&quot;UniqueId\&quot;:\&quot;fc76c33f-32f2-a28b-86ca-709042ceb7ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;2faea1d7-a13e-2f98-c806-cc8d5ed02a6f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Ok Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;07a0f722-f0d5-f553-b1bb-248dfde65d79\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Copy Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy\&quot;,\&quot;UniqueId\&quot;:\&quot;48daa14c-67a5-e66c-3e11-8e22d44d771b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Search Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;579d877b-efbe-1ed8-b533-401ac5b11b3e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;System Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System\&quot;,\&quot;UniqueId\&quot;:\&quot;6be07836-9156-467e-625a-ef316cf3e73f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;1a4d7829-f085-6bbb-015c-db458aac20f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Install Print Station Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Install Print Station\&quot;,\&quot;UniqueId\&quot;:\&quot;26d05b5a-5ecc-4de5-836c-0ff6add050e0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Tenant Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Tenant\&quot;,\&quot;UniqueId\&quot;:\&quot;d2edc3f8-9057-4fde-8dfc-fb9ef6fe3dd6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application\&quot;,\&quot;UniqueId\&quot;:\&quot;1054d0d6-c9ca-bc5e-13c7-c39471317956\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Files Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Files\&quot;,\&quot;UniqueId\&quot;:\&quot;a2c4a580-5ac6-e512-4789-bf7f16438616\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Confirm Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;5d7d1219-e9f8-a345-36d8-a704a68996f3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Get User Mode Preferences Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get user preferences.\&quot;,\&quot;UniqueId\&quot;:\&quot;5d7ac79a-999d-d6c4-5057-0f291b7d1da5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Update User Mode Preferences Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to update user preferences.\&quot;,\&quot;UniqueId\&quot;:\&quot;aa218fc2-7c31-db9a-e1cb-3e6fc6d950b6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Update User Mode Preferences Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User preferences have been updated.\&quot;,\&quot;UniqueId\&quot;:\&quot;e0dab58f-c9fc-53df-d9fd-a9e1f4127bc8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Page Access Denied Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not authorized to view this page.\&quot;,\&quot;UniqueId\&quot;:\&quot;e6242197-4dce-e4bf-1794-ad783b5180c2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Email Log Dialog: Get Default Email Template Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get defaut email template.\&quot;,\&quot;UniqueId\&quot;:\&quot;d24427fd-78e2-8f23-a081-c8149e38308c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Workflow Parameter Description\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workflow\&quot;,\&quot;UniqueId\&quot;:\&quot;a5a7b736-58ac-f0c6-1adc-45cff8b1c775\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;True Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;e40d880c-a130-5f7b-925c-abaec816e9f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;False Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;ed03bb6e-fff8-adb5-fced-15dcde774bba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Auto Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto\&quot;,\&quot;UniqueId\&quot;:\&quot;8c8a595c-6291-3a60-abcb-ae8b3516a5f8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;On Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On\&quot;,\&quot;UniqueId\&quot;:\&quot;49fa3bae-9511-81d3-5bc9-710e8c41d485\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Off Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Off\&quot;,\&quot;UniqueId\&quot;:\&quot;297f89fd-b5f4-556b-cda2-9c774db6a06b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Allow Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;4114f182-a158-fb5b-77f8-f12ff7745643\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Deny Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;c3fb1486-12f4-d24c-4894-df33fb67d742\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Not Declared Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Declared\&quot;,\&quot;UniqueId\&quot;:\&quot;e72c40a9-1bc9-0a0f-1cbb-a3c04e8d0693\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Selected Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export selected\&quot;,\&quot;UniqueId\&quot;:\&quot;de510c56-69e7-e743-3103-6d0d9eba558c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all\&quot;,\&quot;UniqueId\&quot;:\&quot;2126d51d-5cda-d9c6-d02c-195bc0f21c98\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Current Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export current application\&quot;,\&quot;UniqueId\&quot;:\&quot;14da9808-d34c-120e-baa5-bcfaae0bcf8f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Applications Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all applications\&quot;,\&quot;UniqueId\&quot;:\&quot;1a55c21d-631b-efae-1346-6cd4e1722722\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Current Deliverer Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export current deliverer\&quot;,\&quot;UniqueId\&quot;:\&quot;be65e298-b4f8-ddd7-98a1-cd24c3fdc1df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Deliverers Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all deliverers\&quot;,\&quot;UniqueId\&quot;:\&quot;58c23007-a2b3-b873-e107-ce3638d0f8f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Is Not Supported Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clickonce is not supported\&quot;,\&quot;UniqueId\&quot;:\&quot;c97ea393-c384-cc08-5d34-fcafdb68ca8b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Is Not Supported Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Do you want to enable clickonce?\&quot;,\&quot;UniqueId\&quot;:\&quot;a45b0044-2359-cab8-6082-a7cf8abca992\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Yes Text Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;1df73def-9010-ec0e-a44b-7253407feae8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce No Text Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;d719b066-3dd6-9155-eba2-8a02b2eb6ac9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New User Template Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User Template\&quot;,\&quot;UniqueId\&quot;:\&quot;c09d3533-9ed1-1fd9-1028-9c9cdbd778aa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New User Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User\&quot;,\&quot;UniqueId\&quot;:\&quot;baf2b4e2-10fa-dee3-7152-33b6621d1207\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New Role Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Role\&quot;,\&quot;UniqueId\&quot;:\&quot;7b720ad0-e1d1-67f1-7558-cfdfbb71fa5f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Select User Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select User\&quot;,\&quot;UniqueId\&quot;:\&quot;a75234d2-8dfc-d523-6c85-fc8c6efd391f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Select User Dialog\&quot;,\&quot;Key\&quot;:\&quot;Select User Template Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select User Template\&quot;,\&quot;UniqueId\&quot;:\&quot;568a66a9-8641-ab7c-ea5c-7e753172d0ba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select Users from Active Directory\&quot;,\&quot;UniqueId\&quot;:\&quot;d2f32413-cf08-e259-ca7d-35af3a2d767e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;9cc1f6d9-fe19-3eb1-4699-f048e2dfe2b4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Filters Panel Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;be737c34-a699-edf4-7b8b-26c6eb604e6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Users Panel Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Users\&quot;,\&quot;UniqueId\&quot;:\&quot;e0a180e0-de3e-65ab-63e3-34bad1a030d8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchText\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;27b5b72b-4deb-2377-0796-e8dbffa9016b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchProperty\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search Field\&quot;,\&quot;UniqueId\&quot;:\&quot;040f37f8-d15e-b055-d095-2e0b43a62084\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchLocal\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Local Computer\&quot;,\&quot;UniqueId\&quot;:\&quot;43943fa1-42ea-b3bf-e170-3f8a7c2f3bbf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: sizeLimit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Records Limit\&quot;,\&quot;UniqueId\&quot;:\&quot;eaea20ef-948e-1a04-88a2-99edcc18bfa0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to search users in Active Directory.\&quot;,\&quot;UniqueId\&quot;:\&quot;e546b543-70f6-96b3-23bf-0f6cbc2023de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Common Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Common Name (cn)\&quot;,\&quot;UniqueId\&quot;:\&quot;bf4b4641-99b0-7b35-6f45-9093a07932ad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Account Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Account Name (sAMAccountName)\&quot;,\&quot;UniqueId\&quot;:\&quot;49de9d0d-d6af-aa7e-52cc-db9be8ad8ad9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;First Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name (givenName)\&quot;,\&quot;UniqueId\&quot;:\&quot;0481757d-1367-4bfe-3cd4-3a56ccf5f3c6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Last Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name (sn)\&quot;,\&quot;UniqueId\&quot;:\&quot;39597992-6c7c-2133-83a6-a5ad67517511\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Email Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email (mail)\&quot;,\&quot;UniqueId\&quot;:\&quot;fbb66a3e-850a-ca33-f6d0-09107b9dca10\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Display Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Display Name (displayName)\&quot;,\&quot;UniqueId\&quot;:\&quot;bec4b467-f301-f66c-586b-b42bb7436238\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;User Principal Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Principal Name (userPrincipalName)\&quot;,\&quot;UniqueId\&quot;:\&quot;d913026c-a9c0-b38f-05d7-70ea2056fd18\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name (name)\&quot;,\&quot;UniqueId\&quot;:\&quot;bdfe1f30-5357-739d-28ca-d18ca687a5ba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_LogOnName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;774e39f2-670c-ef6d-daad-3b95bba1140c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_FirstName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;0e174ade-b59f-e400-7da7-778ccc4bde08\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_LastName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;5584f7c8-a7f2-187c-06d5-c7e9b5239a28\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_Email\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;ca76b6f3-37e2-3291-a013-46bbb835745f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_Phone\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone\&quot;,\&quot;UniqueId\&quot;:\&quot;de64118c-e762-8302-d133-69d08e271d70\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New User Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;85e031b5-6948-e474-0b90-5c06ffee653a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New Role Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Role Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;30c35189-3b73-4de8-d612-d1bb2a2f538e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New Scheduled Task Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Scheduled Task Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;4b852f6f-4a5d-ca57-1770-f82d5bd6e20d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Identity Claims\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Identity Claims Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get identity claims.\&quot;,\&quot;UniqueId\&quot;:\&quot;70ce1a78-aebf-4f0b-72f6-8f59b25cb2dc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;47679d0f-50fe-6d4b-e49b-e9e686966065\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Text\&quot;,\&quot;UniqueId\&quot;:\&quot;f9f77137-350e-0094-9d15-44a3c93942c2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;NumericInteger\&quot;,\&quot;LocalizedValue\&quot;:\&quot;NumericInteger\&quot;,\&quot;UniqueId\&quot;:\&quot;353e54c2-4827-cb68-36c5-0e97d26fb759\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;NumericDecimal\&quot;,\&quot;LocalizedValue\&quot;:\&quot;NumericDecimal\&quot;,\&quot;UniqueId\&quot;:\&quot;91bff4ea-90ad-b1a6-9ee8-673fbbee4b6b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Boolean\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Boolean\&quot;,\&quot;UniqueId\&quot;:\&quot;d37071ec-7529-2a3b-5606-bfe023471600\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Guid\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Guid\&quot;,\&quot;UniqueId\&quot;:\&quot;106ac6ca-1137-8044-c9f7-e39195eebe9a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;ValidatedSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ValidatedSource\&quot;,\&quot;UniqueId\&quot;:\&quot;29d4f8eb-bc38-e400-4c3d-f1b38a02a0f4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;ValidatedMultiSelectionSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ValidatedMultiSelectionSource\&quot;,\&quot;UniqueId\&quot;:\&quot;c909521e-ec79-c35e-b861-fb3a634cd46e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;CustomSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CustomSource\&quot;,\&quot;UniqueId\&quot;:\&quot;c75a1038-6f92-9b97-78d2-27a0467b24a2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;CustomMultiSelectionSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CustomMultiSelectionSource\&quot;,\&quot;UniqueId\&quot;:\&quot;10de025c-3a3a-ead9-ea84-a7803b7683d7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;AutoIncremented\&quot;,\&quot;LocalizedValue\&quot;:\&quot;AutoIncremented\&quot;,\&quot;UniqueId\&quot;:\&quot;e0810862-a6d4-f8fa-5cd0-7035c52e307e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Custom Source\&quot;,\&quot;Key\&quot;:\&quot;grid_CustomSource_Column_Header_value\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Value\&quot;,\&quot;UniqueId\&quot;:\&quot;7ba20dc4-27ac-1f32-9a73-7d8cfb9eb28c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Custom Source\&quot;,\&quot;Key\&quot;:\&quot;grid_CustomSource_Column_Header_description\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Description\&quot;,\&quot;UniqueId\&quot;:\&quot;66c9940e-1d12-cb42-c1e3-3c90a8ab18e8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarScreenID\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ScreenID\&quot;,\&quot;UniqueId\&quot;:\&quot;255df098-18ab-912a-9b55-814d5d5e4fbd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarScreenDescription\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Screen Description\&quot;,\&quot;UniqueId\&quot;:\&quot;9c893cb5-df47-8a3d-0cae-789e6f05f779\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateAllow\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;d588896c-e694-b0b8-3cfa-0a1f9029c894\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateDeny\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;2d012903-c898-7aeb-1d63-93f199347e99\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateUndefined\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Undefined\&quot;,\&quot;UniqueId\&quot;:\&quot;ae3ab654-f294-b98b-788c-a848c274d690\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDAccess\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Access\&quot;,\&quot;UniqueId\&quot;:\&quot;453f17ff-fb78-a0f8-c0f1-2cfd51472ed5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDUpdate\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Update\&quot;,\&quot;UniqueId\&quot;:\&quot;1e42ad1f-31a0-7afd-dfa7-31e0748abf35\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDCreate\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create\&quot;,\&quot;UniqueId\&quot;:\&quot;4d69a9cc-0620-887f-7c04-e06e7a13e800\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDDelete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;f736b1e2-5a81-ddaf-0c68-1943fcc92b54\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;f2af1604-e53e-97d6-e514-a1e5ca96a395\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;authorizationDefaultModule\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;8ae19f4a-a75b-81ce-e002-339bd3ccc129\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuDefault\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;2bc30030-2e60-23ac-b103-01696347e5f8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuModules\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Modules\&quot;,\&quot;UniqueId\&quot;:\&quot;6c16b37c-70bd-7cff-efad-0fe68269943a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuScreenAuthorizations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Screen Authorizations\&quot;,\&quot;UniqueId\&quot;:\&quot;3900bea9-669c-d1bb-08bf-9eae3cde32a5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultApplicationPermission\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Permission\&quot;,\&quot;UniqueId\&quot;:\&quot;ea1229bc-4e4b-7131-cfed-56d732d6d166\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationGeneralCategory\&quot;,\&quot;LocalizedValue\&quot;:\&quot;General\&quot;,\&quot;UniqueId\&quot;:\&quot;61c70139-f6f6-e64e-4a88-d00ad6c180d5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultCustomPermissionDefaultState\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom Permission Default State\&quot;,\&quot;UniqueId\&quot;:\&quot;6727c5f6-e4d0-24aa-6118-61c532eb576e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultWorkspaceScreenDefaultPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Screen Default Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;8cd733be-d939-dace-edda-5970338e140e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationAccess\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Access\&quot;,\&quot;UniqueId\&quot;:\&quot;270a61f2-0b46-d03f-fd6b-eba271c8b30f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefault\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;3b600f6f-6015-7455-2858-62e654f6c039\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationModulesModulePermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Module Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;f630e515-0214-3f41-b72c-c4867a36cb9e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationModulesWorkspaceScreenDefaultPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Screen Default Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;d3bb1c3d-43a9-6bd4-531d-7386cc76ddb9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;Authorize Everything Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Authorize Everything\&quot;,\&quot;UniqueId\&quot;:\&quot;5f7b5580-c239-b8a2-25b8-3571184b91ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;Authorize Everything Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to authorize every application and screen.\&quot;,\&quot;UniqueId\&quot;:\&quot;bce5ad02-cb81-c2de-77cd-c001571e65d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;No Inherited Permissions Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No inherited permissions.\&quot;,\&quot;UniqueId\&quot;:\&quot;62c1be84-bbb3-6d1c-adb9-b6e9d3f6b58b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Old Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old\&quot;,\&quot;UniqueId\&quot;:\&quot;64eb5a35-a083-d62f-40e1-d109126291e4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;New Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New\&quot;,\&quot;UniqueId\&quot;:\&quot;692a4877-d9c9-a145-fa8f-fc940378a840\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Loading Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to load properties.\&quot;,\&quot;UniqueId\&quot;:\&quot;616adf31-2f91-569b-3a64-94e9b7e65144\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Select Property Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select Property\&quot;,\&quot;UniqueId\&quot;:\&quot;f6977af6-aae1-09d7-e12c-4b7a7d52e66d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Collection Property Root Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Collection\&quot;,\&quot;UniqueId\&quot;:\&quot;3e86e545-68c8-0a56-43e4-a02be270d992\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;PrintStationLogDownloadMessages\&quot;,\&quot;Key\&quot;:\&quot;Logs downloaded successfully\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logs downloaded successfully for {0} \&quot;,\&quot;UniqueId\&quot;:\&quot;c7c022cc-d76e-6de5-fc55-d7d928eb6607\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;PrintStationLogDownloadMessages\&quot;,\&quot;Key\&quot;:\&quot;Logs download failed\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logs download failed for {0} \&quot;,\&quot;UniqueId\&quot;:\&quot;94e84c80-d185-88d0-9814-08db1794ccbc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;MethodToCallParameters\&quot;,\&quot;Key\&quot;:\&quot;DateParameterPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enter Date\&quot;,\&quot;UniqueId\&quot;:\&quot;6d4335c5-1af4-7ec0-b801-059f4e6f07d9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;MethodToCallParameters\&quot;,\&quot;Key\&quot;:\&quot;TimeParameterPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enter Time\&quot;,\&quot;UniqueId\&quot;:\&quot;2feb59b3-5481-206a-6d18-d02c160e085f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;eac1ab23-ed9d-8a22-8e3c-2f12d5c53b6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Image\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Image\&quot;,\&quot;UniqueId\&quot;:\&quot;def7910a-7145-28f4-8703-6a51c1cafe6f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.JavaScript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;JavaScript\&quot;,\&quot;UniqueId\&quot;:\&quot;9e5f31b1-be9f-cbc2-8abe-7154ad583732\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.CascadeStyleSheet\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CascadeStyleSheet\&quot;,\&quot;UniqueId\&quot;:\&quot;3a90f03a-b3e0-5848-2fa5-6f4debbe08ef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Html\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Html\&quot;,\&quot;UniqueId\&quot;:\&quot;120993ac-644e-153b-1f24-30d2c9c3f765\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;3d5c8dd7-013a-e3eb-f06e-ad98b65d248e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.ScheduleServer\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Schedule Server\&quot;,\&quot;UniqueId\&quot;:\&quot;a9c389df-8906-8f2d-fa66-a5b530fb1c87\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.AlertsDeliverer\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts Deliverer\&quot;,\&quot;UniqueId\&quot;:\&quot;65c8df5e-70e9-284b-7845-3cdaadc8814a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.Agent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Agent\&quot;,\&quot;UniqueId\&quot;:\&quot;a49548e2-f19a-21f1-3192-1ec974d0e169\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.PrintManager\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print Manager\&quot;,\&quot;UniqueId\&quot;:\&quot;db99653d-e2b4-089b-81dc-5171122406e2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.PrintStation\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print Station\&quot;,\&quot;UniqueId\&quot;:\&quot;c5064aad-41c5-ef2d-ba8c-7a7cf613441a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;253c04d3-d3fd-4c01-ede1-4236bd892d07\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.OnDemandAndPersist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On Demand And Persist\&quot;,\&quot;UniqueId\&quot;:\&quot;8adae5b5-9ff6-df51-080f-d03a68ec77fe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.OnDemandAndDispose\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On Demand And Dispose\&quot;,\&quot;UniqueId\&quot;:\&quot;b967a1b3-7b42-cbe7-8f5b-ec7e3e2a2d94\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Inherit\&quot;,\&quot;UniqueId\&quot;:\&quot;939f0a45-ffae-f8a4-108f-70f9ec93de07\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Deny\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;ebc10c2f-e5e8-63c5-fc84-bbe5710808d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Allow\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;aff3c044-91dc-069e-fd84-77874345845e\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-89" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;Menu Folder\&quot;,\&quot;Key\&quot;:\&quot;SCA inMotion\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One Mobile\&quot;,\&quot;UniqueId\&quot;:\&quot;4b22c6e5-332f-f48c-6788-323f35113ec3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError no access\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You do not have access to the application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;e50cc36f-26f0-9fed-7fa7-1f78a9fdafe1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError MT Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Middle tier is not set for application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;dfda6813-7170-340e-7050-a3bd5d2bacb8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError OData Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OData provider is not set for application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;62c3149f-b8d7-810e-c27a-4e308d617def\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError endpoint Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot read application&apos;s oData endpoint. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;02889e9b-9107-123d-920c-4a036fd28ed9\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-91" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Users.UsersListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-92" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Users.UsersListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-94" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Users.UsersEditRolesListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-93" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Users.UsersListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-97" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Roles.RolesListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-95" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Roles.RolesListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-96" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Roles.RolesListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-98" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.AccountRequests.AccountRequestsListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-100" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.AccountRequests.AccountRequestsListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-102" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-101" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-99" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.AccountRequests.AccountRequestsListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-103" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-104" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksEditJobsListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-106" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksEditJobsListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-105" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksEditJobsListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-107" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.PrintLabelTemplates.PrintLabelVersionsTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-108" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.PrintLabelTemplates.PrintLabelAttributesTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-110" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27SCA%20inMotion%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-111" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27Supply%20Chain%20Advantage%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-112" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Help Menu Item\&quot;,\&quot;Key\&quot;:\&quot;Körber One Administration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One Administration\&quot;,\&quot;UniqueId\&quot;:\&quot;c915f73e-0261-966b-006d-3d96fbc18df3\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-109" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27HighJump%20One%20Platform%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-113" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-115" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetSystemConfiguration?configurationId=%27TenantConfiguration%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-117" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27SCA%20inMotion%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-118" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27SCA%20inMotion%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-119" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27Supply%20Chain%20Advantage%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-121" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-120" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27Supply%20Chain%20Advantage%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-123" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionAnswerModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-122" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-114" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Settings.ashx/GetHelpLinks</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-124" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Menu.ashx</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-129" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Menu.ashx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-128" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Settings.ashx/GetHelpLinks</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-132" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/HomePage/HomePage.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-133" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/VideoSourceModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-130" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27HighJump%20One%20Platform%27&amp;configurationId=%27Favorites%27&amp;configurationType=%27favorites%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-134" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27home%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-135" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27HighJump%20One%20Platform%27&amp;configurationId=%27_hj_one_quicklinks%27&amp;configurationType=%27quicklinks%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-137" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T03_ClickOnMenu" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-140" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657352330922</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken1</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-141" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657352433239</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-139" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T04_SelectSupplyChainAdvantage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SupplyChain-146" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657352492655</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SupplyChain-148" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657352330923</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken2" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken2</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SupplyChain-147" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T05_K.MotionAdv" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="K.Motion-153" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657352553278</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="K.Motion-155" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657352330924</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken3" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken3</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="K.Motion-154" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T06_SelectInventory" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inventory-160" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657352613277</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T07_SelectItems" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inventory-162" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657352330925</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken4" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken4</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Inventory-161" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-167" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/Settings.ashx/Application</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-168" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/Settings.ashx/Application</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-169" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/SearchPage.ashx?id=1043</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-170" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">1043</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/SearchPage.ashx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Items_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-6445520">Alternate Item Number</stringProp>
                <stringProp name="-859861216">Catalogue Number</stringProp>
                <stringProp name="3168473">Multi Part Item</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-171" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RegisterChildSession?applicationId=%27Supply%20Chain%20Advantage%27&amp;connectionType=%27platform%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-173" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/reset.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-172" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/query.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-174" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/SearchPage.ashx/UpdateDependentPicklist?id=1043</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Items-175" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="wh_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wh_id</stringProp>
                  <stringProp name="Argument.value">esek33</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_code" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_code</stringProp>
                  <stringProp name="Argument.value">%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="item_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">item_number</stringProp>
                  <stringProp name="Argument.value">%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="alt_item_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">alt_item_number</stringProp>
                  <stringProp name="Argument.value">%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="display_item_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">display_item_number</stringProp>
                  <stringProp name="Argument.value">%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="multi_part_item" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">multi_part_item</stringProp>
                  <stringProp name="Argument.value">%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="break_pack" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">break_pack</stringProp>
                  <stringProp name="Argument.value">%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ww_target_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ww_target_</stringProp>
                  <stringProp name="Argument.value">client_code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ww_requestNumber_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ww_requestNumber_</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ww_currentValue_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ww_currentValue_</stringProp>
                  <stringProp name="Argument.value">%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ww_currentDisplay_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ww_currentDisplay_</stringProp>
                  <stringProp name="Argument.value">&lt;ANY&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_ww_hasSelection_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_ww_hasSelection_</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/SearchPage.ashx/UpdateDependentPicklist?id=1043</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T08_ClickOnQuery" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-176" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27WAAdvantageDashboard%27&amp;configurationId=%274%27&amp;configurationType=%271%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-177" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/ReportPage.ashx?id=4&amp;WH_ID=esek33&amp;client_code=%25&amp;Item_Number=%25&amp;Alt_Item_Number=%25&amp;display_item_number=%25&amp;Multi_Part_Item=%25&amp;Break_Pack=%25</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,content-type,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-178" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/ReportPage.ashx?id=4&amp;WH_ID=esek33&amp;client_code=%25&amp;Item_Number=%25&amp;Alt_Item_Number=%25&amp;display_item_number=%25&amp;Multi_Part_Item=%25&amp;Break_Pack=%25</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Query_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-119554450">ARGOS-000zgsbc-1</stringProp>
                <stringProp name="790761892">Disney Frozen 2 Travel Doll - Anna</stringProp>
                <stringProp name="2017212952">1223549</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-179" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: settings\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Column Settings\&quot;,\&quot;UniqueId\&quot;:\&quot;b1caafe3-79ef-4866-505e-7130b670433f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: first\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Page\&quot;,\&quot;UniqueId\&quot;:\&quot;d61c6750-089d-6442-eb9f-466a22d9fd83\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: last\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Page\&quot;,\&quot;UniqueId\&quot;:\&quot;ef06b44c-e7b8-7a54-6a85-a4c4ab3c924c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: next\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next Page\&quot;,\&quot;UniqueId\&quot;:\&quot;69593f51-3811-45f4-9e33-999e232ae90a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: previous\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Previous Page\&quot;,\&quot;UniqueId\&quot;:\&quot;d1235ad8-38df-8b95-e607-8e1fc78c0632\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: refresh\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh\&quot;,\&quot;UniqueId\&quot;:\&quot;a7a3690c-fb4a-2f36-79e7-704a1e549539\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: morePages\&quot;,\&quot;LocalizedValue\&quot;:\&quot;More Pages\&quot;,\&quot;UniqueId\&quot;:\&quot;4b57bc59-f817-a95a-fec8-de9bd63d73a1\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Item_T09_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-180" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657352672655</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-182" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657352330926</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken5" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken5</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-181" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-184" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LogOffRequest?sessionId=guid%272c781c72-6352-4ad7-8950-33e1eb6d3274%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthToken2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-186" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Default.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-187" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/hubs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-188" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657352676296</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-189" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetLogOnConfiguration?key=%27iislbha.kscnp-nprd.iaas.js-alz.com%27&amp;isWorkspace=false&amp;languageId=%27%27&amp;logOnParameters=%27%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Logout_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="732513363">You are about to close</stringProp>
                <stringProp name="1641966577">We do not collect any more personal information about you than is necessary or otherwise authorized by you</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">300</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="KO4_UI_InventorySearch_Location" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Default.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-34" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/hubs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-35" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657391563405</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-37" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetLogOnConfiguration?key=%27iislbha.kscnp-nprd.iaas.js-alz.com%27&amp;isWorkspace=false&amp;languageId=%27%27&amp;logOnParameters=%27%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T02_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-42" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657391596157</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-43" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;applicationId&quot;:&quot;HighJump One Platform&quot;,&quot;tenant&quot;:&quot;&quot;,&quot;userLogOnName&quot;:&quot;TCSTAJAR&quot;,&quot;userPassword&quot;:&quot;new12345&quot;,&quot;connectionType&quot;:&quot;platform&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LogOn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AuthTicket1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_AuthTicket1</stringProp>
              <stringProp name="RegexExtractor.regex">SerializedAuthenticationTicket&quot;:&quot;(.*?)&quot;,&quot;SSOProviderId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_VerificationToken1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_VerificationToken1</stringProp>
              <stringProp name="RegexExtractor.regex">RequestVerificationToken&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login_Data_Config" enabled="true">
              <stringProp name="filename">C:/Ajith/TestData/VNP_TD/Koerber/LoginData2.csv</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="variableNames">UserName,password</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-44" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AuthTicket2" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_AuthTicket2</stringProp>
              <stringProp name="RegexExtractor.regex">SerializedAuthenticationTicket&quot;:&quot;(.*?)&quot;,&quot;SSOProviderId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-46" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657391561031</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken1</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-45" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetTenantConfiguration</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-49" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;About\&quot;,\&quot;UniqueId\&quot;:\&quot;0a7a28f3-5de4-4fa2-eb22-49798289f468\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;40156253-c879-c015-90d5-12310f408aaf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Middle Tier Version Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Middle Tier Version\&quot;,\&quot;UniqueId\&quot;:\&quot;29f0136c-1c94-9c74-f640-3f86986a44e5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Version Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Version\&quot;,\&quot;UniqueId\&quot;:\&quot;3cf1e8a5-347a-b521-cf3c-138f2d5517ac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;License Version Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;License Version\&quot;,\&quot;UniqueId\&quot;:\&quot;eae09611-e87e-c85f-eba5-41d21fac8238\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;535f474e-bb8d-f9ee-d663-a87d5382be7c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Change Password Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change Password\&quot;,\&quot;UniqueId\&quot;:\&quot;754dc1e1-b379-212b-dbc7-403bf8046d21\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving Security Question Answers Successed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Security answers have been updated successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;fd773bbd-7e87-caf7-1f93-bb3892df33e7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Confirm Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Confirm Password\&quot;,\&quot;UniqueId\&quot;:\&quot;b5960671-f1a3-dbad-9265-cfac5799e068\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save User Interface Settings Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;5373cf2d-3f13-9a77-7218-fc3ca66e43d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Last Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;22b6ffed-2e06-df55-7651-4cf51094b891\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Auto-Hide Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto-Hide Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;b23dbda9-8409-ce4d-1ee8-06517b87ebc2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Force Security Questions Number Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get force security questions number.\&quot;,\&quot;UniqueId\&quot;:\&quot;188bacfb-67f0-3009-aff8-85a19f5780ae\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Change Password Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change\&quot;,\&quot;UniqueId\&quot;:\&quot;96a5854c-8f6f-f70d-d3d7-0f947ea68c44\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View On Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On\&quot;,\&quot;UniqueId\&quot;:\&quot;e910b288-3cf0-5556-f4d6-88420c400388\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Changing Password Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to change the password.\&quot;,\&quot;UniqueId\&quot;:\&quot;b0a6a890-b9b0-d40a-8a14-5306a1cb8dfb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving General Information Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User information has been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;732bcf47-980a-ce95-1a20-f9e2c303d882\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;New Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Password\&quot;,\&quot;UniqueId\&quot;:\&quot;277d65fc-78be-b739-cab1-b52a8fcf147b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Logout Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;f81e157a-4582-1464-3c75-9503ae1e4faf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Check Force Security Questions Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to check user security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;8739ce2a-6c05-4e8a-30e2-13b71e035c85\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Allow Email Html Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Use HTML Email\&quot;,\&quot;UniqueId\&quot;:\&quot;c5f6abd6-0a34-f5a3-cd2c-1e0555c44525\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Phone Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone #\&quot;,\&quot;UniqueId\&quot;:\&quot;1e54e50d-b27d-1ff3-c14a-56da0552faec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Auto Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto\&quot;,\&quot;UniqueId\&quot;:\&quot;29ab2fdb-9219-1d7d-4d48-65ed2cfe05e7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Configure User Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configure User\&quot;,\&quot;UniqueId\&quot;:\&quot;380e3eb3-7ade-82dc-12bf-16a01a1128e4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Settings Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Settings\&quot;,\&quot;UniqueId\&quot;:\&quot;b250d975-bcd5-b229-747b-62f5c6c1641c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable to Logout Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to logout.\&quot;,\&quot;UniqueId\&quot;:\&quot;a15f8c27-5a28-5e7b-d9ce-ce45f34612e1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Off Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Off\&quot;,\&quot;UniqueId\&quot;:\&quot;2d7c5e0f-baea-c2c9-28ed-f17eb6a16c49\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving General Information Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save information into user profile.\&quot;,\&quot;UniqueId\&quot;:\&quot;9ef80001-086e-ac40-c44e-36a585154e92\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Email Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;6e1ebc5e-8a94-52c3-4466-194167bfc552\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Force Security Questions Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Answer {number} or more security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;4d54a0dd-3f97-9a2a-d029-d14531141fbd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Security Questions Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;9e0056fe-b53b-6434-ad45-c70c3c240648\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save Security Question Answers Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;f18f3ec1-2a58-ffcf-f555-9e5d7f630795\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Confirm Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot; Confirm password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;a1ca0c38-8679-7cb1-fe0c-5db38bce31e7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Condensed View\&quot;,\&quot;UniqueId\&quot;:\&quot;cb67677d-479e-b80e-ce96-3684e58762d9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save General Settings Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;cffb51c9-fc7a-73ac-4568-d6ed67572dbc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Security Question Answers Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get security question answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;b424632c-6879-b776-c4df-0e3161f6239a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Old Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;93e78a6d-a664-2ea8-f30a-fb8d1bec709d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Old Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old Password\&quot;,\&quot;UniqueId\&quot;:\&quot;a829a281-90d4-d846-6e73-54addf8b5042\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Initializing Security Questions And Answers Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to initialize security questions and answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;de37eedf-d9d9-4fb0-fa4f-63fb4b7bced1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unmatched Passwords Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The passwords you entered do not match.\&quot;,\&quot;UniqueId\&quot;:\&quot;d7c8d6cd-c709-40b7-aa36-c9757424fa32\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;General Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;General\&quot;,\&quot;UniqueId\&quot;:\&quot;26e005f1-2a05-60f1-48fd-7e8826342e89\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;First Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;95f965f6-b136-1205-c408-cbc15d778e50\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty New Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;79b475c1-bd48-4d33-2b00-63dfd9c7449f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;User Interface Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Interface\&quot;,\&quot;UniqueId\&quot;:\&quot;06352be9-b84c-d2cf-dd65-d6c655504460\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Email Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;a8227640-af72-fca4-f75a-1fe0ec7c3168\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving User Interface Settings Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User interface settings have been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;caebc5a3-a9e2-6b1e-3420-fcaeea623eef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Update Question Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to update question:\&quot;,\&quot;UniqueId\&quot;:\&quot;c179b83e-e130-8d94-3380-5227d84dec15\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Security Questions Panel and Popup Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Security Questions\&quot;,\&quot;UniqueId\&quot;:\&quot;39f3a3a4-2d1f-6199-7166-42cbfd5393a5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving Security Question Answers Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to update security question answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;deed19b5-c72c-cdc9-f6cf-09de0c264c7b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Alerts Subscriptions Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;fdbb840e-5e00-0d5f-c67a-3ecb7e1905cc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Quick Links Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;5c5d91c8-c101-b7c6-b234-7e5e58bcd057\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving User Interface Settings Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save user interface settings.\&quot;,\&quot;UniqueId\&quot;:\&quot;69906106-7ff8-489d-47f3-1ca3164bfe5c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Changing Password Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password has been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;5dccf418-f784-9d78-0851-3d44b2fdbe9a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Cancel Security Question Answers Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;aed12028-5285-089d-1b6f-f3ce1ce7b4aa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Applications Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Applications\&quot;,\&quot;UniqueId\&quot;:\&quot;d7b915a0-c162-f814-14aa-ae044c79a133\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application User Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application user menu.\&quot;,\&quot;UniqueId\&quot;:\&quot;db61d107-5c31-0d96-2ef9-7153d3cf9942\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Application User Menu Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;a02538ba-3161-8485-e1a9-92e199f1b892\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;User Menu Not Found Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Menu [{0}] was not found. Full Path: {1}\&quot;,\&quot;UniqueId\&quot;:\&quot;9b439fc6-117e-d027-4283-9191cb9b2130\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Add Favorite Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add Page Favorite\&quot;,\&quot;UniqueId\&quot;:\&quot;713405f0-0f2a-236b-f64b-d3105e0c5b4e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Add Page Quick Link Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add Page Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;f58f90bb-2ce2-750e-f368-2254e756d471\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Copy Page URL Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy Page URL\&quot;,\&quot;UniqueId\&quot;:\&quot;f68721c5-0581-f028-7d2d-dd1cbc56cd89\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;3847c1f2-8272-c40c-cb2f-8ae2a4165fda\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Open Page In New Window Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Open Page In New Window\&quot;,\&quot;UniqueId\&quot;:\&quot;b9886dad-193f-2e09-5fce-95fe08ee789c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;b5fed3c5-7710-e594-c2a5-0000417314b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Display Unread Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unread\&quot;,\&quot;UniqueId\&quot;:\&quot;927789ff-148e-6d8f-55aa-dfa6dec7033f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Sort By Date Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;By Date\&quot;,\&quot;UniqueId\&quot;:\&quot;a8661646-1f16-72d3-9c7f-28568765b008\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;816fe334-e5cf-f7c7-99c0-effa47af1277\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete this Alert?\&quot;,\&quot;UniqueId\&quot;:\&quot;5d33e706-84e7-8f3c-2080-cbf2d4c1cae1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Alerts Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;9fe950d7-d14e-8334-096e-928f5e559f0c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alert\&quot;,\&quot;UniqueId\&quot;:\&quot;db9cd319-f5c0-b2e0-ac5c-130425db56f8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Display All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;All\&quot;,\&quot;UniqueId\&quot;:\&quot;b9f85860-ebb6-20ef-5893-0815ab6e3630\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;264fa3ab-eda3-44c1-f1aa-30747e3a7ac4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;No Alerts Available Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No Alerts Available.\&quot;,\&quot;UniqueId\&quot;:\&quot;3170297d-e132-515c-7c6f-95582ad2f56f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;865bb7a1-76fc-cbb4-ebd1-a836fc9ba0c3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;View All Alerts Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;View All Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;98334d1e-5307-9e6f-6c71-354e21a9303d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get External Reference Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get external reference\&quot;,\&quot;UniqueId\&quot;:\&quot;ea9da74e-999d-72a5-9121-d5c447f4a69e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sign In\&quot;,\&quot;UniqueId\&quot;:\&quot;9d8c7896-20d0-9df5-190b-d7489107bb51\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Login Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Login\&quot;,\&quot;UniqueId\&quot;:\&quot;8dad500b-8de5-d122-4682-fc8d727add72\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Windows Authentication Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Windows Authentication\&quot;,\&quot;UniqueId\&quot;:\&quot;a7faaf26-2396-a3ec-a9ee-485b80fab215\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Workspace Authentication Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Authentication\&quot;,\&quot;UniqueId\&quot;:\&quot;feaa9baf-d6f5-4751-f942-fda27166d4db\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Re-enter Password Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please re-enter your password\&quot;,\&quot;UniqueId\&quot;:\&quot;807f48cf-1df8-8dd9-0d0b-452185b96f2a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Login Using External Reference Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to login using external reference\&quot;,\&quot;UniqueId\&quot;:\&quot;94b8be38-30f6-9c43-886d-2258d17f4cd3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Login With Different Account Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sign in with a different account\&quot;,\&quot;UniqueId\&quot;:\&quot;06e9dabf-670b-5961-815f-e9c1f9f4ea3f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;User Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;1bbcf4c6-5673-a568-ca84-950e54b94f90\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password\&quot;,\&quot;UniqueId\&quot;:\&quot;e6e14af1-dcf6-c6dd-3b20-c8027fffe930\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Tenant Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Tenant\&quot;,\&quot;UniqueId\&quot;:\&quot;b2f763ec-02ea-299f-0162-ad6217056429\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Email Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;d53e2f86-e215-4240-c2c7-41eb23709807\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;360949af-9b0c-5f1c-e321-aa9c906279d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Last Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;d768cd48-f30c-9368-32c9-762d33853fe4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Phone Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone #\&quot;,\&quot;UniqueId\&quot;:\&quot;0b75b614-4c44-04e9-609a-e24f61f57a9a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Desired Log On Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Desired Log On Name\&quot;,\&quot;UniqueId\&quot;:\&quot;7ad150f7-b64c-f75a-9eea-b4a41acd0664\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Confirm Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Confirm Password\&quot;,\&quot;UniqueId\&quot;:\&quot;649b81c1-ae0f-8da0-8eaa-5c882bd4dc16\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Reset Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;726c6bae-384f-6cc3-e95a-9d4668cecf73\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Or Sign In Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Or Sign In With:\&quot;,\&quot;UniqueId\&quot;:\&quot;12b71b26-0974-0ee6-b1b8-bf54d11704d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;69fd5c12-8d8b-3a6a-ea5c-021c393b4abd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookie Policy Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cookie Policy\&quot;,\&quot;UniqueId\&quot;:\&quot;cfce1839-318a-a18e-2ce4-85a5a8200c17\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Policy Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Privacy Policy\&quot;,\&quot;UniqueId\&quot;:\&quot;2679f642-331e-957a-7b54-12dcae6495cc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Forgot Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;a7d6dae5-e8d1-27c2-08fb-828f2df2079b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request Account Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request Account\&quot;,\&quot;UniqueId\&quot;:\&quot;86fefb47-dac2-16e3-c214-313cd6da819c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request New Account Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request new account\&quot;,\&quot;UniqueId\&quot;:\&quot;74688ec1-7bc1-d7b2-dac3-77aa2f78951c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request New Account Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request new account\&quot;,\&quot;UniqueId\&quot;:\&quot;c22b9e6f-7cc5-5723-334b-991ba4a883d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Reset Password Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;1d91e114-bcf4-ce0b-f6f8-86afb5f353ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Back Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;ae39e7da-5baa-9280-828e-84ee7579bd58\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Default Language Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;722eed0b-cf23-5f90-0806-6f6a56118b22\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Account Request Submitted Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Account request has been submitted.\&quot;,\&quot;UniqueId\&quot;:\&quot;02f734b9-334b-eecf-6e24-92bf0ff41ca5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Reset Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password has been successfully reset. Please check your email.\&quot;,\&quot;UniqueId\&quot;:\&quot;d6ebdf6e-419b-6731-1c25-4b1636afa4d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Find Secret Question Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot find secret question.\&quot;,\&quot;UniqueId\&quot;:\&quot;4c34f2cd-7e12-8a09-e943-6bb60862a73e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Platform URL placeholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Platform URL\&quot;,\&quot;UniqueId\&quot;:\&quot;6432290a-5df6-e463-851b-a379ac0aa2e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Platform Location view title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One URL\&quot;,\&quot;UniqueId\&quot;:\&quot;41def6d1-8453-e6d3-8434-108343c30287\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Empty Field Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Field cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;a79ffcc0-fa58-da3c-7e59-80473afb6f7d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Invalid Email Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email is not valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;1c5146b1-a773-0903-5ae0-89c3aa4a80af\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Invalid Phone Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone is not valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;bcc04098-8a3f-9b39-96a2-ad4039c37aba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Short Password Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password is too short.\&quot;,\&quot;UniqueId\&quot;:\&quot;78910af8-ffcd-337d-ee14-20d21320f805\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Mismatch Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The passwords do not match.\&quot;,\&quot;UniqueId\&quot;:\&quot;bb71528c-f040-20b0-f34d-1f70f06a15e6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber Supply Chain US, Inc. (“Körber,” “we,” “us”) has created this Privacy Statement (this “Statement”) to explain the types of personal information Körber collects as you navigate our sites and related services (collectively, the “Services”), how such information will be used, and the choices we offer you regarding our collection and use of such information.\&quot;,\&quot;UniqueId\&quot;:\&quot;4efde49b-58fb-dfcc-a778-8562a307e0b9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;For the purposes of the General Data Protection Regulation, the data controller is Körber Supply Chain US, Inc., located at 5600 West 83rd Street, Suite 600 – 8200 Tower, Bloomington, MN 55437.\&quot;,\&quot;UniqueId\&quot;:\&quot;16985825-c586-46e0-dbd8-3a11ab3fa76a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Principles Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;I. Privacy Principles\&quot;,\&quot;UniqueId\&quot;:\&quot;2967c0b3-8e61-d018-e16a-a88ce9f94d0d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Principles Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We follow the following principles in order to protect your privacy:\&quot;,\&quot;UniqueId\&quot;:\&quot;a6ab1d5c-17b5-9eb1-e946-64b0129e8fd8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We do not collect any more personal information about you than is necessary or otherwise authorized by you;\&quot;,\&quot;UniqueId\&quot;:\&quot;f03bd217-a527-308f-e317-f96c7bc4c87b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We only use your personal information for the purposes we specify in this Statement, unless you agree otherwise;\&quot;,\&quot;UniqueId\&quot;:\&quot;4cd86fa8-006b-d26e-345d-7af1577030c6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We do not keep your personal information if it is no longer needed; and\&quot;,\&quot;UniqueId\&quot;:\&quot;a3fe3381-78c2-3f18-831a-eeb066dc213a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Other than as we specify in this Statement, we do not share your personal information with third parties.\&quot;,\&quot;UniqueId\&quot;:\&quot;2019e78b-6917-785f-f7f1-017df0cd2adc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Personal Information Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;II. Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;98f56b3f-c93a-3142-ce08-993f12e2a22b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Collected Information Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. Personal Information Collected\&quot;,\&quot;UniqueId\&quot;:\&quot;cebc3a24-5217-d31c-1be0-890efa8ddf66\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Collected Information Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Although most areas of the Services can be accessed without submitting any information that personally identifies you, some areas (such as registering for training with Körber University) require certain personal information from you. The types of personal information that we may collect from you may include, without limitation:\&quot;,\&quot;UniqueId\&quot;:\&quot;926caae6-72a7-cc34-f0c9-442001997907\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Collected Information\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contact information, such as name, postal address, email address, and phone number; or\&quot;,\&quot;UniqueId\&quot;:\&quot;1adeabd7-89f7-8925-31bf-b34582818c75\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Collected Information\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Demographic information, such as age, date of birth, gender, job information, and postal code.\&quot;,\&quot;UniqueId\&quot;:\&quot;c85486f6-92fc-43b0-ba3e-e1c130b3c030\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Legal Basis\&quot;,\&quot;UniqueId\&quot;:\&quot;42b54d90-0cb1-aefd-af68-99c220db6e38\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Our legal basis for collecting and using the personal information described above will depend on the personal information concerned and the specific context in which we collect it.\&quot;,\&quot;UniqueId\&quot;:\&quot;46bb26a4-517a-fc6e-e2ec-a3eacfb6faf8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;However, we will normally collect personal information from you only where we have your consent to do so, where we need the personal information to perform a contract with you (for example, when providing the Services), or where the processing is in our legitimate interests and not overridden by your data protection interests or fundamental rights and freedoms. In some cases, we may also have a legal obligation to process personal information about you or may need to process personal information in order to exercise, establish, or defend legal claims.\&quot;,\&quot;UniqueId\&quot;:\&quot;f3633dbc-7160-f49b-5a83-c7b19c014f6f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. How We Use Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;ee92ca50-6798-3e2a-0e44-6d0ebf6747ad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may use information we obtain about you to:\&quot;,\&quot;UniqueId\&quot;:\&quot;b2706006-2f35-dc44-ffcb-dcc5fcaf7058\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Firs tUse Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Process orders you place and complete other transactions you have requested using the Services, and provide you with products and services you request;\&quot;,\&quot;UniqueId\&quot;:\&quot;cd13719c-96c0-f94e-fb77-014141c11058\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send you information or materials you request;\&quot;,\&quot;UniqueId\&quot;:\&quot;bebfc008-6b69-7528-07d7-d3a42361889f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maintain a record of your purchases and other transactions using the Services;\&quot;,\&quot;UniqueId\&quot;:\&quot;0d20b653-ee17-6380-3240-21a2b304a6de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;fourth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Respond to your questions and comments and provide customer support;\&quot;,\&quot;UniqueId\&quot;:\&quot;cdefa099-0d0c-20e7-0b46-d9976f6d14d2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;With your consent, communicate with you about our products, services, offers, and promotions;\&quot;,\&quot;UniqueId\&quot;:\&quot;67b51807-2f3b-0a4f-ba04-f3e5d0ffec8b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Operate, evaluate, and improve our business and the products and services we offer;\&quot;,\&quot;UniqueId\&quot;:\&quot;6ebf4408-e6f5-c0b1-e531-08dafba2bbf0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Seventh Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Analyze and enhance our marketing communications and strategies;\&quot;,\&quot;UniqueId\&quot;:\&quot;317fc65f-5065-db35-a270-5386fc4ea21c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Eighth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Analyze trends and statistics regarding use of the Services and transactions conducted using the Services;\&quot;,\&quot;UniqueId\&quot;:\&quot;9d2d8986-ad50-2d98-4143-5ae2b46a22b0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Ninth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Protect against and prevent fraud, unauthorized transactions, claims, and other liabilities, and manage risk exposure, including by identifying potential hackers and other unauthorized users;\&quot;,\&quot;UniqueId\&quot;:\&quot;5465b942-a9ca-3c93-5c21-1b431092c5ca\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Tenth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enforce our {0} and other agreements; and\&quot;,\&quot;UniqueId\&quot;:\&quot;b7636df7-6ffc-a190-073c-f7bf1a7ae2e5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Eleventh Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Comply with applicable legal requirements and industry standards.\&quot;,\&quot;UniqueId\&quot;:\&quot;ab5eaf6c-f023-b882-e076-8f7693a00f07\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Details Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may combine the information we collect with publicly available information and information we receive from our parent, affiliate, or subsidiary companies, business partners, and other third parties.\&quot;,\&quot;UniqueId\&quot;:\&quot;68505237-5992-4544-3d23-2819a923218d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Conclution\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We also may use the information we obtain about you in other ways for which we provide specific notice at the time of collection.\&quot;,\&quot;UniqueId\&quot;:\&quot;9e82309d-b044-e10f-5d42-e6e741133958\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;D. How We Disclose Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;b481ff51-b1bd-9e88-75b2-86e1161eb1a4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may disclose aggregated information about our user, and information that does not identify any individual user, without restriction. We may disclose personal information about you:\&quot;,\&quot;UniqueId\&quot;:\&quot;cb625b51-780c-874a-2307-6720e8843967\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To contractors, service providers, and other third parties we use to support our business and who are bound by contractual obligations to keep personal information confidential and use it only for the purposes for which we disclose it to them;\&quot;,\&quot;UniqueId\&quot;:\&quot;04a7c59e-a751-4296-8b48-3e51f80eb7a8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To comply with any court order, law, or legal process, including to respond to any government or regulatory request;\&quot;,\&quot;UniqueId\&quot;:\&quot;5fa10a59-9b35-6479-19ba-03ba75aa03ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To enforce or apply our {0} and other agreements;\&quot;,\&quot;UniqueId\&quot;:\&quot;13e00cff-513a-2e6e-29e3-94d62ff2c6ae\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If we believe disclosure is necessary or appropriate to protect the rights, property, or safety of Körber, users of the Services, or others; and\&quot;,\&quot;UniqueId\&quot;:\&quot;1859803c-20ee-ec2e-fdb2-5d8a7d480540\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;With your consent.\&quot;,\&quot;UniqueId\&quot;:\&quot;506d45a1-0c7d-e042-22d8-e6fd8835ef4d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We also reserve the right to transfer your personal information to a buyer or other transferee in the event of a merger, divestiture, restructuring, reorganization, dissolution, sale, or other transfer of some or all of our assets. Should such a sale, merger, or transfer occur, we will use reasonable efforts to direct the transferee to use your personal information in a manner that is consistent with our Statement.\&quot;,\&quot;UniqueId\&quot;:\&quot;70c60bb4-609d-5730-651b-caeada5677bf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;E. Data Security and Retention\&quot;,\&quot;UniqueId\&quot;:\&quot;7cae2b87-24d6-3d04-8bca-eba7c4b03cd7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We have implemented measures intended to protect your personal information from accidental loss and from unauthorized access, use, alteration and disclosure. Please note that the electronic transmission of information is not completely secure. We cannot guarantee that the security measures we have in place to safeguard personal information will never be defeated or fail, or that such measures will always be sufficient or effective. Any transmission of personal information is at your own risk.\&quot;,\&quot;UniqueId\&quot;:\&quot;15ac24b5-12eb-6787-0d71-ca14d6695193\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We will retain your information for as long as your account is active or as needed to for our internal purposes. You may request to delete your account information by contacting us at {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;b7caaad9-4945-1c51-eec1-d6201913497d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Storage Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;F. Where We Store your Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;ed812e34-cf27-6c77-f4b6-8dacc4c289fe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Storage Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The data we collect from you may be transferred to and stored at a destination outside of the European Economic Area (“EEA”). It may also be processed by staff operating outside of the EEA who works for us, one of our group companies or our suppliers for the purposes set out in this Statement. In order to ensure that any third party processes your personal data in a way which is consistent with the EU&apos;s laws on data protection, to the extent that we share data outside of the EEA, we will seek to put in place agreements with those third parties, including with our group companies, which contain provisions approved by the EU for protecting personal data.\&quot;,\&quot;UniqueId\&quot;:\&quot;1be0f057-e5bb-9e75-7f0f-4b024e946fa8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Rights And Choices Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;G. Your Rights and Choices\&quot;,\&quot;UniqueId\&quot;:\&quot;bc39811b-24ba-1fac-6c99-1be8bcd151e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Rights And Choices Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have the following rights and choices about the personal information we collect from you via the Services and how we communicate with you:\&quot;,\&quot;UniqueId\&quot;:\&quot;cd40723a-08cb-fef2-343e-e7e3205b9b98\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Access. \&quot;,\&quot;UniqueId\&quot;:\&quot;2df7fcee-5fb8-0ea4-45cd-aa6f50b06a95\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have the right to request a copy of any information that we hold about you. If you would like a copy of this information, please contact us by writing to us at the address or email address listed below. We may request proof of your identity before sharing such information with you.\&quot;,\&quot;UniqueId\&quot;:\&quot;acf7f173-fd68-9802-40c1-f4222375fd3d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Rectify. \&quot;,\&quot;UniqueId\&quot;:\&quot;534fce61-350c-9e8a-39b2-62bfd5607bb3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you discover that the personal information we hold about you is incorrect or out of date, you may ask us to correct that information.\&quot;,\&quot;UniqueId\&quot;:\&quot;ae33f485-ed00-3b2c-a8ca-79d76a1f7c5f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to be Forgotten/Cease Processing. \&quot;,\&quot;UniqueId\&quot;:\&quot;ad617edf-13fa-8da9-dfd6-44c24322711e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You may ask us to delete or cease processing the personal information we hold about you in certain circumstances. It may not be possible for us to delete or cease processing all the personal information we hold about you where we have an ongoing relationship, however please contact us and we will do our best to assist with your request.\&quot;,\&quot;UniqueId\&quot;:\&quot;ccb6eea0-1c3c-1f27-49e3-793272a6be4e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Withdraw Consent. \&quot;,\&quot;UniqueId\&quot;:\&quot;daf02fc3-474a-a3de-530d-719d39cc3e5b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Where we process your data on the basis that you have consented to such processing, you have the right to withdraw your consent at any time by unsubscribing or contacting us, as applicable.\&quot;,\&quot;UniqueId\&quot;:\&quot;7c05022d-d696-c326-df04-74eb24570c5b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Portability. \&quot;,\&quot;UniqueId\&quot;:\&quot;4af6bf63-7fc4-4822-a1f8-23290d054da6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You may ask us to transfer your personal information to a third party in certain circumstances. If you would like any other information regarding this right, please contact us.\&quot;,\&quot;UniqueId\&quot;:\&quot;f222aabd-75fa-fb15-c32f-ea8902f49d68\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Promotional Communications. \&quot;,\&quot;UniqueId\&quot;:\&quot;bd3f68f9-527e-39db-d6d7-e87372ae81ec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you do not want us to use your email address/contact information to promote our products or services, you can opt out by sending us an email stating your request to {0}. If you have received a promotional email from us, you can also opt out of receiving future promotional emails from us by following the unsubscribe instructions contained in such email.\&quot;,\&quot;UniqueId\&quot;:\&quot;e7d0d887-d166-0288-8ba9-2b7ae5d9777e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;III. Cookies and Automatic Tracking\&quot;,\&quot;UniqueId\&quot;:\&quot;d8b05d6d-50ab-1edb-56f7-d3bd8fd31d13\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Terms Of Use Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. How We Use Cookies\&quot;,\&quot;UniqueId\&quot;:\&quot;45aa4139-90ef-c0b5-4ef3-cb371cc92385\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Terms Of Use Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot; When you use the Services, we may also collect certain information with cookies. The information collected automatically using a cookie is not personal information. A “cookie” is a text file that websites send to a visitor’s computer or other Internet-connected device to uniquely identify the visitor’s browser or to store information or settings in the browser. Cookies may be used for, but are not limited to use for, the following: (i) enable website functionality and remember browser settings; (ii) collection of aggregate information to compile statistics about Körber’s website usage, including the use of third-party analytics tools (such as Google Analytics); and (iii) to serve ads through third-parties when you visit other websites after you visit our website (“Behavioral Advertising Networks”). For more information about the specific types of cookies, how we use them, and how to control them, please see our {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;3f5be8da-eca3-ef9e-26c2-6fea0fdb4f8b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Third-Party Tracking\&quot;,\&quot;UniqueId\&quot;:\&quot;bcd38d2b-16b9-bb4b-7977-59a6d943870b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Although we do not control third parties’ collection or use of your information to serve interest-based advertising or other targeted content, a number of these third parties may provide you with ways to choose not to have your information collected or used in this way. For example, you can opt out of receiving targeted advertisements from members of the Network Advertising Initiative by visiting {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;a78331c4-3f50-7683-50d3-6b90bff7e9a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Some of your browsing sessions may be translated into information that helps website designers make websites easier to use and simpler to navigate. If you would like to disable this tracking, please click here: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;f5d6c835-e531-8d5e-5f49-409fb64f0618\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;No Tracking Signals Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. How We Respond to Do Not Track Signals\&quot;,\&quot;UniqueId\&quot;:\&quot;0d1d83c8-7d09-118c-7942-a412ff480df6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;No Tracking Signals Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your web browser may let you choose your preference as to whether you want to allow the collection of information about your online activities over time and across different websites or online services. We cannot verify third-party web browser opt-out programs or third-party tracking opt-outs. Therefore, we strongly suggest using our built-in opt-out mechanisms located in the footer of all web pages labeled “Manage Privacy Settings” to prevent tracking.\&quot;,\&quot;UniqueId\&quot;:\&quot;ffba28f3-622f-08c5-2af6-196e95e29fba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;General Notices Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;IV. General Notices\&quot;,\&quot;UniqueId\&quot;:\&quot;7353c998-5183-7f6e-3f93-e03af20e9d38\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;External Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. External Links and Third-Party Sites\&quot;,\&quot;UniqueId\&quot;:\&quot;9d4b06a1-94fd-e3f7-add7-2548dd92b5c9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;External Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber&apos;s website contains links to other websites. Körber is not responsible for the content of these websites or their privacy policies or practices.\&quot;,\&quot;UniqueId\&quot;:\&quot;72e0b005-0244-a95a-065b-54edc0b0f589\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Edge Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Children Under the Age of 13\&quot;,\&quot;UniqueId\&quot;:\&quot;4b0ceb1b-dfe6-72a8-1dec-a11216a953a9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Edge Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The Services are not directed to, and Körber does not knowingly collect or solicit personal information from, children under the age of 13. If we learn we have collected or received personal information from a child under the age of 13, we will delete that information. If you believe we might have any information from or about a child under the age of 13, please contact us at {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;c59e899d-8419-9aae-f5a3-e368db34cd55\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Statements Changes Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. Changes to this Statement\&quot;,\&quot;UniqueId\&quot;:\&quot;3e5f2c21-9312-1cec-8740-2c54110dd60a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Statements Changes Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber may amend this Statement from time-to-time. For material changes to this Statement, Körber will place a prominent notice on this website and send an email notification of the change. The date this Statement was last revised is at the top of this page.\&quot;,\&quot;UniqueId\&quot;:\&quot;9fe37213-ccf6-7084-45bd-be2dbb51fc64\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;D. Contact Us\&quot;,\&quot;UniqueId\&quot;:\&quot;38ab658c-db32-dcb1-b670-feab75535c30\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you have any questions about this Statement or our information practices, please call us at 800.328.3271, email us at {0}, or write to us at\&quot;,\&quot;UniqueId\&quot;:\&quot;063e538a-f128-6704-ea4c-8c3a5d3c888c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Info\&quot;,\&quot;LocalizedValue\&quot;:\&quot; Körber Supply Chain US, Inc.{0} 5600 West 83rd Street.{0} Suite 600 – 8200 Tower.{0} Bloomington, MN 55437\&quot;,\&quot;UniqueId\&quot;:\&quot;03342568-4b91-6a2b-4b89-9406c076d780\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Conclutions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If we are unable to resolve your complaint you may contact the Information Commissioner&apos;s Office at the Exchange Tower, Wycliffe House, Water Lane, Wilmslow, Cheshire, SK9 5AF; telephone number: 0303 123 1113. You also have the right to lodge a complaint directly with your local data protection authority.\&quot;,\&quot;UniqueId\&quot;:\&quot;af54d849-63f9-c819-a39c-66de2cc6d5d9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Components\&quot;,\&quot;Key\&quot;:\&quot;No Data Found Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No Data Found\&quot;,\&quot;UniqueId\&quot;:\&quot;4dad4d85-96fa-9def-7a80-db43067dc7e2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Dialog Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;f40046c0-6c3a-af3c-8f92-ce2f917e0ce5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;ee7e9de1-2a81-1eab-69c6-6d5a9f0f71b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Overwrite Existing Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Overwrite existing\&quot;,\&quot;UniqueId\&quot;:\&quot;c57dce67-3173-54d6-4f0c-4b76e353a73a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} successfully imported.\&quot;,\&quot;UniqueId\&quot;:\&quot;a5c4b413-ad93-bdd6-668e-08ddd4553e3e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to import {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;21dd4d26-4fad-d974-64fb-3415866a2d5a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} successfully exported.\&quot;,\&quot;UniqueId\&quot;:\&quot;9ed3a6f8-0143-1e33-0c22-8327e1080fd8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to export {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;45228f50-3591-c123-d0eb-2140b6c308a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Unable To Request Url Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to request url [{0}].\&quot;,\&quot;UniqueId\&quot;:\&quot;d9c1417f-44e1-cc57-69b6-b9e9ee8dff87\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Enable Popup Blocker Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Make sure your browser&apos;s pop-up blocker is turned off.\&quot;,\&quot;UniqueId\&quot;:\&quot;e867aede-e8cf-95dc-1ea8-be3cbbce709b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Discover {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;639e398d-e564-6e7a-347a-9b654b94ed35\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: User Credentials Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Credentials\&quot;,\&quot;UniqueId\&quot;:\&quot;73a58618-75d6-f29b-0175-0a0e3444aa81\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Assets Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Assets\&quot;,\&quot;UniqueId\&quot;:\&quot;27fe7c25-4cbc-a2be-15d1-8efdd8045502\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Retrieve All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Retrieve All\&quot;,\&quot;UniqueId\&quot;:\&quot;7a600f6f-0fab-3d5b-b137-9f89344a8315\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;a1922c49-f01b-cacb-0da9-f4b81bfd81cc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Use Credentials From Tenant Configuration Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;f69063c1-2337-a59c-4a2c-553fec22490a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Use Custom Credentials Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom\&quot;,\&quot;UniqueId\&quot;:\&quot;dcb7b0f5-c055-c5e1-9cc8-8d00525e9af7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: User Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;304c8720-6049-4a04-cd81-933b10bf977a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password\&quot;,\&quot;UniqueId\&quot;:\&quot;d387001d-6f58-1758-c1a6-4cfa92009a79\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Import Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import\&quot;,\&quot;UniqueId\&quot;:\&quot;7f9f6258-5908-5569-8dd7-3356e2d27a6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Overwrite Existing Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Overwrite existing\&quot;,\&quot;UniqueId\&quot;:\&quot;090af0cc-aefc-4a8a-d3d6-bee8dc154f42\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Discover Assets Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to discover assets.\&quot;,\&quot;UniqueId\&quot;:\&quot;2220525b-7d13-8b06-710a-3c5cfd4407e2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Import Asset From Cloud Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to import asset from cloud.\&quot;,\&quot;UniqueId\&quot;:\&quot;e27fe8dc-40b5-98bf-c56b-bacf464a1f87\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: No Credentials Specified Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No credentials specified or obtained from tenant configuration defaults.\&quot;,\&quot;UniqueId\&quot;:\&quot;46bdf18b-d7e4-23ae-35fc-e94952da6161\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Dropdown List Component\&quot;,\&quot;Key\&quot;:\&quot;Informations: defaultPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please select an option\&quot;,\&quot;UniqueId\&quot;:\&quot;fb7af538-59b8-27e0-1fd4-057a78044a7c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;From Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;From\&quot;,\&quot;UniqueId\&quot;:\&quot;217b048d-2af8-a0e7-9de0-272cf826849e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;To Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To\&quot;,\&quot;UniqueId\&quot;:\&quot;5d200471-5d8c-41f1-8617-7b0d49fe1124\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Cc Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cc\&quot;,\&quot;UniqueId\&quot;:\&quot;ae8104c2-4fe3-5551-1ba4-bdf50fb9dab7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Subject Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Subject\&quot;,\&quot;UniqueId\&quot;:\&quot;84ab4121-70d8-4df7-efb0-3c37012a733c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Body Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Body\&quot;,\&quot;UniqueId\&quot;:\&quot;ef256003-04f1-5dd5-52bc-0d72a0a2e3ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Is Html Body Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Html\&quot;,\&quot;UniqueId\&quot;:\&quot;86bb78e9-1755-9a62-ac3a-7a7b46d0d1fb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email has been sent successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;38ee41a4-9f44-c7c2-7f11-1fb1be8038bd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to send email.\&quot;,\&quot;UniqueId\&quot;:\&quot;ab4960d5-6505-60e1-926d-dcb8ee12b4ea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send Email\&quot;,\&quot;UniqueId\&quot;:\&quot;a9958a5c-3973-90fd-5cc8-81983a5c86bf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Send Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send\&quot;,\&quot;UniqueId\&quot;:\&quot;75628a27-8781-2791-4c62-bb7da0270ed7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;fc2dd220-9138-dd9a-d9a6-5969495b0603\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: File Input Component\&quot;,\&quot;Key\&quot;:\&quot;Select Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose File\&quot;,\&quot;UniqueId\&quot;:\&quot;cf9c30be-419f-498e-dad8-c4a9b7043258\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Date Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid date format.\&quot;,\&quot;UniqueId\&quot;:\&quot;324902bf-0b2a-f11c-558c-74d97a429c49\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Remote Service Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred accessing the remote service.\&quot;,\&quot;UniqueId\&quot;:\&quot;e1531b9d-87bf-a239-11c0-0eee3e59f150\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Time Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid time format.\&quot;,\&quot;UniqueId\&quot;:\&quot;fa651bab-cb09-381e-8840-93721ef87abb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Apply Changes Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred applying the changes.\&quot;,\&quot;UniqueId\&quot;:\&quot;2790d162-dc1b-37ca-cafc-18620b89de3a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Expected Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Expected format: {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;a7129ccc-1d4e-2363-e902-4aa671c6b30b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Date/Time Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid date/time format.\&quot;,\&quot;UniqueId\&quot;:\&quot;48869fa0-aa2d-ef26-60db-3704d1052237\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: display\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} - {1} of {2} items\&quot;,\&quot;UniqueId\&quot;:\&quot;af0dfa3d-a084-f9bd-874a-6911b0d0272e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: empty\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No items to display\&quot;,\&quot;UniqueId\&quot;:\&quot;e250afab-e382-d562-276c-e84dbc7870f1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: of\&quot;,\&quot;LocalizedValue\&quot;:\&quot;of {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;c6e1e0bb-1ede-c6c8-c13f-5632b5226cd5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: page\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;89f9b3fb-e183-0fba-c80f-05405f8abeec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: itemsPerPage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;items per page\&quot;,\&quot;UniqueId\&quot;:\&quot;8954543d-9f21-6893-82a3-bb29bab0594e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: columns\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Columns\&quot;,\&quot;UniqueId\&quot;:\&quot;d8752dc0-dbf0-8172-f265-fbe3f9b95ae5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filter\&quot;,\&quot;UniqueId\&quot;:\&quot;a6859368-175c-ee90-9741-6a4d7cdf53f9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: sortAscending\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sort (Asc)\&quot;,\&quot;UniqueId\&quot;:\&quot;5b36e761-b08f-592e-e555-5a1d16405487\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: sortDescending\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sort (Desc)\&quot;,\&quot;UniqueId\&quot;:\&quot;e83cd436-e482-5635-b52e-dd73ab8f67f4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;9b3f7b0b-a9d8-8132-3e1d-20195ad9399a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: undo\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Undo\&quot;,\&quot;UniqueId\&quot;:\&quot;f9da213a-0d23-935c-b09e-ac884c71c3e3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: edit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;97172cd7-9402-d09e-d342-31a06fdbf051\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: reset\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset\&quot;,\&quot;UniqueId\&quot;:\&quot;e00436b9-7003-53ff-ce10-6abc8fa7a063\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: save\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;40aa5602-bd31-9ce4-3042-779b1625df36\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: create\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New Record\&quot;,\&quot;UniqueId\&quot;:\&quot;c03057cc-00db-c7ad-32a2-85e43f44c41a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: excel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export\&quot;,\&quot;UniqueId\&quot;:\&quot;c7af7594-e2a0-7c34-39b9-d0399da2e28d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: apply\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Apply\&quot;,\&quot;UniqueId\&quot;:\&quot;09eef35b-6266-c9ec-c906-cd4596c0527b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: destroy\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;adbb05e4-698e-1ea5-6f3a-4b56f55895e7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: resetConfiguration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;00fc1f35-fc43-3c13-1afc-ebcc910762ef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: saveConfiguration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save Configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;e3c32ed0-b5da-2d8e-243e-08e4c679b0af\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: clearAllFilters\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clear All Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;b71c54aa-44c3-706b-0775-cde9b3ee4fe0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: info\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Show items with value that: \&quot;,\&quot;UniqueId\&quot;:\&quot;d78888c6-f282-6f2d-69f1-e69978301e5d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: isFalse\&quot;,\&quot;LocalizedValue\&quot;:\&quot;is false\&quot;,\&quot;UniqueId\&quot;:\&quot;e52304c1-864d-ae36-952c-edec5b720890\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: isTrue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;is true\&quot;,\&quot;UniqueId\&quot;:\&quot;eb20e64a-f162-be82-8735-9b3a973d47c2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: and\&quot;,\&quot;LocalizedValue\&quot;:\&quot;And\&quot;,\&quot;UniqueId\&quot;:\&quot;fca4ddd9-7416-de3f-9db4-4c2a1496adfa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: or\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Or\&quot;,\&quot;UniqueId\&quot;:\&quot;3e78a16e-da0b-b9e1-20c6-1989ace3ccac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: clear\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clear\&quot;,\&quot;UniqueId\&quot;:\&quot;01f4cf1b-913c-ce78-34ca-1f48e18b3c88\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;244491e2-635d-9b4d-3a69-18faa26aa1f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filter\&quot;,\&quot;UniqueId\&quot;:\&quot;38625740-ef7e-f2ea-9d01-fc942720aaaa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;d9fdf8c7-43d7-b17a-0d0e-b32e7ca3d664\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;d59d8348-4aaf-3dc7-165c-f512419eaa3a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is after\&quot;,\&quot;UniqueId\&quot;:\&quot;f12e9f4d-21ff-dd22-2217-c9e59e27713b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is after or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;1758f756-a304-dc54-f2d2-a48d55fdcc08\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is before\&quot;,\&quot;UniqueId\&quot;:\&quot;d6830ae3-5150-13a4-2fca-53505139045f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is before or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;5807a24d-fea6-c1ef-ce62-f2d1f9584f93\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: startswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Starts with\&quot;,\&quot;UniqueId\&quot;:\&quot;f9a7319d-0426-3809-ed84-34202f57cb8d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: contains\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contains\&quot;,\&quot;UniqueId\&quot;:\&quot;ff01a47b-ca13-c234-4f92-c6f551d6a5a8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;d166bb9e-6062-2bc1-eb2d-9eb45d4e4278\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;5990ab3e-8969-591b-81b5-b2a25a047ea5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: endswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ends with\&quot;,\&quot;UniqueId\&quot;:\&quot;3fac65c8-8533-ddc1-1811-f745a9bc3869\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: doesnotcontain\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Does not contain\&quot;,\&quot;UniqueId\&quot;:\&quot;e3b4aaa4-a8de-3fc5-b60a-fdfaf41f89d5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;98c9abb5-63c9-d01e-c28e-4a738c5af45a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is greater than\&quot;,\&quot;UniqueId\&quot;:\&quot;c6ce6d10-d52f-773f-7a32-f8d391bef87d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;c0fb3256-89a5-0db1-676d-485c30d543bc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is less than or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;765fe643-3aea-a4f8-8273-af9d7c1ec989\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is greater than or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;a0365abc-4ab6-a92d-a7d9-349a3f10a1a4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is less than\&quot;,\&quot;UniqueId\&quot;:\&quot;eec860ec-69f9-7170-e693-dac3df7888a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Batch Changes: applyChangesErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred applying changes.\&quot;,\&quot;UniqueId\&quot;:\&quot;e1611bb1-e5e7-57b7-9673-75254a5a8a73\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Batch Changes: applyChangesSuccessMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;All changes applied.\&quot;,\&quot;UniqueId\&quot;:\&quot;fd8c3e43-376f-ef01-1996-e9a64a21e6c9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToUpdateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred updating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;e208d963-4aa3-19c5-a622-c21d6103bd1b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToDeleteErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred deleting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;a1da4ecd-d822-bc31-9c73-69cbadc46fd3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Save And Continue Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save and Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;4d0c16f9-994f-ccf3-7c17-07507e7f6f36\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;43e83683-d407-93d3-00fc-732e391daddb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;fbb8cf84-ab3e-fcd3-fd82-b95ad863af48\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Don&apos;t Save And Continue Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Don&apos;t Save and Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;fe55f7f1-7b2e-0cba-7d87-7ff164c45ec4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unsaved Changes\&quot;,\&quot;UniqueId\&quot;:\&quot;ed942de9-19ee-f321-bd77-429203d99d4e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have unsaved changes. Do you want to save them?\&quot;,\&quot;UniqueId\&quot;:\&quot;35a7c916-c84e-dbfc-4b46-616d0feb2f19\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select\&quot;,\&quot;UniqueId\&quot;:\&quot;3098d8e8-77e5-c291-c95c-e91c27722b33\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Select Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select\&quot;,\&quot;UniqueId\&quot;:\&quot;64e57315-e276-b343-89ee-901e9da071ec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: List View Component\&quot;,\&quot;Key\&quot;:\&quot;Select All Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select All\&quot;,\&quot;UniqueId\&quot;:\&quot;92462d0c-6fbc-32c0-8f63-02e5d9bff072\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: List View Component\&quot;,\&quot;Key\&quot;:\&quot;Unselect All Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unselect All\&quot;,\&quot;UniqueId\&quot;:\&quot;a224c7e9-e32f-6331-465f-860e5d3589f0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;214cd874-001a-7cf8-b7b1-fb2d93d63448\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Application Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;2bc4601f-9ebd-844d-022b-4d6e277b8b77\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;0b32f45c-3e09-1824-632b-feac215bcef8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;d1c27f27-6c37-0739-2b97-192c781b1c7f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Value Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;9446738f-1cf9-57e1-a8cf-d64030f8bd09\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Group Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;4a2ef7a4-58b9-ea44-f478-8bcd1acc516c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Group Id Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;46e26150-1eb7-f685-d8e7-df01114b5bae\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;050c6199-daa5-299d-54f7-231634d8d975\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Key Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;fdbc1f3b-fad9-d067-9bab-65394a9eccea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Key Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;2ddba923-e466-0506-5e12-e32fd7249eda\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Close Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close\&quot;,\&quot;UniqueId\&quot;:\&quot;b5a57279-1c09-aefd-ca4d-d0c7d6ba8e01\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;635a20ff-de10-ded7-1b9c-4f4d5d4d2931\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_ApplicationId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;e19b554e-6108-09bb-3895-cf70e687e97e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_DefaultValue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;51e9eb1f-1f6f-f550-a19d-8bde270ff933\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_GroupId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;7d07cff7-e27c-b370-0b33-33284e0dc54e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_Id\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;f7cb2765-1351-6555-bbb7-eabeb5220a3b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_Key\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;b4225575-52bf-cea7-a86d-909dd5ed265e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: ApplicationId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application\&quot;,\&quot;UniqueId\&quot;:\&quot;4e229c67-a934-0665-dd62-6474a70feba6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: Default\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;30e7c295-574a-6b81-d4a1-9b662e1ec35b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: GroupId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;a18694b6-2fea-8340-fc10-90e499452295\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: Key\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;fe3a8336-a548-9184-bbdc-25c1434c2ebb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: LanguageId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not translated values for selected language\&quot;,\&quot;UniqueId\&quot;:\&quot;7e5d350d-0042-bc7a-2101-44be3740102c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Group: Localizations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;606b78ec-4b1e-e038-0264-ca52508e4633\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;43f9a222-57a2-f889-a445-796073702701\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to delete localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;defdbe13-a2c9-541e-dee4-a145ab36a5a9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Localizations Error\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get available localizations.\&quot;,\&quot;UniqueId\&quot;:\&quot;3a133307-5439-bf8a-965e-4bf0b86f56f4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Translation Services Error\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get translation services.\&quot;,\&quot;UniqueId\&quot;:\&quot;e608df90-4b58-f02a-c05f-64dadbce26a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Main Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;142d801f-1774-1bb1-e3ea-8dc14d4a7173\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Sub Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translation\&quot;,\&quot;UniqueId\&quot;:\&quot;2156131f-e2a4-a91d-1436-7bafeacc0438\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Options Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select translation options.\&quot;,\&quot;UniqueId\&quot;:\&quot;10baf9dc-0555-fdfe-362b-40478b1fbd70\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: From Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;From local Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;a262a03e-adb2-f109-5bbb-0ea86f2ae932\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: To Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To local Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;9921e75b-f5a2-ac07-cf92-e346f90c1386\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translation Service\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translation Service\&quot;,\&quot;UniqueId\&quot;:\&quot;3ee21a10-b6d5-02e2-c02f-5490235ae8ab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;6502bf0c-2d97-b0d7-b8f7-4de0a7dd9665\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully translated.\&quot;,\&quot;UniqueId\&quot;:\&quot;9a932f0b-badc-630f-56b3-2ceddf581866\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to translate localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;b77bb07d-5e94-826d-8155-f4d1816294bd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Update Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save translated localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;6b0cd8d6-b995-46a7-e2d9-9c604fa60629\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Main Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;17efef75-dc7b-f508-a57a-f2ddf1b68711\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Options Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select delete Localizations method.\&quot;,\&quot;UniqueId\&quot;:\&quot;a8f51bf8-8963-f3a0-b7d1-ad2c3cb09c04\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;d3c38ab1-3543-fdb4-4222-0b490298c8eb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Selected\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete selected\&quot;,\&quot;UniqueId\&quot;:\&quot;864b8f8d-c904-969b-f6d9-33737dc1e92d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;2ca83939-8d64-07b8-90fd-6a62e6b9b9f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Current Application\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete for current application\&quot;,\&quot;UniqueId\&quot;:\&quot;20dc62ad-9c35-7cb4-6ef8-33a4d7041c4b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Delete Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;82702077-780c-025a-366e-db987a430a68\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Delete Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to delete localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;16dd58b5-a569-b193-4500-09ed29263392\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog: Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Language\&quot;,\&quot;UniqueId\&quot;:\&quot;c998514b-4df3-d35a-24ec-6b4172ba0c37\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog: Export Language Default\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export language as default\&quot;,\&quot;UniqueId\&quot;:\&quot;62713668-668a-e6ec-7922-98fbbc46cb47\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;8da6d091-894f-8371-ce95-2d9440e99a0e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;649405d5-279a-5007-b805-c1f6a697ca72\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;bb82a54a-edf5-e7e1-7153-184e34db5d50\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete this record?\&quot;,\&quot;UniqueId\&quot;:\&quot;2713a4c5-bccd-755e-91dc-621494918f73\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Multiple Records Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete selected records?\&quot;,\&quot;UniqueId\&quot;:\&quot;f7a657e5-d61f-196a-7c4a-acbbdab3cee1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;af7ad013-599c-3e58-e73b-62238be9c66a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Restore Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore\&quot;,\&quot;UniqueId\&quot;:\&quot;62ef181c-0dd6-7dc9-4b43-9248b1d21fee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Maximize Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maximize\&quot;,\&quot;UniqueId\&quot;:\&quot;a15510b7-79c9-9ad2-0716-65bf646a5235\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Error\&quot;,\&quot;UniqueId\&quot;:\&quot;240e568e-31ad-8ce3-fd3e-f5d13ff55de6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Raw View Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Raw View\&quot;,\&quot;UniqueId\&quot;:\&quot;ee03d259-6d2a-5b79-12b4-8f235c35113e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;17972235-c67d-8f1b-13c5-cf843b9951dc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Error Message Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Error Message\&quot;,\&quot;UniqueId\&quot;:\&quot;e4b7cf99-966b-0c92-c0ea-b364cff21732\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Stack Trace Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Stack Trace\&quot;,\&quot;UniqueId\&quot;:\&quot;e46a51d6-5dc8-ecec-e0a9-ceb2a0d6e03b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Maximize Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maximize\&quot;,\&quot;UniqueId\&quot;:\&quot;04500688-e6ba-1c84-acb6-d89c3e2b2ce8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;72766bc1-9fed-71a7-0a92-e7cefba0eedd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Restore Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore\&quot;,\&quot;UniqueId\&quot;:\&quot;ecd2383b-6158-b8ec-51d7-ffb8b333bd07\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Information Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;39e6e7b6-8198-8016-5049-0fd0250163e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Information Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;cb116f7c-aea1-0081-430a-3c4d352655b1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Warning\&quot;,\&quot;UniqueId\&quot;:\&quot;c2dd1f69-2a20-05bb-bd41-3eab8f249030\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Refresh Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh\&quot;,\&quot;UniqueId\&quot;:\&quot;f172f786-35da-ce97-9979-06bb6d52e383\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;99976edb-0d6c-11f3-7cb1-f5d031c9f080\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The record you are working on may have been modified or deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;c4f60913-131f-4bcc-1c5f-a997c5d76795\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Panel Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Options Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Options\&quot;,\&quot;UniqueId\&quot;:\&quot;5f3f710d-ca08-5aa1-5e76-39969f3b3016\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Accessibility Tab\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Accessibility\&quot;,\&quot;UniqueId\&quot;:\&quot;a3ea4ec5-8e28-b365-fbd2-91acb35c618d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add column on the left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add column on the left\&quot;,\&quot;UniqueId\&quot;:\&quot;8b970986-276f-623f-2143-e91b9db2f937\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add column on the right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add column on the right\&quot;,\&quot;UniqueId\&quot;:\&quot;8b34286f-26bc-8660-cd8b-e2c0d11ce7f7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add row above\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add row above\&quot;,\&quot;UniqueId\&quot;:\&quot;1edd5099-19a0-73ac-812e-3d0c9c26ca09\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add row below\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add row below\&quot;,\&quot;UniqueId\&quot;:\&quot;19469c08-5cc6-47b3-4e31-dc1707596c2b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center\&quot;,\&quot;UniqueId\&quot;:\&quot;351d00f8-11fd-4047-d9e6-e9fa0dfa3f8b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;11632d8a-201f-8879-422b-98e6481a8654\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;8d77670e-005a-c78a-c59a-02912c6d75d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Top\&quot;,\&quot;UniqueId\&quot;:\&quot;754b3739-d908-3700-e57e-76927bf8cc8f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left\&quot;,\&quot;UniqueId\&quot;:\&quot;3b864f4a-51db-7e23-38f3-18a5fdb73729\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;fb9ad67d-e1e6-d9cf-3912-54466d36f96b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;e85b5f78-abe7-685d-c2f3-9b0209b3ccc1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Top\&quot;,\&quot;UniqueId\&quot;:\&quot;78d15567-93db-25c5-a740-829817542047\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right\&quot;,\&quot;UniqueId\&quot;:\&quot;bad51015-ac21-9c03-b905-b55ffd5a65d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;b49d6de1-b634-27ff-188d-c234c6662cd1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;7f3d3b43-c33b-00f4-7863-9588a660323a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Top\&quot;,\&quot;UniqueId\&quot;:\&quot;94236294-e09c-1fa5-ea61-2d3d856f591f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Alignment\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alignment\&quot;,\&quot;UniqueId\&quot;:\&quot;f4bfcd37-43a2-0a64-d6b8-06c35949fd98\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Associate cells with headers\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Associate cells with headers\&quot;,\&quot;UniqueId\&quot;:\&quot;6470cfd7-9255-4f5e-510e-6d4e024153a2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Background\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Background\&quot;,\&quot;UniqueId\&quot;:\&quot;e0c97131-5c10-3d7d-f5f4-04926f7e9d8d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Background color\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Background color\&quot;,\&quot;UniqueId\&quot;:\&quot;5dbc718e-8872-f375-d6db-9a06a03585fd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Bold\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Bold\&quot;,\&quot;UniqueId\&quot;:\&quot;11254ccf-b51b-fc08-4604-e5c48fb482f9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Border\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Border\&quot;,\&quot;UniqueId\&quot;:\&quot;11c007b0-4460-f1b4-412b-8c29dd5aefb0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Caption\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Caption\&quot;,\&quot;UniqueId\&quot;:\&quot;4897d5a9-446a-19a3-b367-417fb7a87481\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Margin\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Margin\&quot;,\&quot;UniqueId\&quot;:\&quot;618b08ca-fa17-8e58-bd5b-444d4f963011\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Padding\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Padding\&quot;,\&quot;UniqueId\&quot;:\&quot;1d33d7df-a336-d1e3-3b0c-030a30efe551\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Spacing\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Spacing\&quot;,\&quot;UniqueId\&quot;:\&quot;98505727-ad0e-e00b-a14f-692833adaa7f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Tab\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell\&quot;,\&quot;UniqueId\&quot;:\&quot;809d5424-c7ef-4ee9-3dfa-f6f562bf7b31\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Clean formatting\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clean formatting\&quot;,\&quot;UniqueId\&quot;:\&quot;d865630e-11c5-0f56-5ab1-8126e7f9ef59\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Collapse borders\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Collapse borders\&quot;,\&quot;UniqueId\&quot;:\&quot;f5afb891-5d56-129e-264c-211d0a1918e2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Columns\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Columns\&quot;,\&quot;UniqueId\&quot;:\&quot;68377088-f80c-a734-4362-cda6683d8fa6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Create table\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create table\&quot;,\&quot;UniqueId\&quot;:\&quot;e8f62187-30fc-7b60-4c6c-21287adbe60c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Create Table Hint\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create a {0} x {1} table\&quot;,\&quot;UniqueId\&quot;:\&quot;aa676d39-3bd5-add6-af38-cc7d12a4450c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;CSS Class\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CSS Class\&quot;,\&quot;UniqueId\&quot;:\&quot;07881b74-2100-ce68-c671-ddc1b08492af\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Delete column\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete column\&quot;,\&quot;UniqueId\&quot;:\&quot;df714153-a9e8-478c-8373-4debd1305293\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Delete row\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete row\&quot;,\&quot;UniqueId\&quot;:\&quot;f3083464-d7d9-e3eb-ecd9-b99065aba8bd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;fb1b90e4-ea46-a0e9-2a82-1877731e5167\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Insert\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert\&quot;,\&quot;UniqueId\&quot;:\&quot;4e8f362e-f95a-2189-0519-df657b8fc30f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Ok\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ok\&quot;,\&quot;UniqueId\&quot;:\&quot;450bc477-5458-4ed5-e2e3-7de73a233b19\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Update\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Update\&quot;,\&quot;UniqueId\&quot;:\&quot;6346c577-b830-87c2-502d-4d161f4b13ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Edit Area Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Write your comments here. Press F10 for toolbar.\&quot;,\&quot;UniqueId\&quot;:\&quot;c27e471a-eb7a-b66c-5acb-f2e79725e84d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;File Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Title\&quot;,\&quot;UniqueId\&quot;:\&quot;edc83c40-1aec-0ac0-9762-eac03a73476f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;File Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;414c1fd8-b0ff-6d97-0ae6-a5f64850fde4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Name\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select font family\&quot;,\&quot;UniqueId\&quot;:\&quot;b0a437e4-6f26-032f-aa5f-64eb225477ce\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Name Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;(inherited font)\&quot;,\&quot;UniqueId\&quot;:\&quot;c8041e80-3b57-31a2-294e-b5b4b6951149\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Size\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select font size\&quot;,\&quot;UniqueId\&quot;:\&quot;0fc1f920-798b-f581-1365-3ccaba5a1fa1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Size Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;(inherited size)\&quot;,\&quot;UniqueId\&quot;:\&quot;99b22a61-dc57-9bff-0bc6-149cf8fa745e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Fore Color\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Color\&quot;,\&quot;UniqueId\&quot;:\&quot;cbc91871-0af1-a673-0d92-9f99aefbed53\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Format Block\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Format\&quot;,\&quot;UniqueId\&quot;:\&quot;72c81da3-23dd-89ff-8935-53b01dd01b6e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Formatting\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Format\&quot;,\&quot;UniqueId\&quot;:\&quot;83dc102e-0c6f-d924-9b28-4e29f684eac3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Height\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height\&quot;,\&quot;UniqueId\&quot;:\&quot;b304b9bd-a914-9fd9-7a30-2cc0a8cce80b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;ID\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ID\&quot;,\&quot;UniqueId\&quot;:\&quot;937eaa59-d18f-1bd4-74db-526c8dd13451\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Alternate text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alternate text\&quot;,\&quot;UniqueId\&quot;:\&quot;6c84f72b-7cea-dd3b-76bd-74cd304b0a74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Height\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height (px)\&quot;,\&quot;UniqueId\&quot;:\&quot;f227bf69-d9ab-e237-d05e-4bf7500d92b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;56bb49ad-1cd6-4a34-f386-4773574a3570\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Width\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width (px)\&quot;,\&quot;UniqueId\&quot;:\&quot;f38d94ae-a5fd-1a02-3d63-b4d6649989f8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Indent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Indent\&quot;,\&quot;UniqueId\&quot;:\&quot;60736873-d472-e5a1-1864-4d588f5d2686\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert file\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert file\&quot;,\&quot;UniqueId\&quot;:\&quot;8a282e3a-7745-60e4-252a-65b0f88b4555\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert HTML\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert HTML\&quot;,\&quot;UniqueId\&quot;:\&quot;885618ab-bcec-b598-b51d-b703b7acf37c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert hyperlink\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert hyperlink\&quot;,\&quot;UniqueId\&quot;:\&quot;5fd66cba-0a06-41c4-d951-e919b9f7a8d5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert image\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert image\&quot;,\&quot;UniqueId\&quot;:\&quot;99eaeff2-52e2-3ee5-4285-25132d2e7a7a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert ordered list\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert ordered list\&quot;,\&quot;UniqueId\&quot;:\&quot;609f321e-301d-12fb-5653-e60d184458fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert unordered list\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert unordered list\&quot;,\&quot;UniqueId\&quot;:\&quot;7c46dc64-6ef6-5615-39b3-e056b7f0d9c1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Italic\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Italic\&quot;,\&quot;UniqueId\&quot;:\&quot;9f6fe422-8b3c-2947-cbe9-03bf2c2946d9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify Center text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Center text\&quot;,\&quot;UniqueId\&quot;:\&quot;2b687599-c053-8b8e-e213-ac125a5fbef0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify Full\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Justify\&quot;,\&quot;UniqueId\&quot;:\&quot;8bcbe267-539b-f304-59ee-bf038b831103\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify text left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align text left\&quot;,\&quot;UniqueId\&quot;:\&quot;e0273a64-8881-ffc6-104d-26f12b52d470\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify text right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align text right\&quot;,\&quot;UniqueId\&quot;:\&quot;09b46d64-cabb-a1d0-fcb7-587f4d9e10f7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Text\&quot;,\&quot;UniqueId\&quot;:\&quot;c13396e0-aae8-1a4c-68a2-fc06b2e55ae1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link ToolTip\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ToolTip\&quot;,\&quot;UniqueId\&quot;:\&quot;e2ab0271-d4fe-a709-91d5-ad4f4d1ea410\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;dd3ba603-c1cc-7ea3-2989-d66ac004ea50\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Open link in new window\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Open link in new window\&quot;,\&quot;UniqueId\&quot;:\&quot;a9b51080-415e-4a51-85a9-56dafee6dc74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Outdent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Outdent\&quot;,\&quot;UniqueId\&quot;:\&quot;9a7f7bc2-9ccd-23f0-691d-d6df179879c4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Print\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print\&quot;,\&quot;UniqueId\&quot;:\&quot;95d333d6-a66f-bc48-8d58-af7d17f3be79\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Remove Alignment\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Remove Alignment\&quot;,\&quot;UniqueId\&quot;:\&quot;25523f7f-f953-d397-2fb4-a5e76dbea776\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Remove hyperlink\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Remove hyperlink\&quot;,\&quot;UniqueId\&quot;:\&quot;a183c9c7-e019-4058-fbf2-f974684c8ae7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Rows\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Rows\&quot;,\&quot;UniqueId\&quot;:\&quot;cb8cd0b0-a089-e406-9d0c-3fec195d9049\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Select All Cells\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select All Cells\&quot;,\&quot;UniqueId\&quot;:\&quot;fe4e96f4-65ba-0b05-d720-909901d75766\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Strikethrough\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Strikethrough\&quot;,\&quot;UniqueId\&quot;:\&quot;f454b245-7f21-b515-0831-bd06cc453776\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Styles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Styles\&quot;,\&quot;UniqueId\&quot;:\&quot;2925abda-3347-59ac-41ba-72b7e3753b23\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Subscript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Subscript\&quot;,\&quot;UniqueId\&quot;:\&quot;5e77e9f9-a1c1-3a39-9c03-c0c77ed34886\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Summary\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Summary\&quot;,\&quot;UniqueId\&quot;:\&quot;04c81dcc-7502-b21e-d50e-3549c91770d2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Superscript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Superscript\&quot;,\&quot;UniqueId\&quot;:\&quot;82c7493d-ba23-19e3-1729-085f95eb37bc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Table\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Table\&quot;,\&quot;UniqueId\&quot;:\&quot;ac3c335b-fdf3-bd88-ecad-177ae4640dea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Table Wizard\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Table Wizard\&quot;,\&quot;UniqueId\&quot;:\&quot;6aa4f2c4-c16d-b09f-eec6-668a3f150a21\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Underline\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Underline\&quot;,\&quot;UniqueId\&quot;:\&quot;9e470c9f-e90e-f890-2952-92bc329269e5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;View HTML\&quot;,\&quot;LocalizedValue\&quot;:\&quot;View HTML\&quot;,\&quot;UniqueId\&quot;:\&quot;11b4e814-fd11-29bc-8b22-44cf76b2c601\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Width\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width\&quot;,\&quot;UniqueId\&quot;:\&quot;4a2b016f-2ee3-5824-c550-7543a65e6a9b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Wrap text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Wrap text\&quot;,\&quot;UniqueId\&quot;:\&quot;053592cc-4fda-edd9-c635-e319cdad4a88\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Additional Information Search Panel Group Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Additional Information\&quot;,\&quot;UniqueId\&quot;:\&quot;a6d4675a-04a0-4edf-017f-c346fd4d07f1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Filter Set Missing Name Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You must supply a name to save your Filter Set.\&quot;,\&quot;UniqueId\&quot;:\&quot;53ab4d5f-053e-f957-aa0e-c3f98ac80a4b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;e81f1f91-3e4b-84b9-1f50-65925de220f9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to delete filter set. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;8a342d91-0062-93af-c760-909a715b4d6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Filter Set Missing Name Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name Not Supplied!\&quot;,\&quot;UniqueId\&quot;:\&quot;c12854ee-acd2-9639-fe06-632765d1c26e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;0f6e7329-e224-0d11-9bb8-b6edb3b9e394\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Load Filter Sets Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to load Filter Sets from user configuration. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;63953297-65b1-0b6b-f565-27e6621a19e5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;48327fbe-4bd8-dcc3-1b09-ba31af41a9ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Duplicate Filter Set Name!\&quot;,\&quot;UniqueId\&quot;:\&quot;0d61b372-73e0-07a3-38fc-5e8c856d859c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Load Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Load Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;31e1a718-83aa-a46e-90a2-ec452b88a657\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;758b3c7e-00b7-eebd-eb43-c13c810480d5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;b4132dbc-1ab0-225f-2e97-bd00bd9fd313\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Filter Set Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A filter set with the selected name already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;83ffc021-8744-0d72-d2aa-e3ac3c6ef2d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Saved Search Sets Hint Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Saved Search Sets\&quot;,\&quot;UniqueId\&quot;:\&quot;ad29e687-3d73-a158-4ed6-79bd1ebeecda\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete - {title}?\&quot;,\&quot;UniqueId\&quot;:\&quot;73214e46-2cf3-5082-e694-a572eba3aa43\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Ok Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ok\&quot;,\&quot;UniqueId\&quot;:\&quot;1abdb62f-c20b-6e66-ed78-e46b2fb8b801\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select a Name\&quot;,\&quot;UniqueId\&quot;:\&quot;1e895fb8-0951-5a70-9435-6b07e3892afd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;53fe2848-9cb4-7e59-ce46-2c029556038f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Sets Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to save Filter Sets. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;f4c72f5f-dd01-6579-4afc-5ac6cc7c56b7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Missing Localization Tag Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Missing Localization Data\&quot;,\&quot;UniqueId\&quot;:\&quot;4d6f2397-1e30-f13e-f5b7-4d4d3e1af1ab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete the selected Filter Set?\&quot;,\&quot;UniqueId\&quot;:\&quot;8bf70680-1a22-155f-b3d6-b244223a0717\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;No Filters Provided\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No filters were provided.\&quot;,\&quot;UniqueId\&quot;:\&quot;4dad0bb8-f544-8535-31b4-bb12fd954872\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Missing Localization Tag Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to determine application id or localization tag. Cannot save/retrieve Filter Sets!\&quot;,\&quot;UniqueId\&quot;:\&quot;ecda1241-0101-a820-70a5-273af6d5370e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;True Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;e87f52dc-4cc7-aea4-5b03-d3ff7dae9ed4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;False Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;6f8f0092-4f28-12ba-bf5c-013f7b500916\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;8eeec695-dfac-3c54-9415-e58a08ef3067\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;62f2a9e3-c781-5f5b-05fd-2b41128b45a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Greater Than\&quot;,\&quot;UniqueId\&quot;:\&quot;f47705c6-bb01-2abb-1477-eeb608ed7d4f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Greater Than Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;8a29172d-0b48-2513-41aa-d18144b5da1c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Less Than\&quot;,\&quot;UniqueId\&quot;:\&quot;26595a46-bce3-4bbc-9bf6-3e029e99bd73\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Less Than Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;ebb6f7dd-d815-435a-064c-d86be7d3ee73\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: startswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Starts With\&quot;,\&quot;UniqueId\&quot;:\&quot;1044efe3-76bb-0302-cae7-cf587af7538d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: contains\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contains\&quot;,\&quot;UniqueId\&quot;:\&quot;1633cf4c-307a-b0b9-396e-dc3edef659af\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: endswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ends With\&quot;,\&quot;UniqueId\&quot;:\&quot;a654e683-8963-ebe3-eb6b-a988184f48f4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: doesnotcontain\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Does Not Contain\&quot;,\&quot;UniqueId\&quot;:\&quot;7d5e831c-3bf8-d6bd-d421-6725960504f3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;ead70951-ae6f-27a5-ed75-d7534ec9f41b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;53f153e0-f748-9bd4-7ecc-4fb4315f1171\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is After\&quot;,\&quot;UniqueId\&quot;:\&quot;d8cacf2e-c7df-6c5c-f60d-c3d21c5e705b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is After Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;4a968941-0c96-90b4-68ce-185d5e5bae74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Before\&quot;,\&quot;UniqueId\&quot;:\&quot;f092338c-f6ba-eeb0-36d7-bc610796798f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Before Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;66d828af-ae12-bd9e-b037-50f1c91e21ae\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: TabStrip\&quot;,\&quot;Key\&quot;:\&quot;Tab Header Localization Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to localize TabStrip title text.\&quot;,\&quot;UniqueId\&quot;:\&quot;8a6c95e6-6124-6844-614f-271409d3212c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Virtual Keyboard Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;6034dfd4-93b4-97f4-5fd8-f758fecfe065\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Virtual Keyboard Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;650af988-ae30-166b-1a43-61a253f755cf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tree Component\&quot;,\&quot;Key\&quot;:\&quot;Excessive Selected Items Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The hj-list-tree component was specified with more than one selected item. The hj-list-tree does not support selecting multiple items.\&quot;,\&quot;UniqueId\&quot;:\&quot;c269c117-bd71-8459-0991-78edb97aa21b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tree Component\&quot;,\&quot;Key\&quot;:\&quot;Data Read Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to read data.\&quot;,\&quot;UniqueId\&quot;:\&quot;1e56bb5d-1055-556e-2a0f-e848fac18381\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Back\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;4c503539-fd3a-8697-2e88-af3fe8daa476\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Forward\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next\&quot;,\&quot;UniqueId\&quot;:\&quot;e5664a46-38c1-d26a-f80b-a84b2f3d15df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Finish\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Finish\&quot;,\&quot;UniqueId\&quot;:\&quot;853ca4a4-073e-1b5a-43ab-8f83a061a9c9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;56002d6b-d04d-fe4c-4952-d99e67f66bfd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Pause\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Pause\&quot;,\&quot;UniqueId\&quot;:\&quot;8195ab5e-a92c-249e-d848-abe1e9f6fb31\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Invalid Page Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Specified page and/or Home Page were not defined or were invalid.\&quot;,\&quot;UniqueId\&quot;:\&quot;654ce6a9-b4ac-d270-f55f-204976a9fc6e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Home Page Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;ef38c0d9-f80c-8ac3-7b38-18d8c11a5484\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Invalid Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid Page Id\&quot;,\&quot;UniqueId\&quot;:\&quot;d3321ad2-8c7e-d53c-b7ab-79d181e39f74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Load configuration failed\&quot;,\&quot;UniqueId\&quot;:\&quot;d77f51c2-0750-fea3-ff15-725e940548d8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration No Layout Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;WorkcenterUserLayoutService.loadConfiguration failed: Last layout not requested and no layout name supplied.\&quot;,\&quot;UniqueId\&quot;:\&quot;85c8a1dd-dc1a-539b-7500-ee59ee0aa28e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration No Page Tag Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;WorkcenterUserLayoutService.loadConfiguration failed: Requested last saved layout, but no page tag provided.\&quot;,\&quot;UniqueId\&quot;:\&quot;a9507464-6840-9e5e-752e-ad68ffcb03c5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;8c76ea0d-a0b8-ffa6-9b9f-0b6eca7e73be\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Manage Screen Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Manage Screen\&quot;,\&quot;UniqueId\&quot;:\&quot;906632d4-d9d2-3b07-cc8c-df0a230f346c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Remove Panel Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot remove a panel that lacks a serializationTag value.\&quot;,\&quot;UniqueId\&quot;:\&quot;612eb91d-6400-1a4c-64a6-c6c3382ce471\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Grid Configuration Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load grid configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;920c719d-28f0-3d05-537a-6dd33cdce08e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Default Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;c5e47754-fd35-7808-0389-e0766fc53322\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Application Id Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id:\&quot;,\&quot;UniqueId\&quot;:\&quot;6d247e02-0a72-1e11-8bc1-b7d918d7e532\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Accept Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Accept\&quot;,\&quot;UniqueId\&quot;:\&quot;99f25615-e069-1cc2-ebcd-3f240f84a408\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Configuration Type Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configuration Type:\&quot;,\&quot;UniqueId\&quot;:\&quot;de52f474-65bd-d168-c9d4-cae466496d94\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Configuration Id Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configuration Id:\&quot;,\&quot;UniqueId\&quot;:\&quot;cae9a6ca-ec60-1081-c891-71dcfdaf81b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Min Length Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter at least {0} characters.\&quot;,\&quot;UniqueId\&quot;:\&quot;bd840f11-6f74-1e5e-286a-25f553c47a29\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Regex Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value that match with &apos;{0}&apos; pattern.\&quot;,\&quot;UniqueId\&quot;:\&quot;d1839554-0f28-131a-69d6-a76e3983a4be\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Min Value Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value greater than or equal to {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;93adcf87-e6a7-0299-bbc3-e79dbc3dfdc2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Range Length Error Message \&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value between {0} and {1} characters long.\&quot;,\&quot;UniqueId\&quot;:\&quot;cab8239a-f0c8-a70c-d624-d1d836831020\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Validation Errors On Page Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;There are validation errors on the page.\&quot;,\&quot;UniqueId\&quot;:\&quot;0eab07dc-3beb-9207-c0b5-0febe3420430\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Range Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value between {0} and {1}.\&quot;,\&quot;UniqueId\&quot;:\&quot;13bbf860-6ea5-b73c-4a99-a46f76a084a5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Max Value Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value less than or equal to {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;5d1d0cc2-164a-e07b-d33b-1f30ca06641e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Max Length Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter no more than {0} characters.\&quot;,\&quot;UniqueId\&quot;:\&quot;273db47c-1c24-57e2-83b1-43715e8bca1c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Required Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;This field is required.\&quot;,\&quot;UniqueId\&quot;:\&quot;c3b4ed29-c0d0-febb-b826-e376a840fda1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Email Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid Email.\&quot;,\&quot;UniqueId\&quot;:\&quot;dcfc1799-b30e-9b8f-0bef-52c8c9dbd0e2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Url Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid URL.\&quot;,\&quot;UniqueId\&quot;:\&quot;6a45f550-e06b-c087-a202-5450bbe01df3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;In Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter one of the following values: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;a2eb5576-406c-5cb2-c555-9e4f776e59e4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Equal Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter the following value: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;ac6e403c-141e-e79e-4eae-0deddef12d08\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Request Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid value. Server rejected the value as valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;b9c0ee53-1d6b-faf4-84ce-08409a396a07\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Request Fail Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to validate with configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;10149c1d-686e-47c4-dbfe-9547c51a80ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Favorites\&quot;,\&quot;Key\&quot;:\&quot;Favorite Removed Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorite Removed\&quot;,\&quot;UniqueId\&quot;:\&quot;dafac988-d896-2f8e-8f37-191a0e3930b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Favorites\&quot;,\&quot;Key\&quot;:\&quot;Favorite Added Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorite Added\&quot;,\&quot;UniqueId\&quot;:\&quot;5f0017bc-c725-bf2c-4c05-b1a820285956\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: FieldTable Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToRequestErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred requesting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;3aa2aaad-fd63-61cf-b4e6-80e6fe05136f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Informations: deleteSuccessMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete was successful\&quot;,\&quot;UniqueId\&quot;:\&quot;84065b9d-9d0a-b1ce-82f7-a537c978a1ad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: create\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New Record\&quot;,\&quot;UniqueId\&quot;:\&quot;a74b17d9-3dfe-fea7-b82c-f84565afb1c0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: delete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;0ccdafa2-7e1f-d62e-35fa-f08e430e0611\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: edit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;d4334545-b9ac-d25d-9f04-17e5159aca66\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;3f89196a-779d-3abb-5304-ac368a49f35d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: save\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;d6206a1e-254b-c4f2-3023-51863956ab4e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToUpdateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred updating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;95ac6204-8956-924b-df1d-ab873d6088d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToDeleteErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred deleting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;9def94ff-b5a4-f02a-8e11-a34c41d6f2f4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToCreateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred creating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;4bc5d508-495a-be86-7cbf-f6fcdc1f09d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Responsive State Information\&quot;,\&quot;UniqueId\&quot;:\&quot;309a1b20-34b0-27b0-8c59-2f109eb75e4c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Height Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height\&quot;,\&quot;UniqueId\&quot;:\&quot;f89f8bd4-72d8-0229-2258-6b50d4f4c308\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Device Size Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Device Size\&quot;,\&quot;UniqueId\&quot;:\&quot;fe49e011-9b14-a563-8a71-fddee2377de6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Orientation Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Orientation\&quot;,\&quot;UniqueId\&quot;:\&quot;357bf4ba-b05d-4cce-1a61-4f3ec80e5ec4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Width Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width\&quot;,\&quot;UniqueId\&quot;:\&quot;47f2f12b-7bd9-37e8-35b3-5a1371428c7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Device Pixel Ratio Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Device Pixel Ratio\&quot;,\&quot;UniqueId\&quot;:\&quot;8da8a392-dfa6-7a46-20f8-fae5ab1240a8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Loading State Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loading\&quot;,\&quot;UniqueId\&quot;:\&quot;c73fe699-9bde-cfef-4c4d-d021211983ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application\&quot;,\&quot;UniqueId\&quot;:\&quot;5fbaee65-572e-8053-d505-b9bbc29d7c81\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Unable To Initialize Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to initialize application\&quot;,\&quot;UniqueId\&quot;:\&quot;a0e2c76e-94f1-a1ed-ceb9-c1f51d65e08e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loading Applications\&quot;,\&quot;UniqueId\&quot;:\&quot;b1b080c4-c387-c0de-8152-73e619163cb7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Loaded State Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loaded\&quot;,\&quot;UniqueId\&quot;:\&quot;41d87db3-4440-ee39-6473-64c33d4e3e3a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Get Tenant Admin Configuration Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get tenant admin configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;3c56baca-ca19-6796-387e-f79cf9610816\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Import Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import\&quot;,\&quot;UniqueId\&quot;:\&quot;d8a6c033-597d-c2f1-098e-f110307fcc50\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Export Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export\&quot;,\&quot;UniqueId\&quot;:\&quot;5007b58e-1850-ccf0-d1d5-1933cc1f1e0b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Discover Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Discover\&quot;,\&quot;UniqueId\&quot;:\&quot;63233afd-acb5-5407-6ddf-b14401c25781\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One\&quot;,\&quot;UniqueId\&quot;:\&quot;03aec2df-357d-966e-043e-d8655260f2c6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;58144a1c-753a-66fe-3bf9-fc2d76b33070\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close Space\&quot;,\&quot;UniqueId\&quot;:\&quot;4ee93e07-490e-3ee2-cad2-7d9a9c51763f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;2898f4fc-434b-4def-3a64-9ea35cf68e4b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;6cbd2c14-fc59-2998-ed7b-04fbf16f6dc0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to close space {0}?\&quot;,\&quot;UniqueId\&quot;:\&quot;66ac08f5-3c02-bb57-f478-8d5d450b471a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Session\&quot;,\&quot;UniqueId\&quot;:\&quot;147f074a-f2b8-3347-2cb5-9b94e97a446e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Culture Script Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load script for culture\&quot;,\&quot;UniqueId\&quot;:\&quot;5aa9233e-e1dd-6ca4-61bd-f5b5a5751c4a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Home Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;e26ca64d-daf4-c93b-1464-14599ef384a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Try Again Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Try again\&quot;,\&quot;UniqueId\&quot;:\&quot;4a1b9981-4ed4-2734-05d2-14028eabc18b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Expired Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session has been expired or kicked out by system administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;a6a6525b-bad4-6725-a5a6-4f73a74bcb70\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Expired Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application session has been expired or kicked by system administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;d4edf3ac-be34-6b9b-ce74-e1497d6e381a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Alerts Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts Page\&quot;,\&quot;UniqueId\&quot;:\&quot;02dc3163-8a8a-a3ea-8411-06180c2da005\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recovering Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Creating new application session ...\&quot;,\&quot;UniqueId\&quot;:\&quot;9ae18425-30aa-234c-aeb1-0c09e6b0ed48\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Main Close Confirmation\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to close Körber One. All unsaved changes will be lost.\&quot;,\&quot;UniqueId\&quot;:\&quot;6834d5f4-136f-333b-fbf8-af01904216f1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Copyright Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;© 2019-2021 Körber Supply Chain U.S., Inc. (a successor in interest to HighJump Software Inc.) All Rights Reserved.\&quot;,\&quot;UniqueId\&quot;:\&quot;5bff4660-4235-7f13-fbdc-3bc4a7c39c3c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Quick Links Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;88c6c7a9-ca57-13ca-19bf-c0b66edccb7a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to obtain a session for application, most likely because no licenses were free for this application. If you need to use this application still, please contact your administrator to clear a session for you and click {0}, otherwise click {1}.\&quot;,\&quot;UniqueId\&quot;:\&quot;1d7ab4d4-e47c-3b2f-24fb-9dbb71c0d162\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Close Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close\&quot;,\&quot;UniqueId\&quot;:\&quot;dab6131f-1131-0b74-c7bc-9e18df92d412\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Version Update Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your browser is using an incorrect version of Körber One software. Refresh the browser and log on again.\&quot;,\&quot;UniqueId\&quot;:\&quot;c36fdfb6-8486-7730-4c1d-ba17239c83d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Version Information Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get version information.\&quot;,\&quot;UniqueId\&quot;:\&quot;933dc7f9-2be0-d136-c42e-bef9bf6170a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Network Outage Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Network connection\&quot;,\&quot;UniqueId\&quot;:\&quot;ff393508-b42c-c3e8-6fcb-fa49d43cb61f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Network Outage Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Network connection was lost, please wait...\&quot;,\&quot;UniqueId\&quot;:\&quot;abb4aa20-fbb0-db08-5c84-4419c428c6c6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh session\&quot;,\&quot;UniqueId\&quot;:\&quot;09d1ef22-10ba-dfba-5281-5c971244f0a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to refresh session.\&quot;,\&quot;UniqueId\&quot;:\&quot;50b87420-c055-3b05-b9b7-5e52a319d7b5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Retry\&quot;,\&quot;UniqueId\&quot;:\&quot;b30d4f53-7922-ccd2-bdb1-caef0c8dfb90\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;6de65db9-d615-d76e-fd7f-9e8dfa35bda2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;2eba1253-1b3f-bb9f-7832-0a9bc477e14e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;a0f6e039-18c1-5cf8-9123-06529a36e827\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Privacy Policy Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;KÖRBER SUPPLY CHAIN US, INC. PRIVACY STATEMENT\&quot;,\&quot;UniqueId\&quot;:\&quot;31b9d075-bf19-bc29-a776-fe5303196760\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refer to the company privacy policy for terms of use.\&quot;,\&quot;UniqueId\&quot;:\&quot;2ab42ab1-02f2-5056-f711-0dbe247da5a3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Timeout Warning Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session Timeout Warning\&quot;,\&quot;UniqueId\&quot;:\&quot;fb4a3c50-40d9-1b3f-dd96-24cc888b9e2b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Acutomatic: Flashing Browser Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session timeout\&quot;,\&quot;UniqueId\&quot;:\&quot;666cc066-2524-8797-d975-df341b8ce5cf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retrieve Tenant Configuration Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to retrieve Tenant Configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;6272dd41-663f-003f-d2f7-6dad98051c59\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Remove Session Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to remove the current Sesssion.\&quot;,\&quot;UniqueId\&quot;:\&quot;19a844a6-ee71-e0df-9c52-60d7e83cfd34\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your session is about to timeout due to inactivity. Do you wish to continue or logout of your session?\&quot;,\&quot;UniqueId\&quot;:\&quot;2728b8a6-c1aa-aa1d-551a-d167abc69e7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog Yes Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;632c6b3b-e94a-6243-aa8b-f441523cb023\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog No Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;a7d29abe-be3d-f697-0184-e6301d50ad45\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Yes Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;350d3253-91b8-3573-0d87-4d52d8797688\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;No Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;13d5238c-4bb2-d300-3729-fcde709a0a18\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;f75e2f61-1750-6b21-c676-9e4cf7c19a4d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;c8e6fbf2-1985-864d-932c-f8840021df15\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;1fee9919-380c-b24f-2aa5-c81afdfec3de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;2f16edf0-26a4-33e8-c434-979bb5637caf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to close all pages and logout from Körber One.\&quot;,\&quot;UniqueId\&quot;:\&quot;52b2f447-8e54-2ed3-cb73-722f7727d464\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.FirstName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;3e8af105-366d-52ff-74bf-b6f8b1d1e8ce\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.LastName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;b98d5d54-70fa-66f1-889c-2283e0db4e31\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.LogOnName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logon Name\&quot;,\&quot;UniqueId\&quot;:\&quot;10b250f1-8391-6ee7-61de-73e551262166\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.Email\&quot;,\&quot;LocalizedValue\&quot;:\&quot;E-mail Address\&quot;,\&quot;UniqueId\&quot;:\&quot;b769fd0f-a77b-f282-5ed9-f89d5a421d47\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.Phone\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone Number\&quot;,\&quot;UniqueId\&quot;:\&quot;61a9d0ca-6970-2ea5-1701-f03f291042ae\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Group Description: User\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Core Platform User Personal Data\&quot;,\&quot;UniqueId\&quot;:\&quot;36a76811-5d23-7485-9768-03f9f5c0767f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User does not exist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} does not exist.\&quot;,\&quot;UniqueId\&quot;:\&quot;dcb3bf7c-6c2c-d68a-0002-7361dfdb2b67\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Invalid tenant for user\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid tenant for user {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;1ce0df86-8bd8-0091-3304-43483a04bb05\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User is either an administrator\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} is either an administrator or a system user.\&quot;,\&quot;UniqueId\&quot;:\&quot;11ed2831-76d2-e2ba-b2e5-97ab9d92a6b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot process PDP operations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot process PDP operations with current connected user {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;1cb80c67-0ec0-211f-002a-50247e9290e0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot export selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot export selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;24469eb5-254a-faff-05bb-f20933444a27\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User not found\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} not found.\&quot;,\&quot;UniqueId\&quot;:\&quot;a8a7393c-010e-2135-afef-ba0ce4178a95\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error trying to export\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to export selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;d2068333-4711-34e2-0de0-39318c85678c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot delete selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot delete selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;d5b5b2a9-6c7a-8e6a-0028-a573fff7b727\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to delete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to delete selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;7b921508-e00a-30c8-20f3-4b76010db383\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot restrict selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot restrict selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;d83197f3-19bd-1b81-2013-4fc33ccf360a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to restrict\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to restrict selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;458c26b2-c20d-8576-7131-a5edc6d16c7b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot unrestrict selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot unrestrict selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;c0c257c7-f81d-4dfc-0c1b-466950438948\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Invalid user identifier\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid user identifier.\&quot;,\&quot;UniqueId\&quot;:\&quot;075e2eb6-0f6a-a2b0-7423-faf810343ad6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User with same info exist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} with same LogOnName or Email already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;1d8910f3-0031-8c1b-509d-ac9ab23693c5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to unrestrict\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to unrestrict selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;d35a3063-dd95-7979-ea55-a7c9575ee8c1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Platform User Interface Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One User Interface\&quot;,\&quot;UniqueId\&quot;:\&quot;e399eebd-e1bb-3aaa-38a0-a475d6c2661f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Localize Application Menu Items\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable To Localize Application Menu Items\&quot;,\&quot;UniqueId\&quot;:\&quot;772a0732-a115-a601-e1e2-9a6f910d03a3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Menu Not Found Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu [{0}] was not found. Full Path: {1}\&quot;,\&quot;UniqueId\&quot;:\&quot;8c05a9f9-a66e-3976-ea71-7380a3cdd9df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;About Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;About\&quot;,\&quot;UniqueId\&quot;:\&quot;23c11cd4-c2f0-0085-4a05-855669fd73c2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Spaces Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Spaces\&quot;,\&quot;UniqueId\&quot;:\&quot;03294e41-70e9-8034-701f-4407577c82af\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Search Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;a2ddf30b-9e52-02d7-9682-2f546225d6d5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Static Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load static menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;d218f44d-b641-000c-c68b-fb4524237ca9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Help\&quot;,\&quot;UniqueId\&quot;:\&quot;08a937d4-fe80-0ba4-7e91-87118ea4021d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Favorites Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorites\&quot;,\&quot;UniqueId\&quot;:\&quot;9861bed0-b20d-af49-7aa0-8aa1c3d7ee16\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Video Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Video Help\&quot;,\&quot;UniqueId\&quot;:\&quot;0cc46b6b-98b4-aeaf-5c45-339045e83d02\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load MetaPage Instance Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load MetaPage instance menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;5b4c6e85-b7b6-4f52-9ef9-00e4033af254\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Online Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Online Help\&quot;,\&quot;UniqueId\&quot;:\&quot;af208865-74ad-25b1-a21f-1af3e249186e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;3c321066-ee9b-0a61-e685-4268ff5477ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Dynamic Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load dynamic menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;97dfe91c-2b7a-9887-8fb8-ae66abe2aa1e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Help Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load help menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;c73f53c6-e503-4f13-fa85-ddb1e48021f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load MetaPage Instance Help Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load MetaPage instance help menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;5eec4481-bc44-2e0c-f97a-0237b321a7ec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Video Help Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load video help.\&quot;,\&quot;UniqueId\&quot;:\&quot;5069f234-326a-dba2-6130-6806544fdc0e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Localize Application Help Menu Items\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable To Localize Application Help Menu Items\&quot;,\&quot;UniqueId\&quot;:\&quot;b4eccb03-0799-81ce-5c38-3dde8359ebb1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Copy Page URL Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy Page URL\&quot;,\&quot;UniqueId\&quot;:\&quot;10f4af9f-1b07-4b11-6d07-c4cd052e1ee6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Save Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save quick links. \&quot;,\&quot;UniqueId\&quot;:\&quot;96d6edfd-9575-7e0d-e923-7bd5835d8bfe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;28b36085-fc0e-e6af-2259-9fedf50dd656\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;e92b607c-4244-96bc-ebf3-0481bf6fd82d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Link\&quot;,\&quot;UniqueId\&quot;:\&quot;9e678795-7e7b-d6be-3baa-fdb701bb2888\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Quick Link Home Page Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load quick link home page.\&quot;,\&quot;UniqueId\&quot;:\&quot;ba011d00-163b-e15b-ecf2-1a814cc5dd6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;System Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System Link\&quot;,\&quot;UniqueId\&quot;:\&quot;bfab7e3f-180a-35d6-6933-d79d986d33d2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to restore to default quick links?\&quot;,\&quot;UniqueId\&quot;:\&quot;2aeb6db7-4789-f9ea-ee28-2d061caeb56a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore Defaults\&quot;,\&quot;UniqueId\&quot;:\&quot;6100c727-b16f-2799-d34a-4806545e926c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;User Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Link\&quot;,\&quot;UniqueId\&quot;:\&quot;dccc7ab7-1e90-a52c-e5d7-ec4f7a25f0e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page Id\&quot;,\&quot;UniqueId\&quot;:\&quot;653d22f0-bf04-3b40-3951-5bc66a2569d8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;58dd3c17-fcb1-2f9c-8d28-8052a398ada4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Type\&quot;,\&quot;UniqueId\&quot;:\&quot;d33535fb-6f41-bc3f-9fd1-0a476f0aeb3f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;4f22ff7f-b909-8932-92f2-4ac9a7b55d18\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;631efcac-b514-18e3-64c6-7f65cafdf636\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Name\&quot;,\&quot;UniqueId\&quot;:\&quot;c0b376dd-ed1b-85ce-576a-c2f5ccebe0ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Link with this name already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;fe7934cb-3c47-de1d-379e-09ebd24647b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;046643c3-04b4-15a5-540c-d2a9552bda0b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Type\&quot;,\&quot;UniqueId\&quot;:\&quot;cd9b4b99-8ea1-7c2c-cf3b-d91803926284\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;2d424bc3-b33c-8f3b-62dd-c7f96af3ef76\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Icon Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon\&quot;,\&quot;UniqueId\&quot;:\&quot;4030b290-1934-aa67-c750-813c285b15ec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;85b172d5-c6a2-64d6-f19d-d165dc41e3d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Choose Icon Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose icon\&quot;,\&quot;UniqueId\&quot;:\&quot;f5a469b0-dd1f-79e9-9af0-4d64be94e7f2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;917cbf6a-cd7d-fdc5-e67f-81742585c41d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Not Found Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu path [{0}] was not found.\&quot;,\&quot;UniqueId\&quot;:\&quot;02e37b82-16a9-7a63-dad8-dd9df9f9e66b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Remove Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to remove quick link.\&quot;,\&quot;UniqueId\&quot;:\&quot;91c47165-3867-9ca0-ed6c-6889b8a05cd0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;948c8a40-2888-4e09-cff0-c6e71ba6e9f9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Change Icon Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change\&quot;,\&quot;UniqueId\&quot;:\&quot;be9c1ad5-a3ad-880d-80a6-c13b69f91095\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application Icons Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application icons.\&quot;,\&quot;UniqueId\&quot;:\&quot;ab869485-6c66-0f5c-9405-2ea769607f22\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Parameters Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Parameters\&quot;,\&quot;UniqueId\&quot;:\&quot;15b75fd1-7f91-4006-4f3b-5a4adb1305d7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Grid Filters Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Grid Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;40366da8-e025-a8f6-e97f-0e9298356922\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;086eeef2-65ae-17eb-1c0b-dce36213f037\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Custom Action Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom Action\&quot;,\&quot;UniqueId\&quot;:\&quot;e75bc932-567c-f9a6-1cdf-6b5bffa9b16a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load quick links.\&quot;,\&quot;UniqueId\&quot;:\&quot;4027f546-7927-438d-d431-91da17626f74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Icon Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon\&quot;,\&quot;UniqueId\&quot;:\&quot;efc8c259-773a-6f1f-2e8a-c76c7043ec53\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Add New Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New\&quot;,\&quot;UniqueId\&quot;:\&quot;167aa691-841e-d1c4-0faf-3f3bc7bfac98\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Edit Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;eff5a24f-7867-0ea0-20e5-896ee93e8163\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Reorder Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reorder\&quot;,\&quot;UniqueId\&quot;:\&quot;a669cedf-0b02-1688-f545-68b05188bd5f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;07796d47-591c-981f-b0b7-1fdd931f78f5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Home Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;f15c61a5-af71-6b9a-6bdb-5c6b48b52b18\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Restore Default Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to restore default quick links.\&quot;,\&quot;UniqueId\&quot;:\&quot;c7ac71c9-6290-a1db-a8b0-181b63e00753\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;5aa80523-69aa-4aa1-6743-32a8420ebf4d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Source Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Source Application\&quot;,\&quot;UniqueId\&quot;:\&quot;5f73781f-b315-755c-d0d8-64797ff7f238\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;bf8c0021-3771-43ee-ef00-10cf58a8b301\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore Defaults\&quot;,\&quot;UniqueId\&quot;:\&quot;aa25b63b-63a8-9d22-ba5c-82e77dc60b48\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;New Quick Link Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;4949011d-bad6-231c-0d8c-3ffcb532c404\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Visible Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Visible\&quot;,\&quot;UniqueId\&quot;:\&quot;cb87bae6-5aae-4a48-f2e1-6cc72e0be50c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu path cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;5224f51d-fdb9-b103-7e7d-53a31dd9813c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Type Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page Type\&quot;,\&quot;UniqueId\&quot;:\&quot;9c7e63ff-27ec-414c-8d2a-c86d16150979\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete quick link {0}?\&quot;,\&quot;UniqueId\&quot;:\&quot;9a2e6c02-35f5-cb73-28c0-250e4024a2ba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;84fbc5d8-b794-c2e6-3521-9e0cb428c66d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Visible Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Visible\&quot;,\&quot;UniqueId\&quot;:\&quot;3b826975-38f2-7f6e-995c-95344131d7c1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;43b24f37-914c-3527-f842-8a5590fb9df3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Icon Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;0c36e8c9-c4e6-acb0-63cd-2156a56e3604\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;751a5167-6226-9964-5296-828b342f6c09\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Choose Icon Dialog OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose\&quot;,\&quot;UniqueId\&quot;:\&quot;6c002a15-d849-f300-8133-526a5ccd920b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;cea23026-9c0f-261c-270c-9aeb16b0455b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: System Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System\&quot;,\&quot;UniqueId\&quot;:\&quot;6eb354be-dc9a-0f49-0c6c-477c755d1c32\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Home Page Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;2afa0706-8bec-c1a8-68c5-d193fe4c043a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Name Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;f7e308c2-0f19-de0d-6239-bd35a2688f9e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Administrator Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Administrator Link\&quot;,\&quot;UniqueId\&quot;:\&quot;dd8e243b-7320-6419-11d2-077e6ac1b410\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Status Bar\&quot;,\&quot;Key\&quot;:\&quot;Header Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;STATUS\&quot;,\&quot;UniqueId\&quot;:\&quot;f75df118-e32a-92fd-688d-64f982647813\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-53" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$select</stringProp>
                  <stringProp name="Argument.value">ProductId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/ProductModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-54" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;AccellosOne Pulse\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;5da6bc81-db18-6817-fa8e-80f85b727cf5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;Advantage Commander\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;4c6a09db-02f9-f22b-d538-a53742d76f2a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;b023ec77-57fd-60c0-8d08-e0d5e5a0ec7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;Supply Chain Advantage\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;574a0a7f-5c22-95dd-76e9-50fbf11ccdb7\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-55" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Alerts/AlertItem.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-56" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetInstalledHost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-57" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$inlinecount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$inlinecount</stringProp>
                  <stringProp name="Argument.value">allpages</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$select</stringProp>
                  <stringProp name="Argument.value">Id,ApplicationId,IsPersistable,IsRead,IsFavorite,Status,SourceId,SourceUserId,PayloadPreview,SourceType,TargetUserId,PayloadType,PayloadHeader,DateCreated</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$orderby" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$orderby</stringProp>
                  <stringProp name="Argument.value">IsFavorite desc,DateCreated desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-59" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$filter</stringProp>
                  <stringProp name="Argument.value">Status eq &apos;new&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$inlinecount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$inlinecount</stringProp>
                  <stringProp name="Argument.value">allpages</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$top" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$top</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-58" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetProductsWithInheritance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-60" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetAuthorizedMobileApplications</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-81" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;Menu Folder\&quot;,\&quot;Key\&quot;:\&quot;SCA inMotion\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One Mobile\&quot;,\&quot;UniqueId\&quot;:\&quot;9a39c977-850e-6980-9722-59101b46f212\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError no access\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You do not have access to the application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;0b2ec30e-2394-ce67-7ad5-56a4ce31f92e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError MT Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Middle tier is not set for application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;df047ad7-b52d-9348-470d-905afe9bd819\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError OData Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OData provider is not set for application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;ead06ca6-9183-c10b-b022-e7965aa7faf6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError endpoint Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot read application&apos;s oData endpoint. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;5113a177-3802-7c67-0771-e8dcf4fbd597\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-77" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Add Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add\&quot;,\&quot;UniqueId\&quot;:\&quot;085617ce-548e-f785-7c29-8a415e960eec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Edit Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;08ea0e54-871e-77a2-9e50-7c236cedd6eb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;130419c3-5c0a-de47-514d-1a3c0d428600\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;52c9921d-7996-de4c-e2f7-3f935016dd96\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Finish Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Finish\&quot;,\&quot;UniqueId\&quot;:\&quot;2e996f38-ffff-bd02-d0fa-8403f038ddbe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Back Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;d87a67f1-ff3c-e9ae-ce5d-19d2d54377c8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Next Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next\&quot;,\&quot;UniqueId\&quot;:\&quot;269f3e7b-d762-0049-4a06-157708621d2a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;0590648f-f73d-6ff5-8076-46e5ca17db7a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Ok Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;947099bc-4ca6-a225-544c-5519faa3abc4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Copy Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy\&quot;,\&quot;UniqueId\&quot;:\&quot;ab3c95b1-f819-407e-c1b6-1725f086cb92\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Search Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;532e32c4-6654-fd8b-9a08-135ec9dbb66b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;System Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System\&quot;,\&quot;UniqueId\&quot;:\&quot;88a6a1b6-274f-78cc-f968-22ad159c4197\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;8cab54c0-c1eb-5b05-fbc0-5ed03ccbce0d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Install Print Station Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Install Print Station\&quot;,\&quot;UniqueId\&quot;:\&quot;8c70f096-e11c-94a3-c3dc-9f5d8acd5d50\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Tenant Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Tenant\&quot;,\&quot;UniqueId\&quot;:\&quot;24d3aedb-7b74-7daa-f8b6-8d4ed01286a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application\&quot;,\&quot;UniqueId\&quot;:\&quot;431eead7-6f0d-83f8-8f22-9346e0feda01\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Files Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Files\&quot;,\&quot;UniqueId\&quot;:\&quot;c7455751-38ae-083e-0325-3bf92f818428\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Confirm Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;0e628a45-c805-a1d3-2cd3-c5d55edec574\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Get User Mode Preferences Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get user preferences.\&quot;,\&quot;UniqueId\&quot;:\&quot;df1cd35a-2fb5-0b5c-f0bf-2000ead9446b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Update User Mode Preferences Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to update user preferences.\&quot;,\&quot;UniqueId\&quot;:\&quot;c73e59ba-7f05-34a5-6e5a-dfac1a81c617\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Update User Mode Preferences Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User preferences have been updated.\&quot;,\&quot;UniqueId\&quot;:\&quot;79df641a-5dae-327d-2625-7604a81a69a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Page Access Denied Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not authorized to view this page.\&quot;,\&quot;UniqueId\&quot;:\&quot;b424d274-9b24-0d0e-02e7-0c5b2eb8fd6e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Email Log Dialog: Get Default Email Template Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get defaut email template.\&quot;,\&quot;UniqueId\&quot;:\&quot;7010c8b8-efed-7b62-eeec-dae2ca4a3396\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Workflow Parameter Description\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workflow\&quot;,\&quot;UniqueId\&quot;:\&quot;141c8c61-a9aa-12ef-fd5d-6881f7a35d46\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;True Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;e4bc1fdc-f6e7-e1cb-b4bf-4f4dc9fe5517\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;False Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;28563eaa-aced-849a-efb0-9cd6ebaf6751\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Auto Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto\&quot;,\&quot;UniqueId\&quot;:\&quot;f8e303f9-d732-e588-5eae-74e29d29ba29\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;On Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On\&quot;,\&quot;UniqueId\&quot;:\&quot;7da3b97c-fa70-be35-4f54-2f916d6ee1b0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Off Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Off\&quot;,\&quot;UniqueId\&quot;:\&quot;92188b60-822e-e08c-896d-3a3b6cc5a2cf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Allow Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;a87b129b-6b82-fd5e-9704-0ea904da07f0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Deny Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;28392777-6920-c08b-7b7b-947481c63927\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Not Declared Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Declared\&quot;,\&quot;UniqueId\&quot;:\&quot;2814aba5-b35a-1435-4667-9fba701a3d0a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Selected Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export selected\&quot;,\&quot;UniqueId\&quot;:\&quot;0f159c3f-dafd-9c1c-54c0-7502ca4d2888\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all\&quot;,\&quot;UniqueId\&quot;:\&quot;0358513b-c827-5c02-a02a-ecd6345aa2b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Current Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export current application\&quot;,\&quot;UniqueId\&quot;:\&quot;e072e4e8-4807-2938-2e91-270dd1bcbf6e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Applications Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all applications\&quot;,\&quot;UniqueId\&quot;:\&quot;be4dbc82-65d7-1414-dee9-cc0ad93078c4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Current Deliverer Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export current deliverer\&quot;,\&quot;UniqueId\&quot;:\&quot;9138892d-a4b1-f5d9-55f3-c0c0f4af580b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Deliverers Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all deliverers\&quot;,\&quot;UniqueId\&quot;:\&quot;be2c063e-050b-b69f-f2b4-549391f8dccc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Is Not Supported Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clickonce is not supported\&quot;,\&quot;UniqueId\&quot;:\&quot;64276c58-1854-6104-b062-7b980034e750\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Is Not Supported Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Do you want to enable clickonce?\&quot;,\&quot;UniqueId\&quot;:\&quot;5deac1db-7877-604b-1cbb-6272efb5f316\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Yes Text Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;94a872cf-8b46-f7e0-93f5-3b186033fcf1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce No Text Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;b21b0883-c3e5-6423-065b-acefb4979ae2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New User Template Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User Template\&quot;,\&quot;UniqueId\&quot;:\&quot;46eac5e8-37b3-ed8b-1e47-3cdee3756f95\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New User Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User\&quot;,\&quot;UniqueId\&quot;:\&quot;bf60fc84-3385-d4df-2b74-e54fb59afb5a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New Role Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Role\&quot;,\&quot;UniqueId\&quot;:\&quot;92fdd018-01fb-b04d-55d6-a38d82f9dfad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Select User Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select User\&quot;,\&quot;UniqueId\&quot;:\&quot;1b416598-7c86-75ca-bb7c-77b9e9f1505c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Select User Dialog\&quot;,\&quot;Key\&quot;:\&quot;Select User Template Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select User Template\&quot;,\&quot;UniqueId\&quot;:\&quot;dd31671f-74a9-5c80-1934-4f61f802372b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select Users from Active Directory\&quot;,\&quot;UniqueId\&quot;:\&quot;1ea507ff-d25d-de69-7acd-216cd53c18fb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;d94756ed-5b97-aeaf-756d-ddefc99315ce\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Filters Panel Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;d81c3ac9-3396-0044-408c-955658c8e057\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Users Panel Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Users\&quot;,\&quot;UniqueId\&quot;:\&quot;56777e9c-ad56-dd47-a95b-9ea4f2f6c5ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchText\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;47334239-a489-cc22-e6f2-580aa90443d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchProperty\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search Field\&quot;,\&quot;UniqueId\&quot;:\&quot;5dcba624-7947-e71b-5cf4-94f0d2f685ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchLocal\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Local Computer\&quot;,\&quot;UniqueId\&quot;:\&quot;16806f31-46fc-f65c-f729-02ad67d4e9ac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: sizeLimit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Records Limit\&quot;,\&quot;UniqueId\&quot;:\&quot;355db94b-17d0-3a8a-1608-2c6963a1ecc4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to search users in Active Directory.\&quot;,\&quot;UniqueId\&quot;:\&quot;a62b9ba7-d2b6-1e2e-3ddb-2a9200dc79df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Common Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Common Name (cn)\&quot;,\&quot;UniqueId\&quot;:\&quot;55fb1ed1-96a0-a587-aa51-82d271dc389a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Account Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Account Name (sAMAccountName)\&quot;,\&quot;UniqueId\&quot;:\&quot;09f86da4-3fd0-148f-b5f2-eb07a4d6be5d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;First Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name (givenName)\&quot;,\&quot;UniqueId\&quot;:\&quot;c3e2bfa5-b208-57aa-7db7-6818ac52b4c7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Last Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name (sn)\&quot;,\&quot;UniqueId\&quot;:\&quot;76b1374e-874e-debb-798c-f31009d7abee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Email Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email (mail)\&quot;,\&quot;UniqueId\&quot;:\&quot;07c2faef-6fdb-28c3-f744-e93ecca882a8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Display Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Display Name (displayName)\&quot;,\&quot;UniqueId\&quot;:\&quot;510eb2d5-67d2-8df4-ffb4-1792c6f00ebd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;User Principal Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Principal Name (userPrincipalName)\&quot;,\&quot;UniqueId\&quot;:\&quot;0d124068-2539-37dd-2ae3-360528ec664e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name (name)\&quot;,\&quot;UniqueId\&quot;:\&quot;e6e679c9-1746-91b2-a4a1-a8aa9e8af45a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_LogOnName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;8b8f8363-ca83-3dbf-f85e-2172d29859c0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_FirstName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;5029fcf5-e26a-c8c1-d46c-82cc50e94ccd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_LastName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;87da4206-f998-a25d-da0c-5348d5b85bec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_Email\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;e592e1d4-6e1d-aebc-a5b0-305c919f4cb4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_Phone\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone\&quot;,\&quot;UniqueId\&quot;:\&quot;4aa7f4fd-4745-ff38-a7a9-8354fb309437\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New User Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;824439bd-2764-1075-8be0-4a94ecd10480\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New Role Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Role Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;880025de-0f5f-82d7-86eb-34039a051e27\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New Scheduled Task Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Scheduled Task Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;2007a679-8c42-aa6c-06b9-87554c53db8d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Identity Claims\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Identity Claims Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get identity claims.\&quot;,\&quot;UniqueId\&quot;:\&quot;b9f343e6-e4e5-e622-2b60-94ec52259d3b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;fe5fc90e-f257-02bc-c305-339ee86b9fb2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Text\&quot;,\&quot;UniqueId\&quot;:\&quot;2bba2a01-a449-60cf-52a1-41ba58fccf5c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;NumericInteger\&quot;,\&quot;LocalizedValue\&quot;:\&quot;NumericInteger\&quot;,\&quot;UniqueId\&quot;:\&quot;2881bc45-e940-5532-2ccf-81da6fa0d954\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;NumericDecimal\&quot;,\&quot;LocalizedValue\&quot;:\&quot;NumericDecimal\&quot;,\&quot;UniqueId\&quot;:\&quot;8621cd8a-3d83-8da8-9e36-4a4bd55fe2ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Boolean\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Boolean\&quot;,\&quot;UniqueId\&quot;:\&quot;b9975be5-2a63-568d-33df-87401ad3b006\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Guid\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Guid\&quot;,\&quot;UniqueId\&quot;:\&quot;6f7dca8c-0f8e-6cf4-03b6-dec60382401f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;ValidatedSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ValidatedSource\&quot;,\&quot;UniqueId\&quot;:\&quot;70fe1ae1-e72d-c728-e441-08e7f66b85ea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;ValidatedMultiSelectionSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ValidatedMultiSelectionSource\&quot;,\&quot;UniqueId\&quot;:\&quot;4a6ea8b0-5905-d3ca-67bc-b2e9a4ba9134\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;CustomSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CustomSource\&quot;,\&quot;UniqueId\&quot;:\&quot;ae7e22da-6d5d-d4cf-c903-08147924a3ba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;CustomMultiSelectionSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CustomMultiSelectionSource\&quot;,\&quot;UniqueId\&quot;:\&quot;41763de2-6121-3eb2-431d-9ec695ca2d6f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;AutoIncremented\&quot;,\&quot;LocalizedValue\&quot;:\&quot;AutoIncremented\&quot;,\&quot;UniqueId\&quot;:\&quot;57097503-e784-604a-baff-38142f540ee4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Custom Source\&quot;,\&quot;Key\&quot;:\&quot;grid_CustomSource_Column_Header_value\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Value\&quot;,\&quot;UniqueId\&quot;:\&quot;3377bb4d-4b4e-9eae-ff72-930e8f840a77\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Custom Source\&quot;,\&quot;Key\&quot;:\&quot;grid_CustomSource_Column_Header_description\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Description\&quot;,\&quot;UniqueId\&quot;:\&quot;e75dbf2f-ce67-d4a2-64a1-31c205b2c95e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarScreenID\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ScreenID\&quot;,\&quot;UniqueId\&quot;:\&quot;d4098b6a-9d6a-5699-a9e4-95c1359a9602\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarScreenDescription\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Screen Description\&quot;,\&quot;UniqueId\&quot;:\&quot;e1fb40fb-8dab-2ab3-39c2-f2ab9a946c5d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateAllow\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;f301dca0-1ee1-80ee-1d9f-a3e07421f6ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateDeny\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;ee88b10e-7e7c-fbc9-f462-94c91832d324\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateUndefined\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Undefined\&quot;,\&quot;UniqueId\&quot;:\&quot;ed677402-f552-a200-aaa0-7d6577da0a50\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDAccess\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Access\&quot;,\&quot;UniqueId\&quot;:\&quot;d18a6019-01ad-234f-3185-bdc37bbfd897\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDUpdate\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Update\&quot;,\&quot;UniqueId\&quot;:\&quot;5e9a6629-075b-d644-efde-596c20361b91\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDCreate\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create\&quot;,\&quot;UniqueId\&quot;:\&quot;4eaec302-5fd2-4262-3029-3842239b0298\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDDelete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;ac4baf7f-7e14-c5e3-0c75-83bc9b91bbd3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;cd93eeb4-e546-4f66-3de7-f02a70009d51\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;authorizationDefaultModule\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;3616b6f7-edc4-0557-b6cd-32da5fbad409\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuDefault\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;3b75f5a4-a131-b58b-2c15-336c40d6619b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuModules\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Modules\&quot;,\&quot;UniqueId\&quot;:\&quot;3866d6a9-db33-5b47-27e0-e9891170bfdb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuScreenAuthorizations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Screen Authorizations\&quot;,\&quot;UniqueId\&quot;:\&quot;c9d23bfe-568c-fb1c-5828-638ec5965996\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultApplicationPermission\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Permission\&quot;,\&quot;UniqueId\&quot;:\&quot;ee64e8e7-b787-4f38-89ce-95a0fb24458a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationGeneralCategory\&quot;,\&quot;LocalizedValue\&quot;:\&quot;General\&quot;,\&quot;UniqueId\&quot;:\&quot;e6a72728-302c-3c88-e5af-f97385394aa1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultCustomPermissionDefaultState\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom Permission Default State\&quot;,\&quot;UniqueId\&quot;:\&quot;523a1a65-c1ff-d02d-4f32-edb9a6a3da50\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultWorkspaceScreenDefaultPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Screen Default Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;86f9f4de-caeb-f7d5-ea88-e94d0616324c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationAccess\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Access\&quot;,\&quot;UniqueId\&quot;:\&quot;df140867-4814-2922-c40e-c0a6b1e5cc7b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefault\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;e92f8739-7b25-8247-0038-7124b82f6386\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationModulesModulePermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Module Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;23659336-eb79-f8e0-da74-10248eadf57f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationModulesWorkspaceScreenDefaultPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Screen Default Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;74576e41-d9a8-7846-2643-4317c556da75\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;Authorize Everything Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Authorize Everything\&quot;,\&quot;UniqueId\&quot;:\&quot;9c0058fe-4a50-0a26-d3fd-140bbac10a46\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;Authorize Everything Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to authorize every application and screen.\&quot;,\&quot;UniqueId\&quot;:\&quot;a72e019c-e4a6-37f2-4c77-ec1fc9a7dec2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;No Inherited Permissions Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No inherited permissions.\&quot;,\&quot;UniqueId\&quot;:\&quot;ee13a0d7-89cd-a55c-eee7-8b12decb2173\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Old Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old\&quot;,\&quot;UniqueId\&quot;:\&quot;efadc7bf-5472-5eca-52aa-79d24d38ae97\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;New Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New\&quot;,\&quot;UniqueId\&quot;:\&quot;8d295d25-5e8e-d13d-2258-cfe3396bfe8b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Loading Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to load properties.\&quot;,\&quot;UniqueId\&quot;:\&quot;60e4c8f7-f42a-c15b-5b9d-499e66a0e592\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Select Property Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select Property\&quot;,\&quot;UniqueId\&quot;:\&quot;27917c35-c293-ef07-ea66-e41e2087c610\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Collection Property Root Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Collection\&quot;,\&quot;UniqueId\&quot;:\&quot;af79becb-7c02-6be7-4246-bf227b47368a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;PrintStationLogDownloadMessages\&quot;,\&quot;Key\&quot;:\&quot;Logs downloaded successfully\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logs downloaded successfully for {0} \&quot;,\&quot;UniqueId\&quot;:\&quot;6ec980af-3ef0-1a56-5a68-f814d4af6560\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;PrintStationLogDownloadMessages\&quot;,\&quot;Key\&quot;:\&quot;Logs download failed\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logs download failed for {0} \&quot;,\&quot;UniqueId\&quot;:\&quot;4b96418a-c43f-51ff-5a6c-681b61be73ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;MethodToCallParameters\&quot;,\&quot;Key\&quot;:\&quot;DateParameterPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enter Date\&quot;,\&quot;UniqueId\&quot;:\&quot;96ae9b5a-eb5a-1a38-6c0a-c0230d2b5d14\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;MethodToCallParameters\&quot;,\&quot;Key\&quot;:\&quot;TimeParameterPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enter Time\&quot;,\&quot;UniqueId\&quot;:\&quot;6e2fd41e-8fce-1bd9-3a8c-23b601a8a969\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;2b718620-dad2-dbe0-7e41-071f4a8487dc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Image\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Image\&quot;,\&quot;UniqueId\&quot;:\&quot;c6fb0de4-9969-be2a-20ca-06fe1aa54f46\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.JavaScript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;JavaScript\&quot;,\&quot;UniqueId\&quot;:\&quot;776cee9a-19c1-d2e8-6247-4619b42f839f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.CascadeStyleSheet\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CascadeStyleSheet\&quot;,\&quot;UniqueId\&quot;:\&quot;9c0e5e94-8f64-974e-e2c4-6fe3ff862324\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Html\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Html\&quot;,\&quot;UniqueId\&quot;:\&quot;5e9d1287-f697-f0af-05b0-cd5baf536eb8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;e1636497-0c0a-ba84-5191-53795326081d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.ScheduleServer\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Schedule Server\&quot;,\&quot;UniqueId\&quot;:\&quot;995da537-b08b-c0f5-ed8f-3f88e827016a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.AlertsDeliverer\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts Deliverer\&quot;,\&quot;UniqueId\&quot;:\&quot;98e3c13a-3786-688e-95b1-5c754b94cdd3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.Agent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Agent\&quot;,\&quot;UniqueId\&quot;:\&quot;baed44c9-57f4-694d-190a-73e80a57b489\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.PrintManager\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print Manager\&quot;,\&quot;UniqueId\&quot;:\&quot;4dd56abd-44db-0406-23ee-1c55ad055794\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.PrintStation\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print Station\&quot;,\&quot;UniqueId\&quot;:\&quot;42714b99-d330-1078-ff9e-f0ddc94403cb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;503d2ccd-9717-5c1c-1686-1ba36e422fdf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.OnDemandAndPersist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On Demand And Persist\&quot;,\&quot;UniqueId\&quot;:\&quot;1d11eccb-85c4-65ed-1eca-e90c18187706\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.OnDemandAndDispose\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On Demand And Dispose\&quot;,\&quot;UniqueId\&quot;:\&quot;6c0d50d5-114a-bf46-49a4-15301e33448d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Inherit\&quot;,\&quot;UniqueId\&quot;:\&quot;0c23d2b7-bf26-435a-f544-a48c6788105b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Deny\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;7cb16bdc-490d-1ea4-f315-9f8d30bc7115\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Allow\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;f6720c6b-8c34-3895-0805-14e452b16dad\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-84" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Users.UsersListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-83" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Users.UsersEditRolesListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-85" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Users.UsersListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-86" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Roles.RolesListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-82" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Users.UsersListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-89" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.AccountRequests.AccountRequestsListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-87" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Roles.RolesListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-88" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.Roles.RolesListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-90" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.AccountRequests.AccountRequestsListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-91" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.AccountRequests.AccountRequestsListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-92" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-93" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-95" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksEditJobsListItemTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-94" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-96" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksEditJobsListItemHeaderTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-97" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.ScheduledTasks.ScheduledTasksEditJobsListItemContentTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-98" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.PrintLabelTemplates.PrintLabelVersionsTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-99" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/Screens.PrintLabelTemplates.PrintLabelAttributesTemplate.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-103" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Help Menu Item\&quot;,\&quot;Key\&quot;:\&quot;Körber One Administration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One Administration\&quot;,\&quot;UniqueId\&quot;:\&quot;16b6420a-afbc-addc-0bed-2b658bb4e05f\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-102" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27SCA%20inMotion%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-100" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27HighJump%20One%20Platform%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-105" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetSystemConfiguration?configurationId=%27TenantConfiguration%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-104" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-101" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27Supply%20Chain%20Advantage%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-108" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27SCA%20inMotion%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-112" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionAnswerModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-107" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27SCA%20inMotion%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-111" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-110" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-113" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27Supply%20Chain%20Advantage%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-114" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27Supply%20Chain%20Advantage%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-115" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Menu.ashx</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-106" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Settings.ashx/GetHelpLinks</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-117" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Settings.ashx/GetHelpLinks</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-118" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/VideoSourceModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-116" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Menu.ashx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Login_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="555849630">K.Motion Slotting Advantage</stringProp>
                <stringProp name="-134013839">K.Motion User Management</stringProp>
                <stringProp name="2058195937">JSON Interface</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-121" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/HomePage/HomePage.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-119" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27HighJump%20One%20Platform%27&amp;configurationId=%27Favorites%27&amp;configurationType=%27favorites%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-122" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27home%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-123" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27HighJump%20One%20Platform%27&amp;configurationId=%27_hj_one_quicklinks%27&amp;configurationType=%27quicklinks%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-125" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T03_ClickOnMenu" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-129" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657391561032</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken2" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken2</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-128" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657391656917</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-127" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T04_SelectSupplyChainAdvantage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SuppluChain-134" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657391716904</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SuppluChain-136" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657391561033</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken3" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken3</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SuppluChain-135" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T05_K.MotionAdv" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="KM-140" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="transport" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">transport</stringProp>
                  <stringProp name="Argument.value">longPolling</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionToken</stringProp>
                  <stringProp name="Argument.value">${C_ConnToken3}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657391561034</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/start</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T06_SelectInventory" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectInventory-143" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657391776902</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectInventory-145" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657391561035</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectInventory-144" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T07_SelectLocation" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectLocation-150" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/Settings.ashx/Application</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectLocation-151" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/Settings.ashx/Application</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectLocation-152" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/SearchPage.ashx?id=1044</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectLocation-153" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">1044</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/SearchPage.ashx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Location_Page_check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1093860510">Warehouse 01</stringProp>
                <stringProp name="-1878661148">Leeds LFC</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectLocation-154" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RegisterChildSession?applicationId=%27Supply%20Chain%20Advantage%27&amp;connectionType=%27platform%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectLocation-156" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/reset.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SelectLocation-155" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/resources/HighJump%20One%20Platform/query.svg</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">image</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T08_ClickOnQuery" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-157" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27WAAdvantageDashboard%27&amp;configurationId=%2761%27&amp;configurationType=%271%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-158" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/ReportPage.ashx?id=61&amp;WH_ID=esek33&amp;Location_ID=%25&amp;Location_Type=%25</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,content-type,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-159" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/ReportPage.ashx?id=61&amp;WH_ID=esek33&amp;Location_ID=%25&amp;Location_Type=%25</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Query_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-569666862">Pickup &amp; Delivery</stringProp>
                <stringProp name="466067767">License Plate Controlled</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-160" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: settings\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Column Settings\&quot;,\&quot;UniqueId\&quot;:\&quot;f46f1296-0666-9ce8-6466-172c03e332c3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: first\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Page\&quot;,\&quot;UniqueId\&quot;:\&quot;f2e96fa3-5d4f-1c15-768c-f5b2595286e5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: last\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Page\&quot;,\&quot;UniqueId\&quot;:\&quot;6bfef488-9395-5742-2429-afb86f7d91b1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: next\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next Page\&quot;,\&quot;UniqueId\&quot;:\&quot;e9688544-a1c5-da4f-4f43-0e0f4b8dded0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: previous\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Previous Page\&quot;,\&quot;UniqueId\&quot;:\&quot;574586a1-bed2-0744-700b-413316b4adb0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: refresh\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh\&quot;,\&quot;UniqueId\&quot;:\&quot;27bdc482-a18d-7121-5dbc-27b72baf9baf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: morePages\&quot;,\&quot;LocalizedValue\&quot;:\&quot;More Pages\&quot;,\&quot;UniqueId\&quot;:\&quot;299ed0bf-1d7d-343e-24e2-0c20e4171fbb\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-161" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657391836764</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-163" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657391561036</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-162" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="IS_Location_T09_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-168" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LogOffRequest?sessionId=guid%27cad1f29e-2e69-4c25-b5a2-e60401f6e3b1%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-169" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Default.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-170" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/hubs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-171" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657391853297</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-172" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetLogOnConfiguration?key=%27iislbha.kscnp-nprd.iaas.js-alz.com%27&amp;isWorkspace=false&amp;languageId=%27%27&amp;logOnParameters=%27%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Logout_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1896168782">All Rights Reserved</stringProp>
                <stringProp name="-1793469238">Tenant</stringProp>
                <stringProp name="-1085510111">Default</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">300</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="KO6_UI_InventorySearch_Location" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T01_Launch" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657400305868</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/hubs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Launch-3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetLogOnConfiguration?key=%27iislbha.kscnp-nprd.iaas.js-alz.com%27&amp;isWorkspace=false&amp;languageId=%27%27&amp;logOnParameters=%27%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T02_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-4" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657400328884</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-5" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;applicationId&quot;:&quot;HighJump One Platform&quot;,&quot;tenant&quot;:&quot;&quot;,&quot;userLogOnName&quot;:&quot;TCSTAJAR&quot;,&quot;userPassword&quot;:&quot;new12345&quot;,&quot;connectionType&quot;:&quot;platform&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LogOn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AuthTicket1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_AuthTicket1</stringProp>
              <stringProp name="RegexExtractor.regex">SerializedAuthenticationTicket&quot;:&quot;(.*?)&quot;,&quot;SSOProviderId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_VerificationToken1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_VerificationToken1</stringProp>
              <stringProp name="RegexExtractor.regex">RequestVerificationToken&quot;:&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Login_Credentials" enabled="true">
              <stringProp name="delimiter">,</stringProp>
              <stringProp name="fileEncoding">UTF-8</stringProp>
              <stringProp name="filename">C:/Ajith/TestData/VNP_TD/Koerber/LoginData3.csv</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="variableNames">UserName,password</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-6" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket1}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_AuthTicket2" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_AuthTicket2</stringProp>
              <stringProp name="RegexExtractor.regex">SerializedAuthenticationTicket&quot;:&quot;(.*?)&quot;,&quot;SSOProviderId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-8" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657400305502</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken1</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-7" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetTenantConfiguration</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-9" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;About\&quot;,\&quot;UniqueId\&quot;:\&quot;5bb23706-d3fd-7243-1b04-1726c9213a03\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;7f46cf5a-f6ce-da81-24d5-3d5acd34863e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Middle Tier Version Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Middle Tier Version\&quot;,\&quot;UniqueId\&quot;:\&quot;fc9c522a-2605-ec2f-0fb9-03aab3467d35\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Version Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Version\&quot;,\&quot;UniqueId\&quot;:\&quot;d48acad0-2682-fc82-3fa1-159b41c4c4b1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;License Version Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;License Version\&quot;,\&quot;UniqueId\&quot;:\&quot;cb700f6a-6067-e3d5-8b13-82406081f117\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: About Dialog\&quot;,\&quot;Key\&quot;:\&quot;Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;5af94762-6626-b0b8-6218-4ebdcc97c991\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Change Password Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change Password\&quot;,\&quot;UniqueId\&quot;:\&quot;588d2dec-ae70-1a74-596a-f55f27db6ba1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving Security Question Answers Successed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Security answers have been updated successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;a3eaa1ba-695d-e9da-005f-b995f013d532\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Confirm Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Confirm Password\&quot;,\&quot;UniqueId\&quot;:\&quot;e634e42c-605c-6aec-74d5-dbe566fa12e4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save User Interface Settings Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;1d383e1e-5715-8659-b6f6-55f972dee926\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Last Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;ace674d1-c9d6-6c2f-7d3f-c63026d5e724\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Auto-Hide Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto-Hide Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;dd41b10d-d6e9-025a-892e-ef0535d388d4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Force Security Questions Number Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get force security questions number.\&quot;,\&quot;UniqueId\&quot;:\&quot;45c133f2-114f-aac2-ee74-3975b90d8c8c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Change Password Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change\&quot;,\&quot;UniqueId\&quot;:\&quot;853f1fa4-fa77-8b8c-eefc-31235816de99\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View On Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On\&quot;,\&quot;UniqueId\&quot;:\&quot;7ef52d90-a590-6b06-5ce6-f70fdfbac04d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Changing Password Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to change the password.\&quot;,\&quot;UniqueId\&quot;:\&quot;f66be4ea-6c33-a28b-a9d7-6a67691877f7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving General Information Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User information has been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;27bd4c2a-c5c0-e316-9aa9-aef18ca605a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;New Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Password\&quot;,\&quot;UniqueId\&quot;:\&quot;a4e3ab65-ac5b-d108-27be-225e9abe2e22\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Logout Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;1021655a-2e23-8149-e28f-f5b9ec04ca41\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Check Force Security Questions Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to check user security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;0c88d604-a602-808d-e43b-e89d115b3ea6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Allow Email Html Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Use HTML Email\&quot;,\&quot;UniqueId\&quot;:\&quot;d9dd3459-3572-c5fb-9d57-d2e3982acc60\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Phone Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone #\&quot;,\&quot;UniqueId\&quot;:\&quot;88af991b-4dd1-22ba-9a55-44be68b13f7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Auto Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto\&quot;,\&quot;UniqueId\&quot;:\&quot;c5a0206e-76fe-37b7-e830-8eb6b4e6ce54\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Configure User Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configure User\&quot;,\&quot;UniqueId\&quot;:\&quot;112b269b-66e5-a586-fdf0-e314ed331aec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Settings Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Settings\&quot;,\&quot;UniqueId\&quot;:\&quot;21803062-4168-ad1b-9a0d-9ff54518a13c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable to Logout Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to logout.\&quot;,\&quot;UniqueId\&quot;:\&quot;69785d6c-baa6-0d2d-69e4-337491bc8485\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Off Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Off\&quot;,\&quot;UniqueId\&quot;:\&quot;b54b7c9a-e434-3381-5184-a80137aad104\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving General Information Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save information into user profile.\&quot;,\&quot;UniqueId\&quot;:\&quot;723d8828-6115-e649-e913-fff4e3c846d7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Email Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;2177ea57-da89-0830-97c4-86d83a1e7eee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Force Security Questions Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Answer {number} or more security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;7047dbbb-9f0d-41aa-0843-55ced2bd3c8b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Security Questions Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get security questions.\&quot;,\&quot;UniqueId\&quot;:\&quot;55d8bb1e-4554-4384-bd0f-335b073299fe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save Security Question Answers Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;fe609c88-d08f-ac53-7130-8abffcba9af9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Confirm Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot; Confirm password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;a1a6a8c7-5899-3e0b-8ff1-7eedb33c2ec8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Condensed View Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Condensed View\&quot;,\&quot;UniqueId\&quot;:\&quot;84dd0170-6398-44a8-2623-19827379bc6d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Save General Settings Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;df1e4314-6cac-7181-bb50-2411788afd5e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Get Security Question Answers Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to get security question answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;eeb8445a-e37d-4cea-a348-ff5d397b62f2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty Old Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;cf1f12aa-e236-8c28-9fbb-97655f18a445\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Old Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old Password\&quot;,\&quot;UniqueId\&quot;:\&quot;aaf6c0d4-7565-4701-f2e5-8a5a1a48ad3b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Initializing Security Questions And Answers Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to initialize security questions and answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;68e5cb00-5d39-405f-b834-971b2cb75593\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unmatched Passwords Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The passwords you entered do not match.\&quot;,\&quot;UniqueId\&quot;:\&quot;84072421-2cee-6f08-2316-a117d63613b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;General Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;General\&quot;,\&quot;UniqueId\&quot;:\&quot;f375ee0c-3d8a-a631-3ded-87e63c120a78\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;First Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;4cfe949a-b9c2-2792-29bb-7bb919aa8f13\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Empty New Password Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New password cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;920f7d44-c048-3a97-f879-c55467f884bf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;User Interface Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Interface\&quot;,\&quot;UniqueId\&quot;:\&quot;f895dece-7eab-67c3-31ff-b76f51df3c3d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Email Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;f5b58f2b-b88e-6839-970f-59b407f7c650\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving User Interface Settings Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User interface settings have been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;0d8cf13a-e1aa-ffd7-21a0-fd9b6896a551\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Failed To Update Question Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to update question:\&quot;,\&quot;UniqueId\&quot;:\&quot;7abc7867-a9c5-9777-9b2b-9290390c1417\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Security Questions Panel and Popup Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Security Questions\&quot;,\&quot;UniqueId\&quot;:\&quot;2cf2af1d-c97b-ebb9-5ba8-bd7c5395c9b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving Security Question Answers Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to update security question answers.\&quot;,\&quot;UniqueId\&quot;:\&quot;5df2dda2-3bee-8e6b-e997-2d1f2bae63f3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Alerts Subscriptions Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;7319b962-f342-4b57-3fd0-597fc76df217\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Quick Links Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;30164591-2b1e-5db8-7583-b4ddb972cdcf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Saving User Interface Settings Failed Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save user interface settings.\&quot;,\&quot;UniqueId\&quot;:\&quot;70aabd78-365a-3bff-8ca6-939428e17324\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Changing Password Successed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password has been changed successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;ce7c8ad4-8052-46cd-626a-dc584b192f52\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Cancel Security Question Answers Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;e9ba9981-9ef6-e078-a85f-79bef90bff9f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Applications Panel Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Applications\&quot;,\&quot;UniqueId\&quot;:\&quot;2c307afa-59aa-f519-f1e7-eb0810f4f171\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application User Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application user menu.\&quot;,\&quot;UniqueId\&quot;:\&quot;a91e2c90-ad37-b629-586c-feb8c9647678\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;Application User Menu Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;22763166-f375-6630-f677-0c4e746e9ee2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: User Account Menu\&quot;,\&quot;Key\&quot;:\&quot;User Menu Not Found Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Menu [{0}] was not found. Full Path: {1}\&quot;,\&quot;UniqueId\&quot;:\&quot;c84c6a94-1df8-bd43-dc9a-c612b4a79aeb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Add Favorite Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add Page Favorite\&quot;,\&quot;UniqueId\&quot;:\&quot;f8fbd321-b969-59ea-b99a-47f01d355e3b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Add Page Quick Link Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add Page Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;3166eb2b-d5a1-53f3-78b8-5338399f6329\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Copy Page URL Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy Page URL\&quot;,\&quot;UniqueId\&quot;:\&quot;d56af328-54af-fd70-b872-2273f9190a2b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;34dcd2eb-bd46-d6e1-ebb3-d2c41cd0f694\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Open Page In New Window Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Open Page In New Window\&quot;,\&quot;UniqueId\&quot;:\&quot;539a3349-6712-ca50-e4fc-afa0c4251a8f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;4f2f68df-be8f-586b-3ec2-939e8ffa3825\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Display Unread Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unread\&quot;,\&quot;UniqueId\&quot;:\&quot;48c4d50d-7b3c-5b78-9f80-e958fa25e03d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Sort By Date Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;By Date\&quot;,\&quot;UniqueId\&quot;:\&quot;cd903b50-05a1-4664-90fd-bcb1352bb340\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;b9b78838-9483-9c30-4dab-68c1058763b9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete this Alert?\&quot;,\&quot;UniqueId\&quot;:\&quot;fa164964-7ede-4b02-848e-7600e7dce43b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Alerts Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;85ff07cd-8c38-43dc-dae2-c9a65843281d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alert\&quot;,\&quot;UniqueId\&quot;:\&quot;ef2f7adb-4e17-a7f2-87e0-a44d377f2dfd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Display All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;All\&quot;,\&quot;UniqueId\&quot;:\&quot;7d396b9b-6242-2850-d2d1-a39bedbfaeba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;53b21ed9-6855-c1ac-a411-bf3fc62d9a14\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;No Alerts Available Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No Alerts Available.\&quot;,\&quot;UniqueId\&quot;:\&quot;c1369946-e290-67cb-052b-104d915828ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Dialog Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;2c0c0b70-a998-2629-714c-e7e91a5c8f85\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Alerts\&quot;,\&quot;Key\&quot;:\&quot;View All Alerts Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;View All Alerts\&quot;,\&quot;UniqueId\&quot;:\&quot;10809ef7-79dc-60e6-e450-991a45e383b0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get External Reference Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get external reference\&quot;,\&quot;UniqueId\&quot;:\&quot;6c81c59a-832e-3154-4ece-a742a6a05ed6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sign In\&quot;,\&quot;UniqueId\&quot;:\&quot;b9fa6ea3-5279-029a-993d-5ce5a76b96d8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Login Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Login\&quot;,\&quot;UniqueId\&quot;:\&quot;2b74c02a-07ab-4d17-4fa9-2ec616a5fabd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Windows Authentication Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Windows Authentication\&quot;,\&quot;UniqueId\&quot;:\&quot;f5f33159-f267-b422-5348-54a9cfef24dd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Workspace Authentication Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Authentication\&quot;,\&quot;UniqueId\&quot;:\&quot;280fd969-5097-d56e-df58-614fb89fd4d7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Re-enter Password Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please re-enter your password\&quot;,\&quot;UniqueId\&quot;:\&quot;b948bd81-1f1d-e83d-6c72-09941867d6d6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Login Using External Reference Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to login using external reference\&quot;,\&quot;UniqueId\&quot;:\&quot;83c38def-7105-33d5-0b74-3df373476c12\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Login With Different Account Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sign in with a different account\&quot;,\&quot;UniqueId\&quot;:\&quot;1abddcc5-37cc-dabc-b922-d7289445fa35\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;User Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;aa28910e-fcf1-b585-72bf-a44866fab5d1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password\&quot;,\&quot;UniqueId\&quot;:\&quot;91012d0a-2bf4-53b8-365e-5f19dbc79b8c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Tenant Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Tenant\&quot;,\&quot;UniqueId\&quot;:\&quot;01717fd9-43d4-f132-66b3-6e48d72aade4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Email Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;9991ba50-fa1c-b569-2c96-3c9e9ae0cc98\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;acc49835-6c32-a4b4-d11c-68234a85cdef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Last Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;9a7dfe03-cb0b-4037-7043-5c4291014854\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Phone Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone #\&quot;,\&quot;UniqueId\&quot;:\&quot;efccea1d-48ce-426c-c161-5acccb3a1885\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Desired Log On Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Desired Log On Name\&quot;,\&quot;UniqueId\&quot;:\&quot;0f12b40a-04da-c981-49b3-ce84f083817b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Confirm Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Confirm Password\&quot;,\&quot;UniqueId\&quot;:\&quot;7b3ce384-fd22-24ed-472d-a582f5c5949f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Reset Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;d96826d7-64fc-ec90-b99e-6a089891528b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Or Sign In Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Or Sign In With:\&quot;,\&quot;UniqueId\&quot;:\&quot;58890ef3-6a2c-9954-c6a5-25e8a8def208\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;3b0870aa-8950-dc35-16e2-4d49db885088\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookie Policy Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cookie Policy\&quot;,\&quot;UniqueId\&quot;:\&quot;474c5714-dc97-1a80-41e8-cfb47a334759\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Policy Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Privacy Policy\&quot;,\&quot;UniqueId\&quot;:\&quot;30f40953-5add-0220-e2c9-eb11f9f1b483\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Forgot Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;30b7bc57-bbda-6ae5-8ff2-3c093c0b9410\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request Account Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request Account\&quot;,\&quot;UniqueId\&quot;:\&quot;a3bdce20-79a8-7bcc-fe19-78480d51f915\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request New Account Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request new account\&quot;,\&quot;UniqueId\&quot;:\&quot;a21e60a2-2fb4-6d01-e1f5-62d8fd64be66\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Request New Account Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Request new account\&quot;,\&quot;UniqueId\&quot;:\&quot;37928856-2091-5fd4-8917-233c7ae87da6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Reset Password Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Password\&quot;,\&quot;UniqueId\&quot;:\&quot;a3c29ca0-96f7-9e9f-fd2e-2390a69b539a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Back Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;829da9b2-5cf0-70f1-f3a0-0c5b454207d4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Default Language Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;2d0f3d37-8231-9bd4-4792-edd1080e319b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Account Request Submitted Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Account request has been submitted.\&quot;,\&quot;UniqueId\&quot;:\&quot;b31da5f9-78a4-7787-e1d5-f654e502d8f8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Reset Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password has been successfully reset. Please check your email.\&quot;,\&quot;UniqueId\&quot;:\&quot;08e39c18-c605-e057-b938-c6ef50f38c5f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Unable To Find Secret Question Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot find secret question.\&quot;,\&quot;UniqueId\&quot;:\&quot;6644171f-18bb-be5c-5a1f-f84955e45c2e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Platform URL placeholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Platform URL\&quot;,\&quot;UniqueId\&quot;:\&quot;718f1efc-c454-8bc0-d103-c0c91e2d4816\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Platform Location view title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One URL\&quot;,\&quot;UniqueId\&quot;:\&quot;4a05130a-485e-2038-1279-58202bba46e3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Empty Field Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Field cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;a13d3931-1d3f-5b2f-5ef2-8bc52d6530dd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Invalid Email Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email is not valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;1a9364d2-3e84-3812-af2a-2916eaa832f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Invalid Phone Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone is not valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;f1633569-1201-9a13-c142-c24452078864\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Short Password Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password is too short.\&quot;,\&quot;UniqueId\&quot;:\&quot;80ee9820-3563-23cf-2c42-c733d0105592\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Password Mismatch Error Message Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The passwords do not match.\&quot;,\&quot;UniqueId\&quot;:\&quot;9bd492cf-d5fb-553c-a1b8-f7df770a1c06\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber Supply Chain US, Inc. (“Körber,” “we,” “us”) has created this Privacy Statement (this “Statement”) to explain the types of personal information Körber collects as you navigate our sites and related services (collectively, the “Services”), how such information will be used, and the choices we offer you regarding our collection and use of such information.\&quot;,\&quot;UniqueId\&quot;:\&quot;0ee037b0-52e6-b256-b642-13d413d233ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;For the purposes of the General Data Protection Regulation, the data controller is Körber Supply Chain US, Inc., located at 5600 West 83rd Street, Suite 600 – 8200 Tower, Bloomington, MN 55437.\&quot;,\&quot;UniqueId\&quot;:\&quot;2e2c1117-7323-be9d-bdf0-13c184405e95\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Principles Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;I. Privacy Principles\&quot;,\&quot;UniqueId\&quot;:\&quot;95ecb758-1496-8a0a-6ea3-dbdfb6406f98\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Privacy Principles Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We follow the following principles in order to protect your privacy:\&quot;,\&quot;UniqueId\&quot;:\&quot;f4ff7658-bf89-93fa-38f5-7ae71b2eff38\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We do not collect any more personal information about you than is necessary or otherwise authorized by you;\&quot;,\&quot;UniqueId\&quot;:\&quot;fc7469bf-4bd0-c559-4a6a-3bfb6dd58ed8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We only use your personal information for the purposes we specify in this Statement, unless you agree otherwise;\&quot;,\&quot;UniqueId\&quot;:\&quot;711852ad-a9c9-5f6a-cbf1-d2264f17a05a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We do not keep your personal information if it is no longer needed; and\&quot;,\&quot;UniqueId\&quot;:\&quot;dacd2cbc-b7e9-6c44-180d-7ceae4f35e96\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Privacy Principles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Other than as we specify in this Statement, we do not share your personal information with third parties.\&quot;,\&quot;UniqueId\&quot;:\&quot;f5baaa12-ea7b-c1f6-2632-98735e1bc724\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Personal Information Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;II. Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;4e7a0a6c-b685-cf4d-58f9-7f40316e6dbe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Collected Information Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. Personal Information Collected\&quot;,\&quot;UniqueId\&quot;:\&quot;c6df495e-2d53-f1b5-4292-fb52cd7a7f45\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Collected Information Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Although most areas of the Services can be accessed without submitting any information that personally identifies you, some areas (such as registering for training with Körber University) require certain personal information from you. The types of personal information that we may collect from you may include, without limitation:\&quot;,\&quot;UniqueId\&quot;:\&quot;8e418c03-3449-90ee-34fa-871d23d46a46\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Collected Information\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contact information, such as name, postal address, email address, and phone number; or\&quot;,\&quot;UniqueId\&quot;:\&quot;c8b8a1bf-3146-0fb4-2f9a-9bacf2f1afd8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Collected Information\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Demographic information, such as age, date of birth, gender, job information, and postal code.\&quot;,\&quot;UniqueId\&quot;:\&quot;16a06d97-bc4f-e6b0-c8cd-1cc46ad7b63c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Legal Basis\&quot;,\&quot;UniqueId\&quot;:\&quot;92e40261-35c1-df9b-e305-c2883e5f8d74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Our legal basis for collecting and using the personal information described above will depend on the personal information concerned and the specific context in which we collect it.\&quot;,\&quot;UniqueId\&quot;:\&quot;34e4e435-5428-10bd-5504-226bae9af95f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Legal Basis Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;However, we will normally collect personal information from you only where we have your consent to do so, where we need the personal information to perform a contract with you (for example, when providing the Services), or where the processing is in our legitimate interests and not overridden by your data protection interests or fundamental rights and freedoms. In some cases, we may also have a legal obligation to process personal information about you or may need to process personal information in order to exercise, establish, or defend legal claims.\&quot;,\&quot;UniqueId\&quot;:\&quot;ca0f6063-9f73-dbf7-c3a1-1f2ddb29170f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. How We Use Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;86cac13c-282d-e0eb-9068-3c7d512fb1d2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may use information we obtain about you to:\&quot;,\&quot;UniqueId\&quot;:\&quot;963e66ae-9113-76ac-577b-98a0ca16bc18\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Firs tUse Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Process orders you place and complete other transactions you have requested using the Services, and provide you with products and services you request;\&quot;,\&quot;UniqueId\&quot;:\&quot;dc47c882-39e9-745f-9765-88e57ccea1a4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send you information or materials you request;\&quot;,\&quot;UniqueId\&quot;:\&quot;8bea66c0-7e5e-3512-1740-19c5e9aeb501\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maintain a record of your purchases and other transactions using the Services;\&quot;,\&quot;UniqueId\&quot;:\&quot;9c093ac5-4779-da65-c866-7226a0ac8e5f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;fourth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Respond to your questions and comments and provide customer support;\&quot;,\&quot;UniqueId\&quot;:\&quot;50d1ca70-1840-27d0-dd0a-ef2ba02d90ca\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;With your consent, communicate with you about our products, services, offers, and promotions;\&quot;,\&quot;UniqueId\&quot;:\&quot;a5d1f9b1-e093-fdca-eed6-cf574ba2728b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Operate, evaluate, and improve our business and the products and services we offer;\&quot;,\&quot;UniqueId\&quot;:\&quot;e5e6d281-4e9e-53c1-99d7-3c65ec95a677\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Seventh Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Analyze and enhance our marketing communications and strategies;\&quot;,\&quot;UniqueId\&quot;:\&quot;29d47cb9-8b7a-909c-7c82-4fbc0c5f87f7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Eighth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Analyze trends and statistics regarding use of the Services and transactions conducted using the Services;\&quot;,\&quot;UniqueId\&quot;:\&quot;2f9798be-ea06-df93-e684-30462451c051\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Ninth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Protect against and prevent fraud, unauthorized transactions, claims, and other liabilities, and manage risk exposure, including by identifying potential hackers and other unauthorized users;\&quot;,\&quot;UniqueId\&quot;:\&quot;c50bc80f-0f89-c1dd-b4d7-50fc37398b18\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Tenth Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enforce our {0} and other agreements; and\&quot;,\&quot;UniqueId\&quot;:\&quot;0a181713-777b-ec94-cd42-11608c0eee6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Eleventh Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Comply with applicable legal requirements and industry standards.\&quot;,\&quot;UniqueId\&quot;:\&quot;351c7ae8-e10b-2cb0-abe3-02ffdb66f523\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Details Use Terms\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may combine the information we collect with publicly available information and information we receive from our parent, affiliate, or subsidiary companies, business partners, and other third parties.\&quot;,\&quot;UniqueId\&quot;:\&quot;bce27b98-a2d9-ed8a-c2f6-c9b929be183b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Use Terms Conclution\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We also may use the information we obtain about you in other ways for which we provide specific notice at the time of collection.\&quot;,\&quot;UniqueId\&quot;:\&quot;e951edce-524a-7325-ac41-b62ec8f7566d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;D. How We Disclose Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;de3beb75-282c-8c7d-ab7a-4cba789c33f7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We may disclose aggregated information about our user, and information that does not identify any individual user, without restriction. We may disclose personal information about you:\&quot;,\&quot;UniqueId\&quot;:\&quot;b1979ac4-9c5d-26aa-3a90-022e2bbb0f1a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To contractors, service providers, and other third parties we use to support our business and who are bound by contractual obligations to keep personal information confidential and use it only for the purposes for which we disclose it to them;\&quot;,\&quot;UniqueId\&quot;:\&quot;6980def1-891b-3396-5e7f-e17d294329fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To comply with any court order, law, or legal process, including to respond to any government or regulatory request;\&quot;,\&quot;UniqueId\&quot;:\&quot;b455bf86-8722-0434-4dce-78fd010f3b97\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To enforce or apply our {0} and other agreements;\&quot;,\&quot;UniqueId\&quot;:\&quot;4f313807-8420-1b94-2322-e9d015e0df65\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If we believe disclosure is necessary or appropriate to protect the rights, property, or safety of Körber, users of the Services, or others; and\&quot;,\&quot;UniqueId\&quot;:\&quot;b0dcd30c-bedf-b237-80b3-071d3851080c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Disclose Term\&quot;,\&quot;LocalizedValue\&quot;:\&quot;With your consent.\&quot;,\&quot;UniqueId\&quot;:\&quot;d7e56ade-ac0f-2c87-9d93-7fccbc3d311b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Information Disclose Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We also reserve the right to transfer your personal information to a buyer or other transferee in the event of a merger, divestiture, restructuring, reorganization, dissolution, sale, or other transfer of some or all of our assets. Should such a sale, merger, or transfer occur, we will use reasonable efforts to direct the transferee to use your personal information in a manner that is consistent with our Statement.\&quot;,\&quot;UniqueId\&quot;:\&quot;acdf0d1a-5b47-aa97-6b76-7139b1ba5503\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;E. Data Security and Retention\&quot;,\&quot;UniqueId\&quot;:\&quot;c20d6431-9971-e9d5-5ed0-ce0bae3314d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We have implemented measures intended to protect your personal information from accidental loss and from unauthorized access, use, alteration and disclosure. Please note that the electronic transmission of information is not completely secure. We cannot guarantee that the security measures we have in place to safeguard personal information will never be defeated or fail, or that such measures will always be sufficient or effective. Any transmission of personal information is at your own risk.\&quot;,\&quot;UniqueId\&quot;:\&quot;e6205e2d-2ca0-fac9-10eb-1db4c9a085eb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Data Security Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;We will retain your information for as long as your account is active or as needed to for our internal purposes. You may request to delete your account information by contacting us at {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;a7b076fd-ae85-3981-0d31-2008bbd2ae30\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Storage Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;F. Where We Store your Personal Information\&quot;,\&quot;UniqueId\&quot;:\&quot;cfc9d4f2-26a7-a2a5-614e-ef1071a96a6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Storage Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The data we collect from you may be transferred to and stored at a destination outside of the European Economic Area (“EEA”). It may also be processed by staff operating outside of the EEA who works for us, one of our group companies or our suppliers for the purposes set out in this Statement. In order to ensure that any third party processes your personal data in a way which is consistent with the EU&apos;s laws on data protection, to the extent that we share data outside of the EEA, we will seek to put in place agreements with those third parties, including with our group companies, which contain provisions approved by the EU for protecting personal data.\&quot;,\&quot;UniqueId\&quot;:\&quot;b4750d49-02ce-598e-bc94-fe14e4312cb4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Rights And Choices Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;G. Your Rights and Choices\&quot;,\&quot;UniqueId\&quot;:\&quot;48764c21-c1f3-30db-cf71-688de7256dd3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Rights And Choices Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have the following rights and choices about the personal information we collect from you via the Services and how we communicate with you:\&quot;,\&quot;UniqueId\&quot;:\&quot;c6494ddc-9439-d56a-1047-d88411029b8c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Access. \&quot;,\&quot;UniqueId\&quot;:\&quot;dc653e38-efa6-3445-6443-00af1a41b523\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;First Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have the right to request a copy of any information that we hold about you. If you would like a copy of this information, please contact us by writing to us at the address or email address listed below. We may request proof of your identity before sharing such information with you.\&quot;,\&quot;UniqueId\&quot;:\&quot;8f1f09e2-31b5-c349-1cd1-e744dd8ae7e1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Rectify. \&quot;,\&quot;UniqueId\&quot;:\&quot;a87154d2-9ae4-3bde-d985-afd66bed0851\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Second Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you discover that the personal information we hold about you is incorrect or out of date, you may ask us to correct that information.\&quot;,\&quot;UniqueId\&quot;:\&quot;60c691a5-734a-c2f0-55ce-508c900d956d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to be Forgotten/Cease Processing. \&quot;,\&quot;UniqueId\&quot;:\&quot;ab2982dd-cc27-89ee-4d1e-ce54d826a6b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You may ask us to delete or cease processing the personal information we hold about you in certain circumstances. It may not be possible for us to delete or cease processing all the personal information we hold about you where we have an ongoing relationship, however please contact us and we will do our best to assist with your request.\&quot;,\&quot;UniqueId\&quot;:\&quot;f2c1b2cf-42e0-cad0-58d9-e5d13fcd924b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Withdraw Consent. \&quot;,\&quot;UniqueId\&quot;:\&quot;7234842a-42af-f01e-6efc-48bccbff27cf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fourth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Where we process your data on the basis that you have consented to such processing, you have the right to withdraw your consent at any time by unsubscribing or contacting us, as applicable.\&quot;,\&quot;UniqueId\&quot;:\&quot;e275448e-35a4-c038-7d09-6d5543ff9816\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Right to Portability. \&quot;,\&quot;UniqueId\&quot;:\&quot;22018039-840f-15cb-9c20-06748677c13c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Fifth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You may ask us to transfer your personal information to a third party in certain circumstances. If you would like any other information regarding this right, please contact us.\&quot;,\&quot;UniqueId\&quot;:\&quot;73973cd3-da9e-085e-3801-d7220948e3d7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Rights Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Promotional Communications. \&quot;,\&quot;UniqueId\&quot;:\&quot;31055e00-4ed6-4aed-0a9b-3eeab8b287f9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Sixth Rights Terms Detail\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you do not want us to use your email address/contact information to promote our products or services, you can opt out by sending us an email stating your request to {0}. If you have received a promotional email from us, you can also opt out of receiving future promotional emails from us by following the unsubscribe instructions contained in such email.\&quot;,\&quot;UniqueId\&quot;:\&quot;fcad7e9d-36ad-eee5-abed-3ec3a59dec71\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;III. Cookies and Automatic Tracking\&quot;,\&quot;UniqueId\&quot;:\&quot;c0ad399d-a44e-8f82-31ef-00aaff3734d5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Terms Of Use Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. How We Use Cookies\&quot;,\&quot;UniqueId\&quot;:\&quot;699b8b4e-1ec7-9910-31be-128df9b383ad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Cookies Terms Of Use Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot; When you use the Services, we may also collect certain information with cookies. The information collected automatically using a cookie is not personal information. A “cookie” is a text file that websites send to a visitor’s computer or other Internet-connected device to uniquely identify the visitor’s browser or to store information or settings in the browser. Cookies may be used for, but are not limited to use for, the following: (i) enable website functionality and remember browser settings; (ii) collection of aggregate information to compile statistics about Körber’s website usage, including the use of third-party analytics tools (such as Google Analytics); and (iii) to serve ads through third-parties when you visit other websites after you visit our website (“Behavioral Advertising Networks”). For more information about the specific types of cookies, how we use them, and how to control them, please see our {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;1b78a7a6-b2e5-d6a0-196f-b7612546531d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Third-Party Tracking\&quot;,\&quot;UniqueId\&quot;:\&quot;ca3d1dec-13fb-05f9-27ac-33fc4da52067\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Introduction\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Although we do not control third parties’ collection or use of your information to serve interest-based advertising or other targeted content, a number of these third parties may provide you with ways to choose not to have your information collected or used in this way. For example, you can opt out of receiving targeted advertisements from members of the Network Advertising Initiative by visiting {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;b92d6e60-3c55-4191-1b3b-273c829a294b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Third Party Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Some of your browsing sessions may be translated into information that helps website designers make websites easier to use and simpler to navigate. If you would like to disable this tracking, please click here: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;b75ef05d-ae21-4537-6355-9af40246379e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;No Tracking Signals Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. How We Respond to Do Not Track Signals\&quot;,\&quot;UniqueId\&quot;:\&quot;7e258e3e-01ef-88fb-3637-9c9374243487\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;No Tracking Signals Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your web browser may let you choose your preference as to whether you want to allow the collection of information about your online activities over time and across different websites or online services. We cannot verify third-party web browser opt-out programs or third-party tracking opt-outs. Therefore, we strongly suggest using our built-in opt-out mechanisms located in the footer of all web pages labeled “Manage Privacy Settings” to prevent tracking.\&quot;,\&quot;UniqueId\&quot;:\&quot;cd61d11e-b7bc-a21d-f55c-c91f21af9cc6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;General Notices Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;IV. General Notices\&quot;,\&quot;UniqueId\&quot;:\&quot;2a9c37fc-688f-1cc7-872f-998a59194f6d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;External Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A. External Links and Third-Party Sites\&quot;,\&quot;UniqueId\&quot;:\&quot;a62a04f0-683b-3f2e-c73d-be123a27ab2a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;External Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber&apos;s website contains links to other websites. Körber is not responsible for the content of these websites or their privacy policies or practices.\&quot;,\&quot;UniqueId\&quot;:\&quot;5bb36f4d-1161-4ee1-ae18-e3c995561c54\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Edge Terms Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;B. Children Under the Age of 13\&quot;,\&quot;UniqueId\&quot;:\&quot;fdbb6f8d-eb98-6d06-9847-cb1c41487a65\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Edge Terms Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The Services are not directed to, and Körber does not knowingly collect or solicit personal information from, children under the age of 13. If we learn we have collected or received personal information from a child under the age of 13, we will delete that information. If you believe we might have any information from or about a child under the age of 13, please contact us at {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;c6188e3e-ed1a-e0d4-f516-b7bc4dd242ab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Statements Changes Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;C. Changes to this Statement\&quot;,\&quot;UniqueId\&quot;:\&quot;7dd46d8a-4244-e8e4-bf1f-71019c5564c2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Statements Changes Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber may amend this Statement from time-to-time. For material changes to this Statement, Körber will place a prominent notice on this website and send an email notification of the change. The date this Statement was last revised is at the top of this page.\&quot;,\&quot;UniqueId\&quot;:\&quot;643e508e-7e4c-8d0c-c2e4-39b1421a77fd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;D. Contact Us\&quot;,\&quot;UniqueId\&quot;:\&quot;8f3d3c1f-7e97-3167-7503-1109acd4d14e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Details\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If you have any questions about this Statement or our information practices, please call us at 800.328.3271, email us at {0}, or write to us at\&quot;,\&quot;UniqueId\&quot;:\&quot;4ec8072e-2ac7-e791-bca1-a9b1fcb1c4d5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Info\&quot;,\&quot;LocalizedValue\&quot;:\&quot; Körber Supply Chain US, Inc.{0} 5600 West 83rd Street.{0} Suite 600 – 8200 Tower.{0} Bloomington, MN 55437\&quot;,\&quot;UniqueId\&quot;:\&quot;aef29bdd-10b1-7285-16f4-9551878b6d03\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Login\&quot;,\&quot;Key\&quot;:\&quot;Contact Conclutions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;If we are unable to resolve your complaint you may contact the Information Commissioner&apos;s Office at the Exchange Tower, Wycliffe House, Water Lane, Wilmslow, Cheshire, SK9 5AF; telephone number: 0303 123 1113. You also have the right to lodge a complaint directly with your local data protection authority.\&quot;,\&quot;UniqueId\&quot;:\&quot;d06fc482-1f88-9690-c943-7e0d0d5481b7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Components\&quot;,\&quot;Key\&quot;:\&quot;No Data Found Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No Data Found\&quot;,\&quot;UniqueId\&quot;:\&quot;90c428a9-062e-2937-d150-8e8f22e64eac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Dialog Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;ea399afa-ba12-62e5-d7fd-470f67ca3414\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;462a5bec-cfaf-e5dc-9a8c-1c269817ff9a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Overwrite Existing Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Overwrite existing\&quot;,\&quot;UniqueId\&quot;:\&quot;791da2f7-885f-c8d2-7a07-a7166775cf2a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} successfully imported.\&quot;,\&quot;UniqueId\&quot;:\&quot;1075941a-4ed1-5473-a095-49fc80a770dd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Import Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to import {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;f4aa7da9-9516-a5c2-6d25-1e19c2813675\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} successfully exported.\&quot;,\&quot;UniqueId\&quot;:\&quot;44417dd7-bfff-6072-0523-b3fd78b5fb84\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to export {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;6a24042f-e78a-0fea-5c12-8da321905334\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Unable To Request Url Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to request url [{0}].\&quot;,\&quot;UniqueId\&quot;:\&quot;b904b189-755c-d3db-d3db-aa3f9d276877\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Enable Popup Blocker Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Make sure your browser&apos;s pop-up blocker is turned off.\&quot;,\&quot;UniqueId\&quot;:\&quot;329aa0f8-34e0-9b36-c114-158e52f0834e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Discover {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;d2889c82-6d89-89db-c1f4-9efddd2b1ae2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: User Credentials Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Credentials\&quot;,\&quot;UniqueId\&quot;:\&quot;92b9371c-0654-ce93-6df5-adf2e9fb5304\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Assets Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Assets\&quot;,\&quot;UniqueId\&quot;:\&quot;7776bfe6-d48c-dc94-6ec3-3b9a5fb967cb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Retrieve All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Retrieve All\&quot;,\&quot;UniqueId\&quot;:\&quot;36b9c20f-5a20-a066-e228-7b1d57fec7df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;8d271e71-1462-579d-bc50-c64a27b2451f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Use Credentials From Tenant Configuration Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;d76d6e99-1fac-a9de-c615-a41d5feee30c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Use Custom Credentials Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom\&quot;,\&quot;UniqueId\&quot;:\&quot;b47b2c5b-bade-d6a2-c4de-cd940d4ea53a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: User Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;f2310459-3e62-3382-6637-075404217ab8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Password Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Password\&quot;,\&quot;UniqueId\&quot;:\&quot;016caec6-ae2c-3556-5beb-8de961b40328\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Import Section Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import\&quot;,\&quot;UniqueId\&quot;:\&quot;79162e86-2d1c-606b-2d4f-2cf23f2c0e7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Overwrite Existing Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Overwrite existing\&quot;,\&quot;UniqueId\&quot;:\&quot;03b6cc23-462b-24f5-80fc-738ad7a1b622\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Discover Assets Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to discover assets.\&quot;,\&quot;UniqueId\&quot;:\&quot;800defae-1b29-1299-3b44-db40da22f1f4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: Import Asset From Cloud Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to import asset from cloud.\&quot;,\&quot;UniqueId\&quot;:\&quot;22fe8b87-399c-6b82-3aa1-f24314b8002f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Discover Dialog: No Credentials Specified Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No credentials specified or obtained from tenant configuration defaults.\&quot;,\&quot;UniqueId\&quot;:\&quot;f7d1bbb3-b79c-fea9-32f8-d4e5574dcba4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Dropdown List Component\&quot;,\&quot;Key\&quot;:\&quot;Informations: defaultPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please select an option\&quot;,\&quot;UniqueId\&quot;:\&quot;8672e5c7-d003-0602-3b9d-d2db2e69078b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;From Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;From\&quot;,\&quot;UniqueId\&quot;:\&quot;c56faba1-c934-9844-cbd6-ad8f58da5ab4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;To Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To\&quot;,\&quot;UniqueId\&quot;:\&quot;29306974-60de-b022-dd78-a929f9068689\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Cc Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cc\&quot;,\&quot;UniqueId\&quot;:\&quot;413e10ca-68ef-f7a1-e044-bb930e6dfd0d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Subject Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Subject\&quot;,\&quot;UniqueId\&quot;:\&quot;6296d119-9ff6-c9e6-c185-96797096445d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Body Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Body\&quot;,\&quot;UniqueId\&quot;:\&quot;fd46aa98-109d-ad3a-6e8f-f306bfd8d383\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Is Html Body Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Html\&quot;,\&quot;UniqueId\&quot;:\&quot;b40a62ca-fc4f-83ef-306a-e6f0490c0b0a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email has been sent successfully.\&quot;,\&quot;UniqueId\&quot;:\&quot;e16e2d30-3691-0f3d-97d5-d6802cb7df1b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Email Component\&quot;,\&quot;Key\&quot;:\&quot;Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to send email.\&quot;,\&quot;UniqueId\&quot;:\&quot;c3abaef1-c139-ca5c-b5e2-5f6e64a12ce9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send Email\&quot;,\&quot;UniqueId\&quot;:\&quot;45dbcbab-f5a6-75a9-1d8d-055b546b7d78\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Send Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Send\&quot;,\&quot;UniqueId\&quot;:\&quot;371158fd-9223-0fe2-2763-1304e733faa4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Send Email Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;adea70db-1c5a-6aad-18b4-5952a6a4c744\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: File Input Component\&quot;,\&quot;Key\&quot;:\&quot;Select Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose File\&quot;,\&quot;UniqueId\&quot;:\&quot;238cb93b-6e5a-5dd6-a7b4-17d43f82efec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Date Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid date format.\&quot;,\&quot;UniqueId\&quot;:\&quot;988eb601-ded7-0cf3-03ad-468b8df024a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Remote Service Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred accessing the remote service.\&quot;,\&quot;UniqueId\&quot;:\&quot;36d37771-741a-219e-8813-eb951878b1c8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Time Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid time format.\&quot;,\&quot;UniqueId\&quot;:\&quot;90ce8601-22a0-1f54-6101-e1a6183260b7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Apply Changes Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred applying the changes.\&quot;,\&quot;UniqueId\&quot;:\&quot;50bdcc53-0466-5299-1648-bc859963e116\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Expected Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Expected format: {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;9e9aa023-a0a6-914e-aac8-4329bd48ff6e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid\&quot;,\&quot;Key\&quot;:\&quot;Invalid Date/Time Format Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid date/time format.\&quot;,\&quot;UniqueId\&quot;:\&quot;93fac708-e3e9-a99a-cab4-3d751e83f66f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: display\&quot;,\&quot;LocalizedValue\&quot;:\&quot;{0} - {1} of {2} items\&quot;,\&quot;UniqueId\&quot;:\&quot;04ffc3a1-248b-a87d-a9fc-c713d936a2a8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: empty\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No items to display\&quot;,\&quot;UniqueId\&quot;:\&quot;65ef042a-268f-3734-8a96-4b9304011750\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: of\&quot;,\&quot;LocalizedValue\&quot;:\&quot;of {0}\&quot;,\&quot;UniqueId\&quot;:\&quot;63e5ffda-e73f-2501-703f-45e97c9c7dd7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: page\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;0231661d-b627-a191-9690-1e452ddf001a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: itemsPerPage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;items per page\&quot;,\&quot;UniqueId\&quot;:\&quot;0d8bf36d-e7d8-958f-31f7-fbb7c33cec2a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: columns\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Columns\&quot;,\&quot;UniqueId\&quot;:\&quot;f0be8004-43b2-96e0-d3a8-8cc196f1ff01\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filter\&quot;,\&quot;UniqueId\&quot;:\&quot;b45fcc38-9479-156d-05fa-c24b91844200\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: sortAscending\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sort (Asc)\&quot;,\&quot;UniqueId\&quot;:\&quot;ed3800f2-646a-4e31-362c-a77ef7fe534b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: sortDescending\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Sort (Desc)\&quot;,\&quot;UniqueId\&quot;:\&quot;b14e58e1-f329-4b6b-c7ef-150b3fdaae16\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;4f9bdd6f-66a0-922d-bba0-bb25b99940c9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: undo\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Undo\&quot;,\&quot;UniqueId\&quot;:\&quot;746b82ec-1683-dbb6-14b1-deecd810a7b4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: edit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;7dc59162-1cfc-b372-f0c5-3f2376a1fb35\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: reset\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset\&quot;,\&quot;UniqueId\&quot;:\&quot;fb909afb-c063-329a-cfbf-f1e869a240cc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: save\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;bc806635-5ed3-1117-ca67-fa50c004f4a9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: create\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New Record\&quot;,\&quot;UniqueId\&quot;:\&quot;48530284-4ebe-cb8d-65b9-78c66efd368b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: excel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export\&quot;,\&quot;UniqueId\&quot;:\&quot;797772e4-dbdb-a598-e563-a68f7dcebe86\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: apply\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Apply\&quot;,\&quot;UniqueId\&quot;:\&quot;767391dd-e5ae-19dc-4bb3-c1b08604d850\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: destroy\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;3cc975e2-0596-f57e-853c-0178955ff02b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: resetConfiguration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reset Configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;c8178fb0-d241-111e-8571-ab3e4f52ba30\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: saveConfiguration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save Configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;60bc7355-708b-5ebe-3389-32479c9361bf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Command: clearAllFilters\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clear All Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;62f0c79b-349e-6d95-34d0-b6c53e10507c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: info\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Show items with value that: \&quot;,\&quot;UniqueId\&quot;:\&quot;5b2aa0a3-e4e5-0b03-f4e3-c096f9bbeabc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: isFalse\&quot;,\&quot;LocalizedValue\&quot;:\&quot;is false\&quot;,\&quot;UniqueId\&quot;:\&quot;a2f37a31-2fbd-d6e9-6214-4dde2c6486c3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: isTrue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;is true\&quot;,\&quot;UniqueId\&quot;:\&quot;b40c6bf4-0732-5b3e-d909-8ad4f317e65a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: and\&quot;,\&quot;LocalizedValue\&quot;:\&quot;And\&quot;,\&quot;UniqueId\&quot;:\&quot;a574911e-fa7e-6958-44d0-b83771ef499e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: or\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Or\&quot;,\&quot;UniqueId\&quot;:\&quot;504120ca-2766-f40d-0c4f-e0f610cce477\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: clear\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clear\&quot;,\&quot;UniqueId\&quot;:\&quot;f45d0dd1-a2f5-2c8c-921f-978917a42e4e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;4b52699d-81df-15ba-5fa6-c52a02c829b9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filter\&quot;,\&quot;UniqueId\&quot;:\&quot;7cc40443-1895-3acd-a4bf-6d81437971fe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;7bad7b38-9d19-b94b-99f0-3efee9a85bda\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;fbe80b17-2013-2464-dba5-ac0056cef15a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is after\&quot;,\&quot;UniqueId\&quot;:\&quot;015c1118-eeeb-6572-24a0-a996c1ca8a17\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is after or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;a9124898-9dd3-b7ea-2366-062f65f129b6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is before\&quot;,\&quot;UniqueId\&quot;:\&quot;c205ff09-31d7-532c-e31f-2a21a64908e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Date Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is before or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;034d548c-5d36-91f0-5fb7-66030ce3601c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: startswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Starts with\&quot;,\&quot;UniqueId\&quot;:\&quot;3169f4c4-a833-bd2b-db73-04847b0ed810\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: contains\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contains\&quot;,\&quot;UniqueId\&quot;:\&quot;00c0e341-205a-40b7-6be3-fe963ecb56ea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;a092d1eb-28ba-4d6d-3ea1-216d01191543\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;b4e18bd3-1430-7343-fc77-84b933f691b7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: endswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ends with\&quot;,\&quot;UniqueId\&quot;:\&quot;f2422e7b-8436-9e8b-9e15-7fd0aa7eed60\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: String Operators: doesnotcontain\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Does not contain\&quot;,\&quot;UniqueId\&quot;:\&quot;cab20bfd-ade3-679a-6b00-b8185842873d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is not equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;41b10ee5-9fa5-7b0c-bc2a-92c405aad44c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is greater than\&quot;,\&quot;UniqueId\&quot;:\&quot;c5a8b6f8-0d04-359a-30f1-37f06091faba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;7ec6745d-4018-0cbc-ce9b-5de00801810d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is less than or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;f397ca6a-7c93-090e-668a-d1d3b2971751\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is greater than or equal to\&quot;,\&quot;UniqueId\&quot;:\&quot;26f6b1e5-9285-c60d-69f1-9fbbb8cc0a87\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Filter Menu: Number Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is less than\&quot;,\&quot;UniqueId\&quot;:\&quot;47f6c32d-0ead-37e3-aa74-d1c6de0236f5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Batch Changes: applyChangesErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred applying changes.\&quot;,\&quot;UniqueId\&quot;:\&quot;fc5e1710-e8eb-8795-0142-ae2b261b919f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Batch Changes: applyChangesSuccessMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;All changes applied.\&quot;,\&quot;UniqueId\&quot;:\&quot;189fa27f-9db1-f346-83b8-1e0d116b281e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToUpdateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred updating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;973f020b-f57a-38e6-1a5d-dcf0f8a00e2f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToDeleteErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred deleting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;602ccf05-d587-789a-dd98-c4d005d3e01b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Save And Continue Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save and Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;a8a3fee1-4c3b-03c2-3570-4da3496d8060\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;4943c46a-3f1d-3a7e-265c-66a051b39c91\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;a33c69a9-e476-702d-4381-e6098390c1b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Don&apos;t Save And Continue Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Don&apos;t Save and Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;2b427802-b646-d83d-ec59-ece2ced4a929\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unsaved Changes\&quot;,\&quot;UniqueId\&quot;:\&quot;71515ca7-25e2-2d34-ac95-a1f09fe2942d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Unsaved Changes Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You have unsaved changes. Do you want to save them?\&quot;,\&quot;UniqueId\&quot;:\&quot;555b08cc-f310-8a73-bdcb-fe37da813128\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select\&quot;,\&quot;UniqueId\&quot;:\&quot;612b740c-fe9b-668a-134f-1f19062d8fd7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Select Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select\&quot;,\&quot;UniqueId\&quot;:\&quot;673576e4-1aed-e2f7-febf-2f064a458d5c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: List View Component\&quot;,\&quot;Key\&quot;:\&quot;Select All Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select All\&quot;,\&quot;UniqueId\&quot;:\&quot;78733399-6e37-48b8-ef13-3bf2e88508d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: List View Component\&quot;,\&quot;Key\&quot;:\&quot;Unselect All Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unselect All\&quot;,\&quot;UniqueId\&quot;:\&quot;956d1525-211d-96b9-babc-501d63b16bf0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;2ddd8fe9-a85e-43cc-2591-ad4085f72610\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Application Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;d6bd02ed-8874-a1b6-536f-6a1b891ecca4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;355bb7de-ade1-9023-b391-f256e78be7f3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;6fb77477-90b1-5831-8f2b-84e06a80f4ea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Default Value Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;0a1cdddf-5c76-e479-cb65-8d3a77f2cfc1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Group Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;e0645cb9-e525-5ce5-3dbb-dc7189c438a2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Group Id Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;e5ad80a3-fa01-972c-070d-d431819674f9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Id Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;3d710177-cf35-dce7-a2f7-2aa1f9367f29\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Key Column Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;8ea5d3aa-fce3-2316-5c1c-9a5ca078eefa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Key Filter\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;b0c88797-234a-9a67-7e80-83da64305a73\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Close Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close\&quot;,\&quot;UniqueId\&quot;:\&quot;b0e95f54-2f7f-fbf7-6d97-93e448978814\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;b9761938-5509-4749-b8da-68a93018b3bb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_ApplicationId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;c932bc83-aeba-0aaf-2f5d-6e91e30baac5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_DefaultValue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;1713e3b6-dad2-de5d-7d6d-6361de09a8f3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_GroupId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;f17594a4-7114-a4bc-bd6a-287a6e458d44\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_Id\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;f2c8ae43-c05f-a2b9-7dd8-6c9e14b55552\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;grid_Localizations_Column_Header_Key\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;32b544b7-0660-5c40-836f-b96f6d48d7d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: ApplicationId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application\&quot;,\&quot;UniqueId\&quot;:\&quot;7985e52f-834f-e92f-e7a6-703abca6a3b0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: Default\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;1b122a80-dd52-78f5-f2a3-d06903b6d058\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: GroupId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Group Id\&quot;,\&quot;UniqueId\&quot;:\&quot;cfc7427d-dbb1-422f-836a-b92e4576163b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: Key\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Key\&quot;,\&quot;UniqueId\&quot;:\&quot;e8babe5d-cd8a-74c0-bd5e-633085393feb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: LanguageId\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not translated values for selected language\&quot;,\&quot;UniqueId\&quot;:\&quot;336dfe16-112b-bd4e-9d5c-237e699781cb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Group: Localizations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;b1f5328a-18ba-dd81-ad12-620856426fc7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;ef387228-678a-ddbd-4a7d-9b8596093b77\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to delete localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;566f0914-f32c-8e66-a9b9-64194f0c1c0f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Localizations Error\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get available localizations.\&quot;,\&quot;UniqueId\&quot;:\&quot;4f565255-8a84-a515-d6f1-8e26d6f50b15\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Translation Services Error\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get translation services.\&quot;,\&quot;UniqueId\&quot;:\&quot;6627b0cc-af9d-043e-2d4b-a3c9333d2363\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Main Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;4db7faa7-b3f7-cd9a-1252-e3d83859c733\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Sub Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translation\&quot;,\&quot;UniqueId\&quot;:\&quot;840da35c-ab09-7c2e-b9d3-452db1e78346\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Options Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select translation options.\&quot;,\&quot;UniqueId\&quot;:\&quot;d3fd1bb7-4302-5242-15f8-4f0a3874c6dd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: From Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;From local Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;19107e69-0cf5-765b-f3fb-a3cce971aa2c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: To Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;To local Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;83cfb732-cda6-354e-865d-53905c4f822f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translation Service\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translation Service\&quot;,\&quot;UniqueId\&quot;:\&quot;62ce9371-a8be-f32c-df22-da2a6e20d433\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Translate\&quot;,\&quot;UniqueId\&quot;:\&quot;08f43573-a3d8-3b8a-7ce8-07af81e18ebd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully translated.\&quot;,\&quot;UniqueId\&quot;:\&quot;e3536a3c-6ea6-c018-6f80-cdc48f30f51c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to translate localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;218e6782-ac86-6c04-8eb3-0c074c94b6dd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Translate Dialog: Translate Update Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save translated localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;79a2fd77-31ac-a409-da8b-67254e32574a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Main Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Localizations\&quot;,\&quot;UniqueId\&quot;:\&quot;3b9b435e-ba1e-6d9f-fa23-d2f7027d0884\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Options Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select delete Localizations method.\&quot;,\&quot;UniqueId\&quot;:\&quot;5548bb5a-8908-51bc-4ae7-632ddd860c3c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Language:\&quot;,\&quot;UniqueId\&quot;:\&quot;92bb380b-4b81-5409-f65e-925ecc61fee3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Selected\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete selected\&quot;,\&quot;UniqueId\&quot;:\&quot;64905ebd-0627-f95d-db24-25739364f763\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;e3eca7a0-f03a-f901-fbcb-09d07bb89ee0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Current Application\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete for current application\&quot;,\&quot;UniqueId\&quot;:\&quot;b8a0b471-324d-59e2-92d6-88308f3c0c5f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Delete Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Selected localizations successfully deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;2c4a8863-f29c-a8a3-874a-80b350ecc64a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Delete Dialog: Delete Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to delete localization.\&quot;,\&quot;UniqueId\&quot;:\&quot;3a35e1db-5e84-ca68-950b-2be32aee11c2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog: Language\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Language\&quot;,\&quot;UniqueId\&quot;:\&quot;a2f6763a-a8bb-1c41-b5ca-bd7fa81fff6a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Input Dialog Component\&quot;,\&quot;Key\&quot;:\&quot;Export Dialog: Export Language Default\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export language as default\&quot;,\&quot;UniqueId\&quot;:\&quot;4b7084ad-9d9c-1afd-bc64-eed567094c8d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;c3ee6831-74ed-cba0-fdf0-1895a90f2840\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;3f5480d7-22ce-7b69-25e5-66706d6f98d4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;5d84822a-9231-eb45-83bb-66980c9e663a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete this record?\&quot;,\&quot;UniqueId\&quot;:\&quot;86b48c13-6aa0-51c1-b628-24b451fd691a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Multiple Records Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete selected records?\&quot;,\&quot;UniqueId\&quot;:\&quot;e86afa1f-4bd7-dbe4-df97-d6f873a98dcf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Delete Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;6221dd9c-50a5-9a82-e07f-2da57b06a797\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Restore Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore\&quot;,\&quot;UniqueId\&quot;:\&quot;a3c20c71-c044-ee31-06d6-40ca0fbf5392\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Maximize Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maximize\&quot;,\&quot;UniqueId\&quot;:\&quot;98070b22-a70b-a261-1806-144e182e534e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Error\&quot;,\&quot;UniqueId\&quot;:\&quot;d34f51a6-d0e4-7a37-6242-32c35d1cbddf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Raw View Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Raw View\&quot;,\&quot;UniqueId\&quot;:\&quot;4c38dae6-6224-bce6-2aa2-7a09740bace3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;d11ba7f4-3d10-af30-6574-351291040f92\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Error Message Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Error Message\&quot;,\&quot;UniqueId\&quot;:\&quot;eb57543e-07ed-0efb-075e-17d7df0a15bf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Error Dialog\&quot;,\&quot;Key\&quot;:\&quot;Stack Trace Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Stack Trace\&quot;,\&quot;UniqueId\&quot;:\&quot;d23b8614-47bb-0095-4504-85a107efd60a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Maximize Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Maximize\&quot;,\&quot;UniqueId\&quot;:\&quot;705be465-ba25-9b9b-b8d1-96e52c7baa5d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;b014d049-0c84-ed21-4883-89e84a1a721c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Html Dialog\&quot;,\&quot;Key\&quot;:\&quot;Restore Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore\&quot;,\&quot;UniqueId\&quot;:\&quot;3d4dc07f-7b5d-ce18-b5e6-75e79e4e2ea1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Information Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;71154cb5-4a49-654a-431f-3af021f90251\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Information Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;0f41c8db-d4d3-09f4-c238-6c33a306576b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Warning\&quot;,\&quot;UniqueId\&quot;:\&quot;8db343d9-7c90-a8a4-59a0-595181c99749\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Refresh Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh\&quot;,\&quot;UniqueId\&quot;:\&quot;68106d60-0776-cfdd-c577-c154b50aacee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Dismiss Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Dismiss\&quot;,\&quot;UniqueId\&quot;:\&quot;d7143d4e-691e-2a16-ff10-be821f685f12\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Optimistic Concurrency Warning Dialog\&quot;,\&quot;Key\&quot;:\&quot;Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The record you are working on may have been modified or deleted.\&quot;,\&quot;UniqueId\&quot;:\&quot;944f46e8-beee-f06b-f2c1-b9b0107b12b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Panel Action Bar\&quot;,\&quot;Key\&quot;:\&quot;Options Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Options\&quot;,\&quot;UniqueId\&quot;:\&quot;408ccb44-e21f-2165-f39d-caa2ede1b5f8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Accessibility Tab\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Accessibility\&quot;,\&quot;UniqueId\&quot;:\&quot;054fb636-0b3c-f7c7-49c4-2c8f5c825c3c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add column on the left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add column on the left\&quot;,\&quot;UniqueId\&quot;:\&quot;0a72fc3e-3032-2acd-4fe8-deeb34965296\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add column on the right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add column on the right\&quot;,\&quot;UniqueId\&quot;:\&quot;7e43040a-8274-8591-a0e3-c4b9c7ef43c0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add row above\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add row above\&quot;,\&quot;UniqueId\&quot;:\&quot;8e9fe782-dfc4-ad2d-9a7a-a99682e9858e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Add row below\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add row below\&quot;,\&quot;UniqueId\&quot;:\&quot;77a864de-4041-4b6a-a2ba-1d2af711982b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center\&quot;,\&quot;UniqueId\&quot;:\&quot;2dbb30f0-bbda-22c2-9073-ee0ca13a7b15\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;7e47329e-34de-97d7-5d78-de2f648e461a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;4d211ce9-92ca-4376-b990-fecc1b16ba60\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Center Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Center Top\&quot;,\&quot;UniqueId\&quot;:\&quot;a9d56416-0f24-077b-c1ec-04ce8a542889\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left\&quot;,\&quot;UniqueId\&quot;:\&quot;75c5da7c-1009-61df-747f-ca23a51d7982\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;7bee1955-9f90-0282-6541-95020e65d5e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;34e312bf-65ef-a6be-094a-d4b09966fdeb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Left Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Left Top\&quot;,\&quot;UniqueId\&quot;:\&quot;5a9e1595-7523-e36d-ea40-8d8b7c7aadc6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right\&quot;,\&quot;UniqueId\&quot;:\&quot;1c060d14-dc8c-8179-c5f6-0c0a013f8e30\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Bottom\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Bottom\&quot;,\&quot;UniqueId\&quot;:\&quot;3c6869f1-8530-6b70-48f1-8be39210e8bf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Middle\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Middle\&quot;,\&quot;UniqueId\&quot;:\&quot;d395ea12-c8b1-0312-c838-a9a68d05a31b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Align Right Top\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align Right Top\&quot;,\&quot;UniqueId\&quot;:\&quot;05f01881-7c22-3de9-ea84-4b2678170ddd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Alignment\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alignment\&quot;,\&quot;UniqueId\&quot;:\&quot;7158a7c7-0307-4a14-47b9-ce6b97e2ada6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Associate cells with headers\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Associate cells with headers\&quot;,\&quot;UniqueId\&quot;:\&quot;c9c5be33-5ade-9809-5f7f-4598f7f49066\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Background\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Background\&quot;,\&quot;UniqueId\&quot;:\&quot;8636935e-6776-a02d-2f6e-dd9c53226a36\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Background color\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Background color\&quot;,\&quot;UniqueId\&quot;:\&quot;ece48f21-5ed7-6dc2-e1a6-fca794947857\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Bold\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Bold\&quot;,\&quot;UniqueId\&quot;:\&quot;b9465398-2ec1-ee06-e11e-a0ed1d5677a5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Border\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Border\&quot;,\&quot;UniqueId\&quot;:\&quot;469fb575-6057-d277-4f7b-b0d37ab172ab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Caption\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Caption\&quot;,\&quot;UniqueId\&quot;:\&quot;beab1516-bf00-caf6-068e-020e6a2d89a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Margin\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Margin\&quot;,\&quot;UniqueId\&quot;:\&quot;0a5874cd-86d6-83cd-10e3-7f389f426212\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Padding\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Padding\&quot;,\&quot;UniqueId\&quot;:\&quot;ba987a6a-1e62-5e77-b9ce-903a92d8106a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Spacing\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell Spacing\&quot;,\&quot;UniqueId\&quot;:\&quot;fc8143af-32df-22b9-527e-bf386076f401\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Cell Tab\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cell\&quot;,\&quot;UniqueId\&quot;:\&quot;bf2ca51a-999c-628d-d61d-c9e121be92dc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Clean formatting\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clean formatting\&quot;,\&quot;UniqueId\&quot;:\&quot;95cec8c4-b2e9-ee0d-b1fb-132deba4b7d1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Collapse borders\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Collapse borders\&quot;,\&quot;UniqueId\&quot;:\&quot;6b5e0862-1bc8-4136-6e16-403d955983c1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Columns\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Columns\&quot;,\&quot;UniqueId\&quot;:\&quot;a5fa98bd-d4f4-8fc8-946d-25ca3f8e32fe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Create table\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create table\&quot;,\&quot;UniqueId\&quot;:\&quot;f87d04a7-ea1a-6c5b-4254-6ea0ed6a5e8a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Create Table Hint\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create a {0} x {1} table\&quot;,\&quot;UniqueId\&quot;:\&quot;c1acc8dd-a168-3f1b-f950-7333fc3ae748\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;CSS Class\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CSS Class\&quot;,\&quot;UniqueId\&quot;:\&quot;dad405bf-76fd-48a0-4c4d-9dc06048ceb5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Delete column\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete column\&quot;,\&quot;UniqueId\&quot;:\&quot;a5ca4713-af97-34d4-8822-3d04f93f4aa0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Delete row\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete row\&quot;,\&quot;UniqueId\&quot;:\&quot;ea9582d8-805d-5927-db44-7f633217f2d2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;bb89aaa5-eef2-66ce-1fda-789507ebbfed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Insert\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert\&quot;,\&quot;UniqueId\&quot;:\&quot;c3a2e3b7-fb0d-c07e-820e-b97514a400db\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Ok\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ok\&quot;,\&quot;UniqueId\&quot;:\&quot;fd854ed6-a45f-c29a-20a9-3ef22a97f95c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Dialog Update\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Update\&quot;,\&quot;UniqueId\&quot;:\&quot;20f7ca55-4da3-8c8f-d4f9-2b73d9943681\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Edit Area Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Write your comments here. Press F10 for toolbar.\&quot;,\&quot;UniqueId\&quot;:\&quot;e31e47dc-e3b0-6db2-6853-7ad1c5b58e9c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;File Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Title\&quot;,\&quot;UniqueId\&quot;:\&quot;8cf9bc42-b881-b5e3-78aa-749940ec7701\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;File Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;53154ad6-c918-91b5-2c3e-216cb2c904af\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Name\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select font family\&quot;,\&quot;UniqueId\&quot;:\&quot;e3651efb-e4ab-0d6a-c833-a99f84c02350\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Name Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;(inherited font)\&quot;,\&quot;UniqueId\&quot;:\&quot;c25da51d-d374-c52b-1d57-bc18e8d4944d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Size\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select font size\&quot;,\&quot;UniqueId\&quot;:\&quot;44c37562-0274-395c-1ed6-d8b0cc7823a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Font Size Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;(inherited size)\&quot;,\&quot;UniqueId\&quot;:\&quot;91733087-1bf8-148d-b8f2-3a64f5521aac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Fore Color\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Color\&quot;,\&quot;UniqueId\&quot;:\&quot;36fff2f6-9c79-06bf-0a6f-b141a33a286a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Format Block\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Format\&quot;,\&quot;UniqueId\&quot;:\&quot;b7fde63d-dd93-8192-dd94-e76f06b4780d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Formatting\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Format\&quot;,\&quot;UniqueId\&quot;:\&quot;c8e5ea27-f9d3-026f-1499-844b97a2e2f5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Height\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height\&quot;,\&quot;UniqueId\&quot;:\&quot;9a265c32-1a5f-122f-dec1-f4bd59670a1f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;ID\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ID\&quot;,\&quot;UniqueId\&quot;:\&quot;7edb6fa2-c941-13dd-66a1-afa295661675\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Alternate text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alternate text\&quot;,\&quot;UniqueId\&quot;:\&quot;44eeb36e-8e40-26bf-51ae-0536930d0899\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Height\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height (px)\&quot;,\&quot;UniqueId\&quot;:\&quot;c0374a05-4712-ec28-b86c-727eaad50eab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;0e94c438-c8fb-72d9-7f96-d9732ddccd35\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Image Width\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width (px)\&quot;,\&quot;UniqueId\&quot;:\&quot;faa40f51-9ed7-9e93-59e9-227b168715a3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Indent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Indent\&quot;,\&quot;UniqueId\&quot;:\&quot;cf2d6300-b968-9ec1-bcba-d19575a620e0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert file\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert file\&quot;,\&quot;UniqueId\&quot;:\&quot;e7d6925d-93db-2c03-16a8-aec59dfe3631\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert HTML\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert HTML\&quot;,\&quot;UniqueId\&quot;:\&quot;250e995c-0684-d57c-3e8b-9c3a5ff992cf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert hyperlink\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert hyperlink\&quot;,\&quot;UniqueId\&quot;:\&quot;2e0e9c9e-6b65-2835-7557-4e600f7a1222\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert image\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert image\&quot;,\&quot;UniqueId\&quot;:\&quot;88a795e5-556b-7ba5-dc31-c8038448b61a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert ordered list\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert ordered list\&quot;,\&quot;UniqueId\&quot;:\&quot;7c600c48-88f6-cee1-1d56-47d36ef245f6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Insert unordered list\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Insert unordered list\&quot;,\&quot;UniqueId\&quot;:\&quot;ca5f3173-afa2-b416-d3a4-556c3c823681\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Italic\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Italic\&quot;,\&quot;UniqueId\&quot;:\&quot;05cf85d5-c642-dbfe-dece-363aff6eb7cf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify Center text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Center text\&quot;,\&quot;UniqueId\&quot;:\&quot;446a1ecb-2fe7-0b29-1e33-7aeb55dae8c8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify Full\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Justify\&quot;,\&quot;UniqueId\&quot;:\&quot;ee3f414b-65a1-79bc-113e-6135b5048f83\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify text left\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align text left\&quot;,\&quot;UniqueId\&quot;:\&quot;78b4fdb9-d69e-9836-7fcf-87a3b8617487\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Justify text right\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Align text right\&quot;,\&quot;UniqueId\&quot;:\&quot;b87d515e-8ab6-f515-f9ea-c196b5c43d8d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Text\&quot;,\&quot;UniqueId\&quot;:\&quot;abe119cf-dfab-6583-4194-b06b6c31cde4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link ToolTip\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ToolTip\&quot;,\&quot;UniqueId\&quot;:\&quot;088be24a-92b6-83ec-eda3-ccef810d1bfc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Link Web address\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Web address\&quot;,\&quot;UniqueId\&quot;:\&quot;786d9029-3d70-0188-16fa-bca7ccdc7dce\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Open link in new window\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Open link in new window\&quot;,\&quot;UniqueId\&quot;:\&quot;513eeb16-bac3-d84e-b169-18b56cc4b8ce\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Outdent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Outdent\&quot;,\&quot;UniqueId\&quot;:\&quot;36f4d7d6-c9f2-3f27-8831-e4ee8b584b95\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Print\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print\&quot;,\&quot;UniqueId\&quot;:\&quot;ff2b1ff8-029a-56ed-1175-07d9b1bbc144\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Remove Alignment\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Remove Alignment\&quot;,\&quot;UniqueId\&quot;:\&quot;d4ef72e8-7e8d-1e37-0565-5d5eaea909aa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Remove hyperlink\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Remove hyperlink\&quot;,\&quot;UniqueId\&quot;:\&quot;45a43ddc-1cb7-35ef-8f85-25ada86db676\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Rows\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Rows\&quot;,\&quot;UniqueId\&quot;:\&quot;b47f9927-d11f-b99a-29b3-ea99218be5b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Select All Cells\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select All Cells\&quot;,\&quot;UniqueId\&quot;:\&quot;1b910a27-fd96-7f8f-c5bb-a047d76267de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Strikethrough\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Strikethrough\&quot;,\&quot;UniqueId\&quot;:\&quot;653130ef-83ef-f263-66f5-bd006f874715\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Styles\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Styles\&quot;,\&quot;UniqueId\&quot;:\&quot;cd614d88-d764-0ceb-71db-bcd7e95e2c9f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Subscript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Subscript\&quot;,\&quot;UniqueId\&quot;:\&quot;e069eaf1-ec36-f5ca-cf49-0d86cd4f1bdc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Summary\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Summary\&quot;,\&quot;UniqueId\&quot;:\&quot;12f20821-14c5-5996-86d5-e9010e7ef538\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Superscript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Superscript\&quot;,\&quot;UniqueId\&quot;:\&quot;9eddaa2c-a03c-4461-f681-1d907f9624d1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Table\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Table\&quot;,\&quot;UniqueId\&quot;:\&quot;e03fafa2-61e8-fbfc-2589-5f480681ba85\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Table Wizard\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Table Wizard\&quot;,\&quot;UniqueId\&quot;:\&quot;4d6526dc-b7fe-5df8-ff21-6a0b5e1d9e2d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Underline\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Underline\&quot;,\&quot;UniqueId\&quot;:\&quot;10591d62-ac1b-69c4-cafb-d8ed4d895c56\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;View HTML\&quot;,\&quot;LocalizedValue\&quot;:\&quot;View HTML\&quot;,\&quot;UniqueId\&quot;:\&quot;c085848f-c9e1-e889-b1ac-c1714bffae67\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Width\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width\&quot;,\&quot;UniqueId\&quot;:\&quot;8bac3ee3-357d-03ea-ea3f-c6a90296b3bb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Rich Text Editor Component\&quot;,\&quot;Key\&quot;:\&quot;Wrap text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Wrap text\&quot;,\&quot;UniqueId\&quot;:\&quot;69047b03-8490-0bde-fc29-46235c334849\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Additional Information Search Panel Group Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Additional Information\&quot;,\&quot;UniqueId\&quot;:\&quot;f46312a8-e03a-2490-838c-552f373cd8a9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Filter Set Missing Name Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You must supply a name to save your Filter Set.\&quot;,\&quot;UniqueId\&quot;:\&quot;439189ee-227f-1cad-38b5-80b2742a6edd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;5f3c9027-8473-c75e-219d-c9f50d542f51\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to delete filter set. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;d01085f9-5647-dd16-83cf-b80be8a9bc7a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Filter Set Missing Name Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name Not Supplied!\&quot;,\&quot;UniqueId\&quot;:\&quot;7478e83e-1884-6108-79a0-822a7862ee32\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;0e59881f-ac39-b9b4-5f75-3bfaa4005cae\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Load Filter Sets Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to load Filter Sets from user configuration. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;b84a5c86-33b7-2c5f-bb2d-be6164325fd9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;959b8c95-c485-be6a-0ec9-6abf0e850589\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Duplicate Filter Set Name!\&quot;,\&quot;UniqueId\&quot;:\&quot;e7c60fcf-f166-5c30-e044-75edadf87d79\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Load Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Load Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;31fe08f8-54a2-6391-af78-df94718594f8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Sets Failed Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save Failed\&quot;,\&quot;UniqueId\&quot;:\&quot;d9a9b289-2642-b51c-fd4d-56055ba3a501\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;97a0c862-cf6a-4006-ba38-c3c52ccb1cb3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Filter Set Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;A filter set with the selected name already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;da45f499-d77a-be43-0c68-0a024db8c12d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Saved Search Sets Hint Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Saved Search Sets\&quot;,\&quot;UniqueId\&quot;:\&quot;6f42985d-cb35-b5d3-e5f3-2683767f06b1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete - {title}?\&quot;,\&quot;UniqueId\&quot;:\&quot;e9eea8f4-ff9a-5ac0-3ed1-4451f888de73\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Ok Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ok\&quot;,\&quot;UniqueId\&quot;:\&quot;2f53b3d2-64f0-0b66-3452-84ff12a85284\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Set Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select a Name\&quot;,\&quot;UniqueId\&quot;:\&quot;a917e31f-dcf0-98ce-9660-45c7935859b3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;f27c83ee-22e4-3a87-fe72-505dd55db413\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Save Filter Sets Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to save Filter Sets. See logs for details.\&quot;,\&quot;UniqueId\&quot;:\&quot;e777cd98-2593-7c2f-81d9-2c86d4cface1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Missing Localization Tag Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Missing Localization Data\&quot;,\&quot;UniqueId\&quot;:\&quot;d6a93b07-197d-b636-ea0f-1a4b45d5196d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Delete Filter Set Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete the selected Filter Set?\&quot;,\&quot;UniqueId\&quot;:\&quot;024ebd5b-8025-cb8f-1866-1b34b3b01857\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;No Filters Provided\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No filters were provided.\&quot;,\&quot;UniqueId\&quot;:\&quot;e4b0549e-d8b2-f71f-6722-dcb6e597c0b4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;Missing Localization Tag Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to determine application id or localization tag. Cannot save/retrieve Filter Sets!\&quot;,\&quot;UniqueId\&quot;:\&quot;ef8b68da-e926-17c6-ce44-6d910ae5ba5b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;True Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;8d1a6693-b870-567f-b51b-a70068c13ecb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel\&quot;,\&quot;Key\&quot;:\&quot;False Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;1d711b81-65ea-3c20-66a0-ee3c0e87301b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;bc2017a8-59ca-91d6-4ed7-1356dd9aadec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;bd64275e-b001-bba1-e90d-a7c894964d9b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Greater Than\&quot;,\&quot;UniqueId\&quot;:\&quot;ef59f325-c45c-3f7f-c2d5-ffd31e129031\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Greater Than Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;274247f7-c8fb-4fe3-cdd4-2a44d4ce73a3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Less Than\&quot;,\&quot;UniqueId\&quot;:\&quot;e3d70df5-5fb3-70d1-db78-00ce557457a3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Less Than Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;1969c32e-c567-1d12-2c54-ade02f087b8c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: startswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Starts With\&quot;,\&quot;UniqueId\&quot;:\&quot;715c08e4-5e3b-2a00-8fb5-694108d1c5b2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: contains\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Contains\&quot;,\&quot;UniqueId\&quot;:\&quot;1ddcb535-b57a-9940-de8d-10ec9d7c4ded\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: endswith\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Ends With\&quot;,\&quot;UniqueId\&quot;:\&quot;93459ba1-ffff-a9e3-1597-66f2aa214480\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Operators: doesnotcontain\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Does Not Contain\&quot;,\&quot;UniqueId\&quot;:\&quot;60ea29be-4c88-b70c-a6da-91153fa061ab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: neq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;9a4e1806-468c-21c6-444f-51312131f647\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: eq\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Equal To\&quot;,\&quot;UniqueId\&quot;:\&quot;7e181a36-534d-f618-0b7d-5a4c84432db8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: gt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is After\&quot;,\&quot;UniqueId\&quot;:\&quot;b37c0a78-2f09-3630-c962-7aaa7ad85539\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: gte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is After Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;eb5e8ab1-8692-8c2e-57a3-9074f0ddc843\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: lt\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Before\&quot;,\&quot;UniqueId\&quot;:\&quot;23b48309-4a00-bb32-67d6-f61cae5c9107\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Search Panel Labels\&quot;,\&quot;Key\&quot;:\&quot;Date Operators: lte\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Is Before Or Equals\&quot;,\&quot;UniqueId\&quot;:\&quot;91e09cb0-ab78-8729-d73c-e3dbb74ccf96\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: TabStrip\&quot;,\&quot;Key\&quot;:\&quot;Tab Header Localization Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to localize TabStrip title text.\&quot;,\&quot;UniqueId\&quot;:\&quot;8e11a3dc-e117-1fb0-eccb-8d07a0d7c411\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Virtual Keyboard Dialog\&quot;,\&quot;Key\&quot;:\&quot;OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;5e982edb-d0b1-3a5d-a6fe-1e51763dbe00\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Virtual Keyboard Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;f8ea1850-990a-922f-82ec-21c670c89cd6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tree Component\&quot;,\&quot;Key\&quot;:\&quot;Excessive Selected Items Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;The hj-list-tree component was specified with more than one selected item. The hj-list-tree does not support selecting multiple items.\&quot;,\&quot;UniqueId\&quot;:\&quot;331ae982-02b5-2a82-5b8f-58d48aef3fa7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tree Component\&quot;,\&quot;Key\&quot;:\&quot;Data Read Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to read data.\&quot;,\&quot;UniqueId\&quot;:\&quot;cde37239-5c4f-9636-afad-287cea7a7a33\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Back\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;e387214c-c2e5-b996-069f-1e4f6e44af54\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Forward\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next\&quot;,\&quot;UniqueId\&quot;:\&quot;c308f757-74d1-edb3-c97f-68fde85b16ab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Finish\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Finish\&quot;,\&quot;UniqueId\&quot;:\&quot;90625762-8093-fff1-2180-d66257cf93ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;9fe1bfd3-3dcc-17eb-2b14-ad1206584821\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: WizardComponent\&quot;,\&quot;Key\&quot;:\&quot;Pause\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Pause\&quot;,\&quot;UniqueId\&quot;:\&quot;3025f23a-a824-ed3c-9857-8800cbc293f7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Invalid Page Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Specified page and/or Home Page were not defined or were invalid.\&quot;,\&quot;UniqueId\&quot;:\&quot;6394d660-d017-68f0-bd0f-8e1d6b9d620d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Home Page Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;bc9ae0d4-3399-bdc9-86f2-3a137d23bd90\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Tab Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Invalid Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid Page Id\&quot;,\&quot;UniqueId\&quot;:\&quot;ae8d50aa-6344-1561-596e-d729440d72fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Load configuration failed\&quot;,\&quot;UniqueId\&quot;:\&quot;e64781f6-f48e-90ad-48bc-12b4dce762c1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration No Layout Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;WorkcenterUserLayoutService.loadConfiguration failed: Last layout not requested and no layout name supplied.\&quot;,\&quot;UniqueId\&quot;:\&quot;418579ab-0217-353e-ba5d-3ff3d07832d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Configuration No Page Tag Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;WorkcenterUserLayoutService.loadConfiguration failed: Requested last saved layout, but no page tag provided.\&quot;,\&quot;UniqueId\&quot;:\&quot;b67889b8-aa0b-5d98-941b-5910bb4ecf0a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;190ae86c-e436-468c-cfa2-d06553cd9571\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Manage Screen Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Manage Screen\&quot;,\&quot;UniqueId\&quot;:\&quot;d6c3e2d1-ac17-e852-7f9b-900a7fa37958\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Remove Panel Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot remove a panel that lacks a serializationTag value.\&quot;,\&quot;UniqueId\&quot;:\&quot;9e13dd3c-594d-1571-3cf5-01f714ab78e2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Load Grid Configuration Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load grid configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;8e53f94c-2d55-c56f-b2c0-a223bdb71044\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Default Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;2e5a9c42-68fb-f9f6-a5f2-53c6877f0894\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Application Id Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id:\&quot;,\&quot;UniqueId\&quot;:\&quot;8fac375a-976b-253f-dc0d-51891bd866a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Accept Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Accept\&quot;,\&quot;UniqueId\&quot;:\&quot;45a9d104-a5ba-33f7-9245-cee410ce5a4e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Configuration Type Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configuration Type:\&quot;,\&quot;UniqueId\&quot;:\&quot;e99d04d6-1b7e-adc4-cd4e-027f550f3d06\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Workcenter\&quot;,\&quot;Key\&quot;:\&quot;Configuration Id Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Configuration Id:\&quot;,\&quot;UniqueId\&quot;:\&quot;b3a46c57-68a4-431c-ae5c-c0ea373cb3e3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Min Length Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter at least {0} characters.\&quot;,\&quot;UniqueId\&quot;:\&quot;5dd45589-36bc-a2b8-c340-ef506107bf29\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Regex Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value that match with &apos;{0}&apos; pattern.\&quot;,\&quot;UniqueId\&quot;:\&quot;56e6c3e9-7e0c-3c93-eab6-f184b47e4441\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Min Value Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value greater than or equal to {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;026468b9-eb79-36ba-9e92-12ef6d3ac431\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Range Length Error Message \&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value between {0} and {1} characters long.\&quot;,\&quot;UniqueId\&quot;:\&quot;7bb21110-034f-a62b-25ae-68ba9b5e717b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Validation Errors On Page Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;There are validation errors on the page.\&quot;,\&quot;UniqueId\&quot;:\&quot;b534a017-83d5-855b-2d3d-2c3798f58e6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Range Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value between {0} and {1}.\&quot;,\&quot;UniqueId\&quot;:\&quot;0de34d70-c925-00b8-4cf8-951015526321\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Max Value Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a value less than or equal to {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;4e89e02e-59cc-e004-1684-8403adc73bc5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Max Length Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter no more than {0} characters.\&quot;,\&quot;UniqueId\&quot;:\&quot;5dab21cd-3b91-f797-93c4-5febd1991729\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Required Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;This field is required.\&quot;,\&quot;UniqueId\&quot;:\&quot;ba806ec8-ff86-6d29-0e6b-ba96f824f013\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Email Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid Email.\&quot;,\&quot;UniqueId\&quot;:\&quot;eb3e4c3a-bce5-395f-d30e-e109ef5ea501\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Url Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid URL.\&quot;,\&quot;UniqueId\&quot;:\&quot;9aa7bd4d-dda9-dd50-ac50-cbd60971d4f1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;In Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter one of the following values: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;f7c968a5-9c07-3cc5-1456-74ff6005edd0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Equal Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter the following value: {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;a333adae-f244-c862-9f77-a19c7a51fe2e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Request Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please enter a valid value. Server rejected the value as valid.\&quot;,\&quot;UniqueId\&quot;:\&quot;ac065092-ec34-3c74-4277-7e0441b861df\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Validation\&quot;,\&quot;Key\&quot;:\&quot;Request Fail Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to validate with configuration\&quot;,\&quot;UniqueId\&quot;:\&quot;b48bdf6e-58ab-4b5b-3245-c9bcd1d78d76\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Favorites\&quot;,\&quot;Key\&quot;:\&quot;Favorite Removed Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorite Removed\&quot;,\&quot;UniqueId\&quot;:\&quot;e7409809-ead4-49b8-4cf4-a482ed089096\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Favorites\&quot;,\&quot;Key\&quot;:\&quot;Favorite Added Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorite Added\&quot;,\&quot;UniqueId\&quot;:\&quot;4a531fd7-3f73-5530-637c-f62c0c331ca0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: FieldTable Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToRequestErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred requesting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;cefba343-d0f2-e824-3a30-444814cb27fc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Informations: deleteSuccessMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete was successful\&quot;,\&quot;UniqueId\&quot;:\&quot;da661de9-e460-d455-e0cb-8dbda38b994e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: create\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New Record\&quot;,\&quot;UniqueId\&quot;:\&quot;f613016a-e3ca-116c-f1b8-7bc808fb8635\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: delete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;b7a7229d-411b-d3fc-bc5b-f095fe90c807\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: edit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;83da5d82-f4b0-7113-f860-c11e4e98f484\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: cancel\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;4addd9f8-4bed-329f-03c8-dc05c722d91e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Command: save\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;254c4fc3-06c1-edc9-ede4-5f9ce8129333\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToUpdateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred updating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;9c56f4f0-5f62-0856-eb3d-f250853ee062\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToDeleteErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred deleting the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;25f19297-4739-01cf-b2d5-dda0bfa0ec94\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Form Component\&quot;,\&quot;Key\&quot;:\&quot;Errors: unableToCreateErrorMessage\&quot;,\&quot;LocalizedValue\&quot;:\&quot;An error occurred creating the record.\&quot;,\&quot;UniqueId\&quot;:\&quot;f8e637eb-224b-ccca-f401-045db321c6ca\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Responsive State Information\&quot;,\&quot;UniqueId\&quot;:\&quot;6b0b2458-68e7-2d61-46df-3e8aad2c8f06\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Height Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Height\&quot;,\&quot;UniqueId\&quot;:\&quot;37d7ffb8-4452-41bd-9073-bdc7d37ff40e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Device Size Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Device Size\&quot;,\&quot;UniqueId\&quot;:\&quot;61ae1045-7d93-eb9e-4ea8-d0a53c4ca61e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Orientation Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Orientation\&quot;,\&quot;UniqueId\&quot;:\&quot;c4440b6d-3716-019e-88fc-32f7bebe9402\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Width Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Width\&quot;,\&quot;UniqueId\&quot;:\&quot;656168a6-4790-8538-6933-5097c60929d1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Home Page: Responsive State Dialog\&quot;,\&quot;Key\&quot;:\&quot;Device Pixel Ratio Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Device Pixel Ratio\&quot;,\&quot;UniqueId\&quot;:\&quot;a5697614-5a27-a472-c520-fe74f6a57ed3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Loading State Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loading\&quot;,\&quot;UniqueId\&quot;:\&quot;0f009879-08fc-7de2-4892-d69e14be10a9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application\&quot;,\&quot;UniqueId\&quot;:\&quot;44be8831-5b7f-3816-083a-c42f506f1806\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Unable To Initialize Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to initialize application\&quot;,\&quot;UniqueId\&quot;:\&quot;0b4e60a6-1c5f-488e-2333-2e6845339af4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loading Applications\&quot;,\&quot;UniqueId\&quot;:\&quot;80d1f9cd-5e4a-1937-c6d9-c23056cea59c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Loading Screen\&quot;,\&quot;Key\&quot;:\&quot;Loaded State Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Loaded\&quot;,\&quot;UniqueId\&quot;:\&quot;ea1828f4-54c6-add0-5714-e1d3b9e7ab74\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Get Tenant Admin Configuration Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get tenant admin configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;21c9a99e-a0ba-f471-d393-f2a5deeec95b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Import Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Import\&quot;,\&quot;UniqueId\&quot;:\&quot;3407e072-4a5d-5f41-0f25-76e2a4e18959\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Export Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export\&quot;,\&quot;UniqueId\&quot;:\&quot;42205b27-7c4b-0935-9119-455e30554bba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Discover Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Discover\&quot;,\&quot;UniqueId\&quot;:\&quot;7a9c1db7-8e9a-5f88-77e9-db07c0f4c673\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One\&quot;,\&quot;UniqueId\&quot;:\&quot;5cfeb1d7-25a3-4b73-4024-aa7239bd6cb8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;39478681-e1f1-8bc2-6894-05606c458dca\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close Space\&quot;,\&quot;UniqueId\&quot;:\&quot;4eacee94-2482-c20c-75f2-343f5049e002\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;4e3e54d7-536b-a29a-8ddd-fb213f0b23c3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;f98c1296-f37c-9c6b-827c-2b111e5492de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Close Space Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to close space {0}?\&quot;,\&quot;UniqueId\&quot;:\&quot;02342f3c-bc50-8740-6511-53b60530d1b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Session\&quot;,\&quot;UniqueId\&quot;:\&quot;17e3a2ef-c62e-f9a9-1f2e-5b9d840ec2ba\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Culture Script Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load script for culture\&quot;,\&quot;UniqueId\&quot;:\&quot;2f2d8d68-aa0d-2c02-618a-1dc92eafdbca\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Home Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;94eccdb7-0d83-6f6f-d4e2-909b35b187d9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Try Again Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Try again\&quot;,\&quot;UniqueId\&quot;:\&quot;8cf944db-4c7d-e1ea-cf02-bc1fd35852a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Expired Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session has been expired or kicked out by system administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;6abdf4ed-56a5-37de-1d85-28439bc725a1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Expired Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application session has been expired or kicked by system administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;6bff39db-963f-b4cc-cf3f-5665faf01747\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Alerts Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts Page\&quot;,\&quot;UniqueId\&quot;:\&quot;a8b41b3a-304e-e2c4-3e42-8d4d3b6be66a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recovering Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Creating new application session ...\&quot;,\&quot;UniqueId\&quot;:\&quot;132e4c2c-7db9-84ab-0c14-24c5eae3a172\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Main Close Confirmation\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to close Körber One. All unsaved changes will be lost.\&quot;,\&quot;UniqueId\&quot;:\&quot;48684fa9-5c4f-adfd-c133-31aa1e7cc906\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Copyright Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;© 2019-2021 Körber Supply Chain U.S., Inc. (a successor in interest to HighJump Software Inc.) All Rights Reserved.\&quot;,\&quot;UniqueId\&quot;:\&quot;546d8f16-6280-9251-8cbb-3774fd4ff226\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Quick Links Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;c5283769-3750-661e-a4eb-c0ad1640510b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Failed Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to obtain a session for application, most likely because no licenses were free for this application. If you need to use this application still, please contact your administrator to clear a session for you and click {0}, otherwise click {1}.\&quot;,\&quot;UniqueId\&quot;:\&quot;5e7f69d9-40cc-d811-1979-e00f4e35422f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Application Session Recover Close Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Close\&quot;,\&quot;UniqueId\&quot;:\&quot;256bcce4-74c8-ca3f-10e3-068234c3aca1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Version Update Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your browser is using an incorrect version of Körber One software. Refresh the browser and log on again.\&quot;,\&quot;UniqueId\&quot;:\&quot;7addf8bd-b0b6-9dfd-207e-6bd4168d270c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Version Information Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get version information.\&quot;,\&quot;UniqueId\&quot;:\&quot;630ee8ab-aa40-91bf-c562-f21818fe80ef\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Network Outage Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Network connection\&quot;,\&quot;UniqueId\&quot;:\&quot;826138bf-5ec9-2d88-3e9c-3fc4951463ea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Network Outage Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Network connection was lost, please wait...\&quot;,\&quot;UniqueId\&quot;:\&quot;1e6bf36b-9475-1e3e-74f7-65fdcdd7465a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh session\&quot;,\&quot;UniqueId\&quot;:\&quot;fb771684-bbfa-a11a-fa91-7d744a29ea16\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to refresh session.\&quot;,\&quot;UniqueId\&quot;:\&quot;3558c50b-02aa-befb-db5d-11d909a305a0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Retry\&quot;,\&quot;UniqueId\&quot;:\&quot;51632b07-de70-030d-054b-d5145c22db0e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retry Refresh Session Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;839a8db5-814a-b6bd-3b8a-dc727c106d8d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;2d9aa8d4-8bae-3db4-246e-bd045d21fde5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Terms of Use\&quot;,\&quot;UniqueId\&quot;:\&quot;4fd0c66d-379e-824a-b7f0-619f024ff504\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Privacy Policy Title Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;KÖRBER SUPPLY CHAIN US, INC. PRIVACY STATEMENT\&quot;,\&quot;UniqueId\&quot;:\&quot;e2132eaf-7d2c-d73a-7539-75d4ad740353\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Terms Of Use Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refer to the company privacy policy for terms of use.\&quot;,\&quot;UniqueId\&quot;:\&quot;678b3879-566e-fd39-bda9-65180d5aa1cd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Timeout Warning Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session Timeout Warning\&quot;,\&quot;UniqueId\&quot;:\&quot;536bd7c7-caf8-a529-d270-9897fa478bc5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Acutomatic: Flashing Browser Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Session timeout\&quot;,\&quot;UniqueId\&quot;:\&quot;8202f754-2a52-b0a4-1a3b-f164c4f789e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Retrieve Tenant Configuration Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to retrieve Tenant Configuration.\&quot;,\&quot;UniqueId\&quot;:\&quot;a04822fd-19ed-20fa-efd9-82ac6cbd1135\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Remove Session Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to remove the current Sesssion.\&quot;,\&quot;UniqueId\&quot;:\&quot;8347e800-3aed-fbaa-3c7a-630bf364b7eb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Your session is about to timeout due to inactivity. Do you wish to continue or logout of your session?\&quot;,\&quot;UniqueId\&quot;:\&quot;5ae4f12b-5f77-a7ed-bb45-117d11483fea\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog Yes Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Continue\&quot;,\&quot;UniqueId\&quot;:\&quot;3ccca72d-e089-ff9a-436c-0f3e3af27932\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Session Automatic Timeout Dialog No Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;c3469775-9eaf-6ece-f01e-415b01cdc6de\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;Yes Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;b77a548d-3986-ff1e-874a-d613c3a472fa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Main\&quot;,\&quot;Key\&quot;:\&quot;No Option\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;deb0dd34-90df-f91b-2b42-b0cac07decf7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;2527fb9c-3c0e-43b2-e926-a5e0f67c1046\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logout\&quot;,\&quot;UniqueId\&quot;:\&quot;390d784c-6df8-5145-bd53-4fd3ec983678\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;2fe606fc-a7ff-0ac9-14fa-21391b575950\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;6023f8df-7f75-8408-30a2-445f58e42c2e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Logout Confirmation Dialog\&quot;,\&quot;Key\&quot;:\&quot;Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to close all pages and logout from Körber One.\&quot;,\&quot;UniqueId\&quot;:\&quot;4ad4f445-1ab1-f411-9a00-0394746cc7e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.FirstName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;0ed5a5c1-25b0-10be-7630-0ababc671a22\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.LastName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;139dc847-f2e3-10ba-99ff-7af18d548fcc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.LogOnName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logon Name\&quot;,\&quot;UniqueId\&quot;:\&quot;7abefedc-d9fd-fa5c-ef7d-5e986ec840b0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.Email\&quot;,\&quot;LocalizedValue\&quot;:\&quot;E-mail Address\&quot;,\&quot;UniqueId\&quot;:\&quot;8022d803-b740-b4b3-a7ba-7721e075afe1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Identifier Description: User.Phone\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone Number\&quot;,\&quot;UniqueId\&quot;:\&quot;ca942d1a-0e1b-0e49-bddd-2af24e9bf7fa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Group Description: User\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Core Platform User Personal Data\&quot;,\&quot;UniqueId\&quot;:\&quot;79c55515-8b40-3f78-ea7b-e031cd551d58\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User does not exist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} does not exist.\&quot;,\&quot;UniqueId\&quot;:\&quot;f1133fac-2766-8236-5ef2-83115a9ef846\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Invalid tenant for user\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid tenant for user {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;c9b6eb9b-c300-8ea0-d1eb-a3b67cd312dc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User is either an administrator\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} is either an administrator or a system user.\&quot;,\&quot;UniqueId\&quot;:\&quot;f34c0abc-7e07-21e3-4e94-a387c23331e5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot process PDP operations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot process PDP operations with current connected user {0}.\&quot;,\&quot;UniqueId\&quot;:\&quot;7dc4d7e2-4960-33ed-22fb-e22ce63ecf1b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot export selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot export selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;a6e17ac4-55b7-422a-6e9c-1f3b8308ed70\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User not found\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} not found.\&quot;,\&quot;UniqueId\&quot;:\&quot;826a02df-b18a-4b61-e886-a3b6f9bf5d41\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error trying to export\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to export selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;373c224c-76a4-c170-85eb-2d88fdcb181d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot delete selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot delete selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;f49a6719-6c99-30cb-85ac-aa3b51e5d371\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to delete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to delete selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;7b5f7b5e-268a-9c18-47a9-3a3471ec8821\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot restrict selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot restrict selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;d6df1fc1-d164-1cec-0671-1c0314a9d587\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to restrict\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to restrict selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;9aca6310-f2d2-40f9-f622-3b3cf3f84017\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Cannot unrestrict selected groups\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot unrestrict selected groups.\&quot;,\&quot;UniqueId\&quot;:\&quot;51139e5e-47ae-4dca-66a3-eee0c1fb57c1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Invalid user identifier\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Invalid user identifier.\&quot;,\&quot;UniqueId\&quot;:\&quot;19013d7c-7537-a35b-4143-e65a56a402c5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: User with same info exist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User {0} with same LogOnName or Email already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;6f1e22f1-0d9e-d468-178b-0eea4dc2b4af\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Personal Data\&quot;,\&quot;Key\&quot;:\&quot;Error: Unexpected error occurred trying to unrestrict\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unexpected error occurred trying to unrestrict selected users.\&quot;,\&quot;UniqueId\&quot;:\&quot;e0d27775-a133-8218-babe-bff6a68f9b7a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Platform User Interface Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One User Interface\&quot;,\&quot;UniqueId\&quot;:\&quot;db21378e-9ca8-47c2-6bb6-385896f5bec3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Localize Application Menu Items\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable To Localize Application Menu Items\&quot;,\&quot;UniqueId\&quot;:\&quot;7e5f1906-b79a-88be-057c-4399eeec62b8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Menu Not Found Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu [{0}] was not found. Full Path: {1}\&quot;,\&quot;UniqueId\&quot;:\&quot;f6066a3b-abac-7566-32f7-98dedba94c85\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;About Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;About\&quot;,\&quot;UniqueId\&quot;:\&quot;6cce7d0b-9614-9c42-c96c-6467baebbfcb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Spaces Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Spaces\&quot;,\&quot;UniqueId\&quot;:\&quot;8cd655fe-0b79-a67a-8b90-301899cc0a32\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Search Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;4c6226bc-16a0-d986-10eb-1494a7dbf943\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Static Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load static menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;16882143-5f90-cfdd-32a6-8af77067023a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Help\&quot;,\&quot;UniqueId\&quot;:\&quot;216c14c7-5a14-ac16-fb96-e1014ab14dd6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Favorites Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Favorites\&quot;,\&quot;UniqueId\&quot;:\&quot;b8bd3c13-d759-8c4a-d428-5d77b15ea964\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Video Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Video Help\&quot;,\&quot;UniqueId\&quot;:\&quot;b1b151a9-e596-d9ca-edb4-1d73dedc79ad\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load MetaPage Instance Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load MetaPage instance menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;af0c2338-1c1d-94db-28fa-2f37521a76cd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Online Help Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Online Help\&quot;,\&quot;UniqueId\&quot;:\&quot;8bfadbe2-2102-cdf1-8c3c-704de35c52a9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;64886e21-8d01-7c15-dacf-b26611c76c8c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Dynamic Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load dynamic menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;2d2b91cc-d758-bdd7-60dd-773525d68924\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Help Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load help menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;2af3d4df-34fb-6877-47bc-0cb352f30c43\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load MetaPage Instance Help Menu For Application Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load MetaPage instance help menu for application.\&quot;,\&quot;UniqueId\&quot;:\&quot;843d5522-4e76-5f31-27d4-5fdb2d42ee89\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Video Help Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load video help.\&quot;,\&quot;UniqueId\&quot;:\&quot;972cc73b-580d-adc4-afa7-4cc145a29564\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Menu\&quot;,\&quot;Key\&quot;:\&quot;Unable To Localize Application Help Menu Items\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable To Localize Application Help Menu Items\&quot;,\&quot;UniqueId\&quot;:\&quot;20fb1d95-6943-7218-0d66-8e890de7f2d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Copy Page URL Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy Page URL\&quot;,\&quot;UniqueId\&quot;:\&quot;d65f3dad-46ab-9d3a-b935-5a5389723ced\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Save Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to save quick links. \&quot;,\&quot;UniqueId\&quot;:\&quot;3324a006-a487-fc3d-6850-7bff386b13e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;fbf93d57-12da-b5a2-541c-757aede37556\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Links\&quot;,\&quot;UniqueId\&quot;:\&quot;75c09798-16b5-511d-f8a0-e73732adb5b9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Link\&quot;,\&quot;UniqueId\&quot;:\&quot;9beb44a3-0e7e-ed4e-b271-0c4f6fe2f3a7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Quick Link Home Page Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load quick link home page.\&quot;,\&quot;UniqueId\&quot;:\&quot;cd8ea220-5ad0-4bf1-3c11-49563e0a0ab1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;System Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System Link\&quot;,\&quot;UniqueId\&quot;:\&quot;5d37eabe-57e1-de69-c2a0-47909170f808\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Confirmation Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to restore to default quick links?\&quot;,\&quot;UniqueId\&quot;:\&quot;c662812b-71c8-184d-4812-77ff9c91514a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore Defaults\&quot;,\&quot;UniqueId\&quot;:\&quot;6ed4c574-19bc-9fd7-997c-4ddccca45698\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;User Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Link\&quot;,\&quot;UniqueId\&quot;:\&quot;87aa35a4-75a2-a67d-8dc9-aaff50709483\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page Id\&quot;,\&quot;UniqueId\&quot;:\&quot;723c2b83-834b-3b42-0806-a7f2965e523a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;bffd8443-1676-a67f-1590-477883ad4100\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Type\&quot;,\&quot;UniqueId\&quot;:\&quot;c22fe4a8-873e-e78d-e6ff-d54740e56a42\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;58189bfc-407f-44b1-7b44-aec6c7c05bf9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Menu Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu\&quot;,\&quot;UniqueId\&quot;:\&quot;f5042293-5899-4cd4-5068-d3fb24a49658\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Name\&quot;,\&quot;UniqueId\&quot;:\&quot;426ff86d-0664-78c1-865c-25843fe4a57f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Duplicate Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Quick Link with this name already exists.\&quot;,\&quot;UniqueId\&quot;:\&quot;7fbc7d8c-2d4c-9eda-d06f-1705f3fbb01d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;b3b8e120-8953-7192-da1a-8dc11903b494\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Type\&quot;,\&quot;UniqueId\&quot;:\&quot;ae4c38da-3b1e-a118-ed27-48f0612ef56e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Application Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Id\&quot;,\&quot;UniqueId\&quot;:\&quot;4ff72987-769a-2eb0-0789-ce7d7f83401d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Icon Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon\&quot;,\&quot;UniqueId\&quot;:\&quot;d2220954-fb8d-56ac-f5bd-97b897026d32\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;90258de5-f723-a7e0-f104-c12c9169592e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Choose Icon Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose icon\&quot;,\&quot;UniqueId\&quot;:\&quot;d532e36a-130b-a4ae-af6c-90d271ac299b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Confirm Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;02d3e9b8-80ec-5fe7-2f7d-fd5a3564f935\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Not Found Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu path [{0}] was not found.\&quot;,\&quot;UniqueId\&quot;:\&quot;d0fa4b95-4733-1145-58f0-699e5769d891\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Remove Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to remove quick link.\&quot;,\&quot;UniqueId\&quot;:\&quot;aa61ef4b-2088-9fbb-9725-4a3b8663741c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;31f49cf8-cbab-38f8-bf33-7c8ab8b0fb98\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Change Icon Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Change\&quot;,\&quot;UniqueId\&quot;:\&quot;6306c4c9-56a6-2b1a-0e2f-8c773074b0d1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Application Icons Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load application icons.\&quot;,\&quot;UniqueId\&quot;:\&quot;50cb16dd-9a62-2bf5-793b-8367052b07cc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Parameters Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Parameters\&quot;,\&quot;UniqueId\&quot;:\&quot;e3eff73f-cd32-0457-f566-e3b7315fda12\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Grid Filters Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Grid Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;3f202bf6-8aef-9709-5c64-0bd3a75298e3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;3de7df8d-3072-2155-fefe-61e620042bdd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: Custom Action Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom Action\&quot;,\&quot;UniqueId\&quot;:\&quot;e92ee66f-0e9a-7d8f-d947-3e7d064447a3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Load Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to load quick links.\&quot;,\&quot;UniqueId\&quot;:\&quot;b57830d4-cc2e-10fe-2d6a-6aa8c42ff04a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Icon Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon\&quot;,\&quot;UniqueId\&quot;:\&quot;a8870083-fe8f-df24-d8cb-9f1df26259a8\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Add New Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add New\&quot;,\&quot;UniqueId\&quot;:\&quot;6b820e82-625e-7df7-d3be-23b423f71124\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Edit Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;e00d8420-456b-ed0d-e7b3-b2852b3a1f13\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Reorder Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Reorder\&quot;,\&quot;UniqueId\&quot;:\&quot;bb6c66ef-474b-bfae-6921-e32abd259726\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;fe33fc54-527f-fa22-e593-ec931d946354\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Home Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;286f9da0-b3d0-170c-00ee-0f369c11d25e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Unable To Restore Default Quick Links Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to restore default quick links.\&quot;,\&quot;UniqueId\&quot;:\&quot;ee683ee5-d569-c34e-478f-24f90c5f2d3d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Name Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;e5fb855c-f204-e437-e3d5-4de85264f8f4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Source Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Source Application\&quot;,\&quot;UniqueId\&quot;:\&quot;48506814-2f1b-4a6a-c717-8140547d0f78\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;d6d4608b-2fad-115a-f13a-ee10df2d5e03\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Restore Defaults Confirmation Dialog: Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Restore Defaults\&quot;,\&quot;UniqueId\&quot;:\&quot;00f72a5d-757d-5155-5cd0-185231e97c30\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;New Quick Link Page Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Quick Link\&quot;,\&quot;UniqueId\&quot;:\&quot;b0eaf9bb-08f5-1913-70e3-c19100fc58f1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Visible Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Visible\&quot;,\&quot;UniqueId\&quot;:\&quot;18ca70d1-4d39-08aa-2931-2af9216db68a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Menu Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Menu path cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;bea2e56d-cb63-90a9-f01e-090bf2018792\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Type Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page Type\&quot;,\&quot;UniqueId\&quot;:\&quot;39c85077-0362-2791-591f-88c7cb7adb22\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Are you sure you want to delete quick link {0}?\&quot;,\&quot;UniqueId\&quot;:\&quot;606dc3e4-a515-a01c-fc66-5a72b82111c2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Name Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;38ca38f9-9f6e-a83f-d565-4ae503815c93\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Visible Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Visible\&quot;,\&quot;UniqueId\&quot;:\&quot;4368c52b-d635-352d-5802-4f9a02b92319\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: Header\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;83b7b9b2-eb51-48d4-ca60-4d4545b548c9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Empty Icon Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Icon cannot be empty.\&quot;,\&quot;UniqueId\&quot;:\&quot;0dc3e304-6044-3250-1143-1ef926e5f8af\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Page Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Page\&quot;,\&quot;UniqueId\&quot;:\&quot;1185744c-8de8-c975-f6ed-b6d5152ce8dc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Choose Icon Dialog OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Choose\&quot;,\&quot;UniqueId\&quot;:\&quot;94e726ee-2aac-7556-0650-55705850c8e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Delete Confirmation Dialog: OK Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;d898af0d-f9ad-3cf2-4aee-b4d794f08e4f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Type: System Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System\&quot;,\&quot;UniqueId\&quot;:\&quot;9199c09f-43b5-ae8d-cbb6-c033000ed7ff\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Home Page Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Home Page\&quot;,\&quot;UniqueId\&quot;:\&quot;95dcacb9-5f32-f595-c0a3-5a1411bef71c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Name Header Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name\&quot;,\&quot;UniqueId\&quot;:\&quot;b6740ace-5a50-71fb-134d-9ffe9c6517aa\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Quick Links\&quot;,\&quot;Key\&quot;:\&quot;Administrator Link Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Administrator Link\&quot;,\&quot;UniqueId\&quot;:\&quot;18ef9b2f-67e8-c5c6-1ef7-7ac3e0895f33\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Status Bar\&quot;,\&quot;Key\&quot;:\&quot;Header Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;STATUS\&quot;,\&quot;UniqueId\&quot;:\&quot;09b34bef-d84d-d462-2ac3-39f66525ff2f\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-12" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$select</stringProp>
                  <stringProp name="Argument.value">ProductId</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/ProductModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-13" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;AccellosOne Pulse\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;32c3f72c-7deb-e980-c88e-450fd8c7fedb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;Advantage Commander\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;bcc2c959-ff98-c537-7666-b06a2ffe954c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;cdae598b-58be-60ad-1f8b-3715eba84959\&quot;},{\&quot;ApplicationId\&quot;:\&quot;Supply Chain Advantage\&quot;,\&quot;GroupId\&quot;:\&quot;Application\&quot;,\&quot;Key\&quot;:\&quot;Application Display Name\&quot;,\&quot;LocalizedValue\&quot;:null,\&quot;UniqueId\&quot;:\&quot;5633ad44-8db0-6a60-043c-2fbf14db173a\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-15" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$inlinecount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$inlinecount</stringProp>
                  <stringProp name="Argument.value">allpages</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$select</stringProp>
                  <stringProp name="Argument.value">Id,ApplicationId,IsPersistable,IsRead,IsFavorite,Status,SourceId,SourceUserId,PayloadPreview,SourceType,TargetUserId,PayloadType,PayloadHeader,DateCreated</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$orderby" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$orderby</stringProp>
                  <stringProp name="Argument.value">IsFavorite desc,DateCreated desc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-16" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$filter" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$filter</stringProp>
                  <stringProp name="Argument.value">Status eq &apos;new&apos;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$inlinecount" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$inlinecount</stringProp>
                  <stringProp name="Argument.value">allpages</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$top" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">$top</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserMessages</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-14" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetInstalledHost</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-17" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetProductsWithInheritance</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-18" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetAuthorizedMobileApplications</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-20" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Add Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Add\&quot;,\&quot;UniqueId\&quot;:\&quot;d80577c3-7434-01fc-53c8-fbffe8a4d79e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Edit Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Edit\&quot;,\&quot;UniqueId\&quot;:\&quot;4747b5f8-d7b8-58f0-54a9-5788e5a682cd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Delete Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;7c8f1d9b-3e93-5b4f-d925-e13683111ec9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Save Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Save\&quot;,\&quot;UniqueId\&quot;:\&quot;b92211c6-011a-0a76-ecaa-b6a9bbd5faac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Finish Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Finish\&quot;,\&quot;UniqueId\&quot;:\&quot;68273c7e-156e-2f8d-cf28-676431b85dd7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Back Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Back\&quot;,\&quot;UniqueId\&quot;:\&quot;3a2b0189-c231-6393-1eb6-45cd3ff327c6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Next Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next\&quot;,\&quot;UniqueId\&quot;:\&quot;cbe50bd5-4494-6b61-15be-69358d8965b9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Cancel Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cancel\&quot;,\&quot;UniqueId\&quot;:\&quot;b00b0050-f64c-d597-79b7-347faf5eae41\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Ok Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OK\&quot;,\&quot;UniqueId\&quot;:\&quot;c4dcf624-e0da-5916-e4c5-878114044a20\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Copy Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Copy\&quot;,\&quot;UniqueId\&quot;:\&quot;9626abe4-38af-5cb8-fdf9-36a6948018a3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Search Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;7dee3829-6e8d-e90f-9d61-991c8e5736fb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;System Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;System\&quot;,\&quot;UniqueId\&quot;:\&quot;f17de9c4-209b-88bf-59f1-7f10d854b942\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Id Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Id\&quot;,\&quot;UniqueId\&quot;:\&quot;f12738e1-7e13-fccb-8818-19dcc78eec63\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Install Print Station Label\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Install Print Station\&quot;,\&quot;UniqueId\&quot;:\&quot;4579ae15-6d03-bfdf-e4e4-09998f8fa00c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Tenant Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Tenant\&quot;,\&quot;UniqueId\&quot;:\&quot;68aab607-7da8-eb35-b262-454e2cbff1c6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application\&quot;,\&quot;UniqueId\&quot;:\&quot;802e543d-8b37-4a4f-da8c-53a3d2104b07\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Files Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Files\&quot;,\&quot;UniqueId\&quot;:\&quot;36b4507c-b385-dcae-2a54-d55e4bbf35a4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Confirm Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Please Confirm\&quot;,\&quot;UniqueId\&quot;:\&quot;5052da63-6215-caf3-6ca9-b8bd87369913\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Get User Mode Preferences Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get user preferences.\&quot;,\&quot;UniqueId\&quot;:\&quot;c8254a47-610c-545c-08a3-1b43dc935b6a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Update User Mode Preferences Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to update user preferences.\&quot;,\&quot;UniqueId\&quot;:\&quot;10207188-e241-165d-f400-0a0c9cf90b15\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Update User Mode Preferences Success Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User preferences have been updated.\&quot;,\&quot;UniqueId\&quot;:\&quot;7e190c2d-711b-6727-d190-cdbd4af429d4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Page Access Denied Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not authorized to view this page.\&quot;,\&quot;UniqueId\&quot;:\&quot;ce38acaa-80ef-4e08-5e34-5a21d68b3210\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Email Log Dialog: Get Default Email Template Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get defaut email template.\&quot;,\&quot;UniqueId\&quot;:\&quot;ab8d8a46-e579-6730-7a44-6c69c96ff8ac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Workflow Parameter Description\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workflow\&quot;,\&quot;UniqueId\&quot;:\&quot;d31670c0-d4b2-539d-94b0-ef26b4dd7fe9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;True Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;4da676db-791a-0900-44ec-08e08fdfcd64\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;False Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;524ce932-c90f-ae29-eaaa-b0e380b3cf46\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Auto Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Auto\&quot;,\&quot;UniqueId\&quot;:\&quot;f3b42b33-84fe-4bef-bd47-b39439248e01\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;On Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On\&quot;,\&quot;UniqueId\&quot;:\&quot;c90d869a-b834-7c90-6bdc-96352da29bfc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Off Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Off\&quot;,\&quot;UniqueId\&quot;:\&quot;3e064ef0-a8ae-8107-72d9-53ea87e2aabb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Allow Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;53c0234d-9a1d-ae9c-741e-b77b0baed5cb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Deny Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;7c277807-244f-22a7-6327-e4762663e0c2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;General\&quot;,\&quot;Key\&quot;:\&quot;Not Declared Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Not Declared\&quot;,\&quot;UniqueId\&quot;:\&quot;0ceaca93-4ce6-cacc-37d7-b2eff6bc391b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Selected Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export selected\&quot;,\&quot;UniqueId\&quot;:\&quot;d64fc79e-3826-7f63-6baf-f90b7962b655\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all\&quot;,\&quot;UniqueId\&quot;:\&quot;2736366b-d65d-c710-2b39-57b428b275ab\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Current Application Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export current application\&quot;,\&quot;UniqueId\&quot;:\&quot;5b8c5cb0-d384-5b41-b252-0c742059de83\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Applications Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all applications\&quot;,\&quot;UniqueId\&quot;:\&quot;ab35a872-70d3-17f7-5327-fd118f4f4d59\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export Current Deliverer Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export current deliverer\&quot;,\&quot;UniqueId\&quot;:\&quot;5a13f90c-1f33-cb94-130c-18ac8fd80307\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Assets\&quot;,\&quot;Key\&quot;:\&quot;Export All Deliverers Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Export all deliverers\&quot;,\&quot;UniqueId\&quot;:\&quot;570ef397-60fc-0970-03f2-92688df2f9dd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Is Not Supported Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Clickonce is not supported\&quot;,\&quot;UniqueId\&quot;:\&quot;149cb799-2349-10a6-876d-9b61d2a8e0ed\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Is Not Supported Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Do you want to enable clickonce?\&quot;,\&quot;UniqueId\&quot;:\&quot;e9c34578-ab76-fb20-ec46-9d5d07c0e081\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce Yes Text Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Yes\&quot;,\&quot;UniqueId\&quot;:\&quot;a7e8b498-8fd6-025f-7e39-a6acf2f3ec06\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Click Once Dialog\&quot;,\&quot;Key\&quot;:\&quot;Clickonce No Text Button\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No\&quot;,\&quot;UniqueId\&quot;:\&quot;61e279da-2d36-857c-93ea-57be347a3115\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New User Template Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User Template\&quot;,\&quot;UniqueId\&quot;:\&quot;35155925-ebcc-f1d5-5164-051f9b025043\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New User Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User\&quot;,\&quot;UniqueId\&quot;:\&quot;6c51d34c-4141-376c-61bd-56991db3d47a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Users And Roles\&quot;,\&quot;Key\&quot;:\&quot;New Role Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Role\&quot;,\&quot;UniqueId\&quot;:\&quot;d0cbff59-a4b9-fed3-7262-120c892534bf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Select User Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select User\&quot;,\&quot;UniqueId\&quot;:\&quot;2d17ebac-7276-73ac-27e3-9cf17f600455\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Select User Dialog\&quot;,\&quot;Key\&quot;:\&quot;Select User Template Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select User Template\&quot;,\&quot;UniqueId\&quot;:\&quot;7615a05d-1f62-6a2c-1b91-5ee537f01a66\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select Users from Active Directory\&quot;,\&quot;UniqueId\&quot;:\&quot;7abf72ad-694e-b048-610e-c2e5305cfc70\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Button Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;16fdc68f-ffcc-21b2-3b24-e9a4f6001e65\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Filters Panel Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Filters\&quot;,\&quot;UniqueId\&quot;:\&quot;41918719-2ca4-f936-8234-95de5544eff7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Users Panel Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Users\&quot;,\&quot;UniqueId\&quot;:\&quot;ffe12451-2cb4-a90c-af35-ccf855bb05ac\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchText\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search\&quot;,\&quot;UniqueId\&quot;:\&quot;a8f89ca4-14cb-9dd3-c198-a4fb9305aa8c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchProperty\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Search Field\&quot;,\&quot;UniqueId\&quot;:\&quot;9716178b-488f-be99-5fb3-f300040ac826\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: searchLocal\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Local Computer\&quot;,\&quot;UniqueId\&quot;:\&quot;2f2a8ae9-e1d1-48f8-989d-e02e8a1975e6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Panel Filter: sizeLimit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Records Limit\&quot;,\&quot;UniqueId\&quot;:\&quot;f30c29c3-b853-1582-ce91-0b0bb20a9589\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Search Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to search users in Active Directory.\&quot;,\&quot;UniqueId\&quot;:\&quot;7288281c-fc89-d278-da56-d6a89dd64b76\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Common Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Common Name (cn)\&quot;,\&quot;UniqueId\&quot;:\&quot;589d4e3e-d0c4-5c2b-1040-d530e289dc44\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Account Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Account Name (sAMAccountName)\&quot;,\&quot;UniqueId\&quot;:\&quot;369f3788-5f6b-2716-eca8-fd0a87ded268\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;First Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name (givenName)\&quot;,\&quot;UniqueId\&quot;:\&quot;5528f67c-c01c-f025-6a0c-7ffe313d2936\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Last Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name (sn)\&quot;,\&quot;UniqueId\&quot;:\&quot;840049be-4f4d-fff4-ac0d-a4cea0c74087\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Email Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email (mail)\&quot;,\&quot;UniqueId\&quot;:\&quot;1ca05620-f40c-f890-7251-7735a3e31a4b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Display Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Display Name (displayName)\&quot;,\&quot;UniqueId\&quot;:\&quot;c47f3e2b-08c5-bade-0b94-a98e843cdf0e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;User Principal Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Principal Name (userPrincipalName)\&quot;,\&quot;UniqueId\&quot;:\&quot;1fab3120-f4d7-30de-ddb2-1e6d9f7ecd6c\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;Name Property Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Name (name)\&quot;,\&quot;UniqueId\&quot;:\&quot;10dba6a4-e2f3-7cda-cb41-1c724fb628cc\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_LogOnName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;User Name\&quot;,\&quot;UniqueId\&quot;:\&quot;654525c3-7a0b-a8a1-7fe6-62c130aa366a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_FirstName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Name\&quot;,\&quot;UniqueId\&quot;:\&quot;ec3eab46-37f0-97d6-229c-21f214650a02\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_LastName\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Name\&quot;,\&quot;UniqueId\&quot;:\&quot;fcffb594-09a9-f7c2-88dc-00fb7cc51bfb\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_Email\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Email\&quot;,\&quot;UniqueId\&quot;:\&quot;93b292cf-3197-99bd-e10a-e6864af40334\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Admin: Users From AD Dialog\&quot;,\&quot;Key\&quot;:\&quot;grid_Users_Column_Header_Phone\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Phone\&quot;,\&quot;UniqueId\&quot;:\&quot;13ca4f70-85e3-b5b9-9922-521eadfa2d62\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New User Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New User Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;aa63093d-02de-7c1f-7e6b-3dd225925eb2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New Role Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Role Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;1e87828a-e58b-31bd-b7c1-3699a912cbf6\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;User Menu\&quot;,\&quot;Key\&quot;:\&quot;New Scheduled Task Advanced Mode Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New Scheduled Task Advanced Mode\&quot;,\&quot;UniqueId\&quot;:\&quot;c0d7bdbc-de9a-396e-20ea-087d31da7f9f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Identity Claims\&quot;,\&quot;Key\&quot;:\&quot;Unable To Get Identity Claims Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unable to get identity claims.\&quot;,\&quot;UniqueId\&quot;:\&quot;98b51f13-0766-415c-22ca-657ad13745e9\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;db50a051-f47a-51fc-b729-653081c21985\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Text\&quot;,\&quot;UniqueId\&quot;:\&quot;be2d1311-2358-1c39-037a-593c4083cac1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;NumericInteger\&quot;,\&quot;LocalizedValue\&quot;:\&quot;NumericInteger\&quot;,\&quot;UniqueId\&quot;:\&quot;6a07c853-c7d5-39da-8eea-80464a400c06\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;NumericDecimal\&quot;,\&quot;LocalizedValue\&quot;:\&quot;NumericDecimal\&quot;,\&quot;UniqueId\&quot;:\&quot;f294186c-06ce-e37c-5f26-0f5671ba1650\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Boolean\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Boolean\&quot;,\&quot;UniqueId\&quot;:\&quot;9eee4160-cc78-5e46-a935-9bf758e0d87b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;Guid\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Guid\&quot;,\&quot;UniqueId\&quot;:\&quot;aeab3ebe-c451-6264-6a38-da01cef9aac1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;ValidatedSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ValidatedSource\&quot;,\&quot;UniqueId\&quot;:\&quot;3e8d4534-5ff6-2d5f-71c4-f02143a5d8db\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;ValidatedMultiSelectionSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ValidatedMultiSelectionSource\&quot;,\&quot;UniqueId\&quot;:\&quot;36a7c609-4062-ee6a-d094-f74c49a2bbb2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;CustomSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CustomSource\&quot;,\&quot;UniqueId\&quot;:\&quot;b6a0845f-c229-ae7a-9d08-9bd3e2b0eb7b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;CustomMultiSelectionSource\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CustomMultiSelectionSource\&quot;,\&quot;UniqueId\&quot;:\&quot;88d33bee-3215-26b0-3091-df14cc63e59d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Editors\&quot;,\&quot;Key\&quot;:\&quot;AutoIncremented\&quot;,\&quot;LocalizedValue\&quot;:\&quot;AutoIncremented\&quot;,\&quot;UniqueId\&quot;:\&quot;86820af4-54ca-963c-6b7e-4b7258a5cace\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Custom Source\&quot;,\&quot;Key\&quot;:\&quot;grid_CustomSource_Column_Header_value\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Value\&quot;,\&quot;UniqueId\&quot;:\&quot;2c31063f-4343-2c6f-3265-02baf3a26105\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Custom Source\&quot;,\&quot;Key\&quot;:\&quot;grid_CustomSource_Column_Header_description\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Description\&quot;,\&quot;UniqueId\&quot;:\&quot;6e07bf5f-bc1e-733e-ee1d-105ba4a43ded\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarScreenID\&quot;,\&quot;LocalizedValue\&quot;:\&quot;ScreenID\&quot;,\&quot;UniqueId\&quot;:\&quot;eb45f143-62d2-025a-4825-558384670f5d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarScreenDescription\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Screen Description\&quot;,\&quot;UniqueId\&quot;:\&quot;4ce00501-1add-19a4-92b4-3589b790147f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateAllow\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;debf9df7-4aaf-d647-9e74-1414c199122a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateDeny\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;504e5a1f-f579-b0c9-70ae-d1ab0364450d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionStateUndefined\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Undefined\&quot;,\&quot;UniqueId\&quot;:\&quot;5808fa57-1012-4296-bf16-21eed92028ec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDAccess\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Access\&quot;,\&quot;UniqueId\&quot;:\&quot;905795ec-cf01-3f0c-ae6e-35e251e73661\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDUpdate\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Update\&quot;,\&quot;UniqueId\&quot;:\&quot;803332ff-006c-1da3-3b5a-4f768427077e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDCreate\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Create\&quot;,\&quot;UniqueId\&quot;:\&quot;eb94faa9-c113-bd5d-78db-5ea405446f79\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Components\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPanelbarPermissionCRUDDelete\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Delete\&quot;,\&quot;UniqueId\&quot;:\&quot;41f71a78-cc5b-2311-66a8-19d61d38176f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;2604f2bb-dbbb-0fc1-8ed1-f0e6d9f84319\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;authorizationDefaultModule\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;0f9e22b1-8631-04a0-25c1-cf58b88f8236\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuDefault\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;6dc6ffe1-813a-f6a8-1e21-79e51d037904\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuModules\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Modules\&quot;,\&quot;UniqueId\&quot;:\&quot;497b0c94-8c3a-25b0-48b6-911b1615dba5\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationMenuScreenAuthorizations\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Screen Authorizations\&quot;,\&quot;UniqueId\&quot;:\&quot;bff633c2-4757-cfdd-56a7-8b5c3c259e5b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultApplicationPermission\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Application Permission\&quot;,\&quot;UniqueId\&quot;:\&quot;06f458d8-53ab-40d2-f954-d55898efd464\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationGeneralCategory\&quot;,\&quot;LocalizedValue\&quot;:\&quot;General\&quot;,\&quot;UniqueId\&quot;:\&quot;95a849e8-90ff-3bef-b911-eef9143b847b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultCustomPermissionDefaultState\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Custom Permission Default State\&quot;,\&quot;UniqueId\&quot;:\&quot;657a3390-a851-17b2-ef62-1044eaabf95b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefaultWorkspaceScreenDefaultPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Screen Default Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;a433eb43-38d1-0aec-5337-059f0a2beac3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationAccess\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Access\&quot;,\&quot;UniqueId\&quot;:\&quot;0a5a30a6-5881-68b1-3d5f-c6df3fd982b4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationDefault\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Default\&quot;,\&quot;UniqueId\&quot;:\&quot;84da150c-e392-00b1-106e-34eef6df3a0a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationModulesModulePermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Module Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;16f61fe0-7f68-bd3e-3cd7-c8aa4a2f8a13\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;AuthorizationModulesWorkspaceScreenDefaultPermissions\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Workspace Screen Default Permissions\&quot;,\&quot;UniqueId\&quot;:\&quot;a519bda7-f537-2c34-54ae-da092d048b19\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;Authorize Everything Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Authorize Everything\&quot;,\&quot;UniqueId\&quot;:\&quot;c03c4173-f197-0439-f5d9-0188dacea9bd\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;Authorize Everything Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You are about to authorize every application and screen.\&quot;,\&quot;UniqueId\&quot;:\&quot;7f7bfaa0-6c4c-e393-b447-474eb1dce8d3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Authorization\&quot;,\&quot;Key\&quot;:\&quot;No Inherited Permissions Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;No inherited permissions.\&quot;,\&quot;UniqueId\&quot;:\&quot;46b79886-5258-d14a-964d-dd052c61c9d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Old Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Old\&quot;,\&quot;UniqueId\&quot;:\&quot;5c277bcc-1496-bac9-36f1-26fc019ed847\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;New Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;New\&quot;,\&quot;UniqueId\&quot;:\&quot;dd84ebd5-72d5-715d-b197-8e3d0b3e3b90\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Loading Error Message\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Failed to load properties.\&quot;,\&quot;UniqueId\&quot;:\&quot;29edb726-52d4-a4e0-b2f5-8f933a5e61b4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Select Property Dialog Title\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Select Property\&quot;,\&quot;UniqueId\&quot;:\&quot;ba66a265-515b-9da2-8e59-bcca4224e33a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Alert Property Input Component\&quot;,\&quot;Key\&quot;:\&quot;Collection Property Root Label Text\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Collection\&quot;,\&quot;UniqueId\&quot;:\&quot;7977896a-0bd3-a261-9d7c-95df67338fe3\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;PrintStationLogDownloadMessages\&quot;,\&quot;Key\&quot;:\&quot;Logs downloaded successfully\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logs downloaded successfully for {0} \&quot;,\&quot;UniqueId\&quot;:\&quot;8f6e62ea-abbf-e287-daf1-5bfc5caa625b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;PrintStationLogDownloadMessages\&quot;,\&quot;Key\&quot;:\&quot;Logs download failed\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Logs download failed for {0} \&quot;,\&quot;UniqueId\&quot;:\&quot;7fb0bbf3-4db5-bfd6-0e78-476803744e81\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;MethodToCallParameters\&quot;,\&quot;Key\&quot;:\&quot;DateParameterPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enter Date\&quot;,\&quot;UniqueId\&quot;:\&quot;40ae269b-29c6-8ad4-f758-9f3c494d8b2f\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;MethodToCallParameters\&quot;,\&quot;Key\&quot;:\&quot;TimeParameterPlaceholder\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Enter Time\&quot;,\&quot;UniqueId\&quot;:\&quot;d34c4eda-0533-853e-b69d-eec10c968d7e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;a0f8f035-6903-d18a-4fb8-dd0c50d0d4ec\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Image\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Image\&quot;,\&quot;UniqueId\&quot;:\&quot;c5391fb4-772c-17c5-6267-45a0675004e4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.JavaScript\&quot;,\&quot;LocalizedValue\&quot;:\&quot;JavaScript\&quot;,\&quot;UniqueId\&quot;:\&quot;01a8ba09-d3b6-5b6a-d3de-7a037bd8d0f7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.CascadeStyleSheet\&quot;,\&quot;LocalizedValue\&quot;:\&quot;CascadeStyleSheet\&quot;,\&quot;UniqueId\&quot;:\&quot;1c64dd68-498c-665c-453e-d2217be67eee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;ResourceKinds.Html\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Html\&quot;,\&quot;UniqueId\&quot;:\&quot;2e631c21-eb73-c97d-1585-5ba155bb8356\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;e24b7544-fadb-149a-fa71-11c595172f2b\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.ScheduleServer\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Schedule Server\&quot;,\&quot;UniqueId\&quot;:\&quot;07d1e4d1-5ce4-df9c-8722-0db812ac8192\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.AlertsDeliverer\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Alerts Deliverer\&quot;,\&quot;UniqueId\&quot;:\&quot;5836099b-a6be-c9d8-d13c-065f946575c7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.Agent\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Agent\&quot;,\&quot;UniqueId\&quot;:\&quot;d1670328-c4b4-b103-b071-654b8bf17bfe\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.PrintManager\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print Manager\&quot;,\&quot;UniqueId\&quot;:\&quot;f5a5719c-eea5-6121-047f-963e6ed9b308\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PluginKinds.PrintStation\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Print Station\&quot;,\&quot;UniqueId\&quot;:\&quot;8c3bc3cd-97cb-7eea-b745-cd5941b32ec2\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.Unknown\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Unknown\&quot;,\&quot;UniqueId\&quot;:\&quot;38d6b19c-f1f5-e911-97c2-2abdee8e8d11\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.OnDemandAndPersist\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On Demand And Persist\&quot;,\&quot;UniqueId\&quot;:\&quot;9445edda-ad1a-c9af-91e9-3f51325f741d\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;AppDomainCreateContext.OnDemandAndDispose\&quot;,\&quot;LocalizedValue\&quot;:\&quot;On Demand And Dispose\&quot;,\&quot;UniqueId\&quot;:\&quot;554f09ed-e25b-0c36-9592-a256de00d153\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Inherit\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Inherit\&quot;,\&quot;UniqueId\&quot;:\&quot;01119e95-976e-4c90-7547-f3c61559e1ee\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Deny\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Deny\&quot;,\&quot;UniqueId\&quot;:\&quot;814493c2-d2a4-748d-8843-5fb739596ac7\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Enumerations\&quot;,\&quot;Key\&quot;:\&quot;PermissionState.Allow\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Allow\&quot;,\&quot;UniqueId\&quot;:\&quot;47e101ed-e1fe-ed3e-bf5a-8e32fc440945\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-21" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;Menu Folder\&quot;,\&quot;Key\&quot;:\&quot;SCA inMotion\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One Mobile\&quot;,\&quot;UniqueId\&quot;:\&quot;db201462-352f-6778-94b8-68f549ce39d0\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError no access\&quot;,\&quot;LocalizedValue\&quot;:\&quot;You do not have access to the application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;3b5091cc-1546-dccf-bd14-6126e1fb2893\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError MT Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Middle tier is not set for application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;50668619-a3ab-5224-8bdd-bef0a28d8b15\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError OData Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;OData provider is not set for application. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;ebb6e985-b82b-ade2-3ee4-dada5957a7bf\&quot;},{\&quot;ApplicationId\&quot;:\&quot;SCA inMotion\&quot;,\&quot;GroupId\&quot;:\&quot;imageErrors\&quot;,\&quot;Key\&quot;:\&quot;imageError endpoint Issue\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Cannot read application&apos;s oData endpoint. Please contact your administrator.\&quot;,\&quot;UniqueId\&quot;:\&quot;56777463-df57-45a0-6860-afc260d517af\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-27" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Settings.ashx/GetHelpLinks</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-23" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27Supply%20Chain%20Advantage%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-24" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Help Menu Item\&quot;,\&quot;Key\&quot;:\&quot;Körber One Administration\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Körber One Administration\&quot;,\&quot;UniqueId\&quot;:\&quot;2036eb84-9b7d-3d0a-459d-4ffd91c3989e\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-25" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27SCA%20inMotion%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-22" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/MobileApplicationMenuByProduct?applicationId=%27HighJump%20One%20Platform%27&amp;$expand=Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes/Nodes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-26" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetSystemConfiguration?configurationId=%27TenantConfiguration%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-29" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-30" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27Supply%20Chain%20Advantage%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-28" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Settings.ashx/GetHelpLinks</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-31" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27Supply%20Chain%20Advantage%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-34" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-38" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Menu.ashx</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-35" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27SCA%20inMotion%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-32" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27Menu%20Folder%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-39" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/VideoSourceModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-37" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionAnswerModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-40" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/Menu.ashx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Login_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1384127085">Value Added Services</stringProp>
                <stringProp name="-777253849">Items by Vendor Item Number</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-36" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27SCA%20inMotion%27&amp;groupId=%27Menu%20Item%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-41" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27HighJump%20One%20Platform%27&amp;configurationId=%27Favorites%27&amp;configurationType=%27favorites%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-43" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetGroupLocalizations?applicationId=%27HighJump%20One%20Platform%27&amp;groupId=%27home%27&amp;languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-44" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27HighJump%20One%20Platform%27&amp;configurationId=%27_hj_one_quicklinks%27&amp;configurationType=%27quicklinks%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-46" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/UserSecretQuestionModels</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T03_ClickOnMenu" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-55" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657400305504</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_ConnToken2" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">C_ConnToken2</stringProp>
              <stringProp name="RegexExtractor.regex">ConnectionToken&quot;:&quot;(.*?)&quot;,&quot;ConnectionId</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-56" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657400389307</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Menu-54" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T04_SelectSupplyChainAdvantage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Supply-63" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657400450044</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Supply-64" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657400305506</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Supply-65" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T05_K.MotionAdv" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="K.Motion-71" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657400510048</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="K.Motion-73" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657400305507</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="K.Motion-72" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T06_SelectInventory" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T07_SelectLocation" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Location-78" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/Settings.ashx/Application</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Location-79" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/Settings.ashx/Application</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Location-80" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/SearchPage.ashx?id=1044</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Location-81" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">id</stringProp>
                  <stringProp name="Argument.value">1044</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/SearchPage.ashx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="SearchLocations_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1446231353">Putwall</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Location-82" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RegisterChildSession?applicationId=%27Supply%20Chain%20Advantage%27&amp;connectionType=%27platform%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T08_SelectWH&amp;Staging" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Staging-83" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657400569308</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Staging-85" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientProtocol" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientProtocol</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="clientInstanceId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientInstanceId</stringProp>
                  <stringProp name="Argument.value">00000000-0000-0000-0000-000000000000</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="connectionData" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">connectionData</stringProp>
                  <stringProp name="Argument.value">[{&quot;name&quot;:&quot;usermessageshub&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_</stringProp>
                  <stringProp name="Argument.value">1657400305508</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/negotiate</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/plain, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Staging-84" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/RefreshSession</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T09_Query" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-90" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetUserConfiguration?userId=guid%27e252ac8f-2c09-4a56-b53f-eef1639bc77f%27&amp;applicationId=%27WAAdvantageDashboard%27&amp;configurationId=%2761%27&amp;configurationType=%271%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-91" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/ReportPage.ashx?id=61&amp;WH_ID=esek33&amp;Location_ID=%25&amp;Location_Type=S</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authenticationticket,content-type,hj-verification-token,platform-application-id</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-92" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">30004</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/SupplyChainAdvantage/WAAdvantageDashboard/ReportPage.ashx?id=61&amp;WH_ID=esek33&amp;Location_ID=%25&amp;Location_Type=S</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Platform-Application-Id" elementType="Header">
                  <stringProp name="Header.name">Platform-Application-Id</stringProp>
                  <stringProp name="Header.value">Supply Chain Advantage</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Query_Page_Check" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1962311920">BLUDWN</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query-93" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{ &quot;value&quot;: &quot;[{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Column Menu: settings\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Column Settings\&quot;,\&quot;UniqueId\&quot;:\&quot;096e7ca9-ff9d-4540-5c0d-8f55d9827ef4\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: first\&quot;,\&quot;LocalizedValue\&quot;:\&quot;First Page\&quot;,\&quot;UniqueId\&quot;:\&quot;87ab51d1-258a-02f1-dc64-fefc4c94ff6a\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: last\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Last Page\&quot;,\&quot;UniqueId\&quot;:\&quot;860aea2d-701c-7b75-d0f0-5e4d0fd55f5e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: next\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Next Page\&quot;,\&quot;UniqueId\&quot;:\&quot;27607bf0-7b95-e517-f3c2-231aa73d965e\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: previous\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Previous Page\&quot;,\&quot;UniqueId\&quot;:\&quot;e215e76d-1443-64a2-401d-a36ce4674960\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: refresh\&quot;,\&quot;LocalizedValue\&quot;:\&quot;Refresh\&quot;,\&quot;UniqueId\&quot;:\&quot;ac75ec10-22f3-58d5-c871-368d327c2bb1\&quot;},{\&quot;ApplicationId\&quot;:\&quot;HighJump One Platform\&quot;,\&quot;GroupId\&quot;:\&quot;Core: Grid Labels\&quot;,\&quot;Key\&quot;:\&quot;Pager: morePages\&quot;,\&quot;LocalizedValue\&quot;:\&quot;More Pages\&quot;,\&quot;UniqueId\&quot;:\&quot;51089d56-d157-4b64-be65-447c9542e5f4\&quot;}]&quot; }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LocalizeTokens?languageId=%27english%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="SL_Staging_T10_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-94" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/LogOffRequest?sessionId=guid%274c25cd5b-6628-49e9-84a3-c6cb5c6ff704%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="HJ-Verification-Token" elementType="Header">
                  <stringProp name="Header.name">HJ-Verification-Token</stringProp>
                  <stringProp name="Header.value">${C_VerificationToken1}</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="AuthenticationTicket" elementType="Header">
                  <stringProp name="Header.name">AuthenticationTicket</stringProp>
                  <stringProp name="Header.value">${C_AuthTicket2}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-95" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Default.html</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-96" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/signalr/hubs</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-97" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="d" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">d</stringProp>
                  <stringProp name="Argument.value">1657400603518</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/core/Scripts/App/Version.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-98" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/odata/v12/GetLogOnConfiguration?key=%27iislbha.kscnp-nprd.iaas.js-alz.com%27&amp;isWorkspace=false&amp;languageId=%27%27&amp;logOnParameters=%27%27</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com/core/Default.html</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://iislbha.kscnp-nprd.iaas.js-alz.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;odata=minimalmetadata</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Think Time" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">0</stringProp>
        </TestAction>
        <hashTree>
          <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Pause" enabled="true">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
            <stringProp name="RandomTimer.range">100</stringProp>
          </UniformRandomTimer>
          <hashTree/>
        </hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">300</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Ajith\Results\TransMix\8Aug_OneUser.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Ajith\Results\TransMix\8Aug_OneUser.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
